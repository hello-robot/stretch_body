window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = [{"fullname": "stretch_body", "modulename": "stretch_body", "kind": "module", "doc": "<p><img src=\"../../docs/images/banner.png\" width=\"765\"></p>\n\n<h1 id=\"stretch-body\">Stretch Body</h1>\n\n<p>The stretch_body package provides a low level Python API to the Hello Robot Stretch hardware. This package comes pre-installed on Stretch robots. Tutorials for using this package can be found <a href=\"https://docs.hello-robot.com/0.2/stretch-tutorials/stretch_body/\">on the docs</a>.</p>\n\n<h2 id=\"installing\">Installing</h2>\n\n<p>This package comes pre-installed on Stretch robots. To install or upgrade to a stable Stretch Body for Python3, run:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>$ python3 -m pip install --upgrade hello-robot-stretch-body\n</code></pre>\n</div>\n\n<p>To install or upgrade to a pre-release of Stretch Body for Python3, run:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>$ python3 -m pip install --upgrade --pre hello-robot-stretch-body\n</code></pre>\n</div>\n\n<p>Please report feedback on the <a href=\"https://github.com/hello-robot/stretch_body/issues\">Issue Tracker</a> or the <a href=\"https://forum.hello-robot.com/\">Forum</a>.</p>\n\n<h2 id=\"running-tests\">Running tests</h2>\n\n<p>There are a number of unit, functional, and performance tests within the <code>test/</code> folder, separated into test suites by different files. Suites are separated by a device or functionality within Stretch Body that is being tested.</p>\n\n<p>In Python3, run <code>python3 -m unittest test.test_&lt;suite-name&gt;</code>.</p>\n\n<p>For example, to run the <code>stretch_body.robot.Robot</code> functional tests, run:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>$ git clone https://github.com/hello-robot/stretch_body.git\n$ <span class=\"nb\">cd</span> stretch_body/body\n$ python3 -m unittest test.test_robot\n</code></pre>\n</div>\n\n<h2 id=\"developing\">Developing</h2>\n\n<p>The source code for Stretch Body resides within the <code>stretch_body/</code> folder. You can install Stretch Body as \"editable\", and directly edit the source code to test changes.</p>\n\n<p>In Python3, run <code>python3 -m pip install -e .</code></p>\n\n<p>For example, to test changes to <code>stretch_body.robot.Robot</code>, run:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>$ python3 -m pip uninstall hello-robot-stretch-body <span class=\"c1\"># ensure previous Stretch Body installations are removed</span>\n$ git clone https://github.com/hello-robot/stretch_body.git\n$ <span class=\"nb\">cd</span> stretch_body/body\n$ python3 -m pip install -e .\n</code></pre>\n</div>\n\n<p>Now, make desired edits to the <a href=\"./stretch_body/robot.py\">stretch_body/body/stretch_body/robot.py</a> file. Software using Stretch Body is now using the modified <code>stretch_body.robot.Robot</code> class.</p>\n\n<h2 id=\"deploying\">Deploying</h2>\n\n<p>Increment the version number and run the <code>deploy.sh</code> script. Verify the new release is reflected <a href=\"https://pypi.org/project/hello-robot-stretch-body/\">on PyPI</a>.</p>\n"}, {"fullname": "stretch_body.arm", "modulename": "stretch_body.arm", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "stretch_body.arm.Arm", "modulename": "stretch_body.arm", "qualname": "Arm", "kind": "class", "doc": "<p>API to the Stretch Arm</p>\n", "bases": "stretch_body.prismatic_joint.PrismaticJoint"}, {"fullname": "stretch_body.arm.Arm.__init__", "modulename": "stretch_body.arm", "qualname": "Arm.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">usb</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, {"fullname": "stretch_body.arm.Arm.motor_rad_to_translate_m", "modulename": "stretch_body.arm", "qualname": "Arm.motor_rad_to_translate_m", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ang</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.arm.Arm.translate_m_to_motor_rad", "modulename": "stretch_body.arm", "qualname": "Arm.translate_m_to_motor_rad", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.arm.Arm.home", "modulename": "stretch_body.arm", "qualname": "Arm.home", "kind": "function", "doc": "<p>end_pos: position to end on\nto_positive_stop:\n-- True: Move to the positive direction stop and mark to range_m[1]\n-- False: Move to the negative direction stop and mark to range_m[0]\nmeasuring: After homing to stop, move to opposite stop and report back measured distance\nreturn measured range-of-motion if measuring. Return None if not a valide measurement</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">end_pos</span><span class=\"o\">=</span><span class=\"mf\">0.1</span>, </span><span class=\"param\"><span class=\"n\">to_positive_stop</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">measuring</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.base", "modulename": "stretch_body.base", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "stretch_body.base.Base", "modulename": "stretch_body.base", "qualname": "Base", "kind": "class", "doc": "<p>API to the Stretch Mobile Base</p>\n", "bases": "stretch_body.device.Device"}, {"fullname": "stretch_body.base.Base.__init__", "modulename": "stretch_body.base", "qualname": "Base.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">usb_left</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">usb_right</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, {"fullname": "stretch_body.base.Base.left_wheel", "modulename": "stretch_body.base", "qualname": "Base.left_wheel", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.base.Base.right_wheel", "modulename": "stretch_body.base", "qualname": "Base.right_wheel", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.base.Base.status", "modulename": "stretch_body.base", "qualname": "Base.status", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.base.Base.trajectory", "modulename": "stretch_body.base", "qualname": "Base.trajectory", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.base.Base.thread_rate_hz", "modulename": "stretch_body.base", "qualname": "Base.thread_rate_hz", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.base.Base.first_step", "modulename": "stretch_body.base", "qualname": "Base.first_step", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.base.Base.meters_per_motor_rad", "modulename": "stretch_body.base", "qualname": "Base.meters_per_motor_rad", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.base.Base.wheel_separation_m", "modulename": "stretch_body.base", "qualname": "Base.wheel_separation_m", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.base.Base.stiffness", "modulename": "stretch_body.base", "qualname": "Base.stiffness", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.base.Base.vel_mr", "modulename": "stretch_body.base", "qualname": "Base.vel_mr", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.base.Base.accel_mr", "modulename": "stretch_body.base", "qualname": "Base.accel_mr", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.base.Base.fast_motion_allowed", "modulename": "stretch_body.base", "qualname": "Base.fast_motion_allowed", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.base.Base.startup", "modulename": "stretch_body.base", "qualname": "Base.startup", "kind": "function", "doc": "<p>Starts machinery required to interface with this device</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>threaded : bool\n    whether a thread manages hardware polling/pushing in the background</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>bool\n    whether the startup procedure succeeded</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">threaded</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.base.Base.stop", "modulename": "stretch_body.base", "qualname": "Base.stop", "kind": "function", "doc": "<p>Shuts down machinery started in <code>startup()</code></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.base.Base.pretty_print", "modulename": "stretch_body.base", "qualname": "Base.pretty_print", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.base.Base.enable_freewheel_mode", "modulename": "stretch_body.base", "qualname": "Base.enable_freewheel_mode", "kind": "function", "doc": "<p>Force motors into freewheel</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.base.Base.enable_pos_incr_mode", "modulename": "stretch_body.base", "qualname": "Base.enable_pos_incr_mode", "kind": "function", "doc": "<p>Force motors into incremental position mode</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.base.Base.wait_for_contact", "modulename": "stretch_body.base", "qualname": "Base.wait_for_contact", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mf\">5.0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.base.Base.wait_until_at_setpoint", "modulename": "stretch_body.base", "qualname": "Base.wait_until_at_setpoint", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mf\">15.0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.base.Base.contact_thresh_to_motor_current", "modulename": "stretch_body.base", "qualname": "Base.contact_thresh_to_motor_current", "kind": "function", "doc": "<p>This model converts from a specified percentage effort (-100 to 100) of translate/rotational effort to motor currents</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">is_translate</span>, </span><span class=\"param\"><span class=\"n\">contact_thresh</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.base.Base.translate_by", "modulename": "stretch_body.base", "qualname": "Base.translate_by", "kind": "function", "doc": "<p>Incremental translation of the base\nx_m: desired motion (m)\nv_m: velocity for trapezoidal motion profile (m/s)\na_m: acceleration for trapezoidal motion profile (m/s^2)\nstiffness: stiffness of motion. Range 0.0 (min) to 1.0 (max)\ncontact_thresh_N: (deprecated) effort to stop at (units of pseudo_N)\ncontact_thresh: effort to stop at (units of effort_pct (-100, 100))</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">x_m</span>,</span><span class=\"param\">\t<span class=\"n\">v_m</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">a_m</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">stiffness</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">contact_thresh_N</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">contact_thresh</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.base.Base.rotate_by", "modulename": "stretch_body.base", "qualname": "Base.rotate_by", "kind": "function", "doc": "<p>Incremental rotation of the base\nx_r: desired motion (radians)\nv_r: velocity for trapezoidal motion profile (rad/s)\na_r: acceleration for trapezoidal motion profile (rad/s^2)\nstiffness: stiffness of motion. Range 0.0 (min) to 1.0 (max)\ncontact_thresh_N: (deprecated) effort to stop at (units of pseudo_N)\ncontact_thresh: effort to stop at (units of effort_pct (-100, 100))</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">x_r</span>,</span><span class=\"param\">\t<span class=\"n\">v_r</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">a_r</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">stiffness</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">contact_thresh_N</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">contact_thresh</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.base.Base.set_translate_velocity", "modulename": "stretch_body.base", "qualname": "Base.set_translate_velocity", "kind": "function", "doc": "<p>Command the bases translational velocity.\nUse care to prevent collisions / avoid runaways\nv_m: desired velocity (m/s)\na_m: acceleration of motion profile (m/s^2)\ncontact_thresh_N: (deprecated) effort to stop at (units of pseudo_N)\ncontact_thresh: effort to stop at (units of effort_pct (-100, 100))</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">v_m</span>,</span><span class=\"param\">\t<span class=\"n\">a_m</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">stiffness</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">contact_thresh_N</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">contact_thresh</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.base.Base.set_rotational_velocity", "modulename": "stretch_body.base", "qualname": "Base.set_rotational_velocity", "kind": "function", "doc": "<p>Command the bases rotational velocity.\nUse care to prevent collisions / avoid runaways\nv_r: desired rotational velocity (rad/s)\na_r: acceleration of motion profile (rad/s^2)\ncontact_thresh_N: (deprecated) effort to stop at (units of pseudo_N)\ncontact_thresh: effort to stop at (units of effort_pct (-100, 100))</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">v_r</span>,</span><span class=\"param\">\t<span class=\"n\">a_r</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">stiffness</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">contact_thresh_N</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">contact_thresh</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.base.Base.set_velocity", "modulename": "stretch_body.base", "qualname": "Base.set_velocity", "kind": "function", "doc": "<p>Command the bases translational and rotational\nvelocities simultaneously.\nUse care to prevent collisions / avoid runaways\nv_m: desired velocity (m/s)\nw_r: desired rotational velocity (rad/s)\na:   acceleration of motion profile (m/s^2 and rad/s^2)\ncontact_thresh_N: (deprecated) effort to stop at (units of pseudo_N)\ncontact_thresh: effort to stop at (units of effort_pct (-100, 100))</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">v_m</span>,</span><span class=\"param\">\t<span class=\"n\">w_r</span>,</span><span class=\"param\">\t<span class=\"n\">a</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">stiffness</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">contact_thresh_N</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">contact_thresh</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.base.Base.follow_trajectory", "modulename": "stretch_body.base", "qualname": "Base.follow_trajectory", "kind": "function", "doc": "<p>Starts executing a waypoint trajectory</p>\n\n<p><code>self.trajectory</code> must be populated with a valid trajectory before calling\nthis method.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>v_r : float\n    velocity limit for trajectory in motor space in meters per second\na_r : float\n    acceleration limit for trajectory in motor space in meters per second squared\nstiffness : float\n    stiffness of motion. Range 0.0 (min) to 1.0 (max)\ncontact_thresh_N: (deprecated) effort to stop at (units of pseudo_N)\ncontact_thresh: effort to stop at (units of effort_pct (-100, 100))</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">v_r</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">a_r</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">stiffness</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">contact_thresh_N</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">contact_thresh</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.base.Base.reset_odometry", "modulename": "stretch_body.base", "qualname": "Base.reset_odometry", "kind": "function", "doc": "<p>Reset X/Y/Theta to report 0</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.base.Base.is_trajectory_active", "modulename": "stretch_body.base", "qualname": "Base.is_trajectory_active", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.base.Base.get_trajectory_ts", "modulename": "stretch_body.base", "qualname": "Base.get_trajectory_ts", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.base.Base.get_trajectory_time_remaining", "modulename": "stretch_body.base", "qualname": "Base.get_trajectory_time_remaining", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.base.Base.update_trajectory", "modulename": "stretch_body.base", "qualname": "Base.update_trajectory", "kind": "function", "doc": "<p>Updates hardware with the next segment of <code>self.trajectory</code></p>\n\n<p>This method must be called frequently to enable complete trajectory execution\nand preemption of future segments. If used with <code>stretch_body.robot.Robot</code> or\nwith <code>self.startup(threaded=True)</code>, a background thread is launched for this.\nOtherwise, the user must handle calling this method.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.base.Base.stop_trajectory", "modulename": "stretch_body.base", "qualname": "Base.stop_trajectory", "kind": "function", "doc": "<p>Stop waypoint trajectory immediately and resets hardware</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.base.Base.step_sentry", "modulename": "stretch_body.base", "qualname": "Base.step_sentry", "kind": "function", "doc": "<p>Only allow fast mobile base motion if the lift is low,\nthe arm is retracted, and the wrist is stowed. This is\nintended to keep the center of mass low for increased\nstability and avoid catching the arm or tool on\nsomething.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">robot</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.base.Base.push_command", "modulename": "stretch_body.base", "qualname": "Base.push_command", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.base.Base.pull_status", "modulename": "stretch_body.base", "qualname": "Base.pull_status", "kind": "function", "doc": "<p>Computes base odometery based on stepper positions / velocities</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.base.Base.pull_status_async", "modulename": "stretch_body.base", "qualname": "Base.pull_status_async", "kind": "function", "doc": "<p>Computes base odometery based on stepper positions / velocities</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "stretch_body.base.Base.motor_current_to_translation_force", "modulename": "stretch_body.base", "qualname": "Base.motor_current_to_translation_force", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">il</span>, </span><span class=\"param\"><span class=\"n\">ir</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.base.Base.motor_current_to_rotation_torque", "modulename": "stretch_body.base", "qualname": "Base.motor_current_to_rotation_torque", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">il</span>, </span><span class=\"param\"><span class=\"n\">ir</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.base.Base.translation_force_to_motor_current", "modulename": "stretch_body.base", "qualname": "Base.translation_force_to_motor_current", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">f_N</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.base.Base.rotation_torque_to_motor_current", "modulename": "stretch_body.base", "qualname": "Base.rotation_torque_to_motor_current", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">tq_Nm</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.base.Base.rotation_effort_pct_to_motor_current", "modulename": "stretch_body.base", "qualname": "Base.rotation_effort_pct_to_motor_current", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">e_pct</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.base.Base.translation_effort_pct_to_motor_current", "modulename": "stretch_body.base", "qualname": "Base.translation_effort_pct_to_motor_current", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">e_pct</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.base.Base.motor_current_to_translate_effort_pct", "modulename": "stretch_body.base", "qualname": "Base.motor_current_to_translate_effort_pct", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">il</span>, </span><span class=\"param\"><span class=\"n\">ir</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.base.Base.motor_current_to_rotation_effort_pct", "modulename": "stretch_body.base", "qualname": "Base.motor_current_to_rotation_effort_pct", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">il</span>, </span><span class=\"param\"><span class=\"n\">ir</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.base.Base.translate_to_motor_rad", "modulename": "stretch_body.base", "qualname": "Base.translate_to_motor_rad", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x_m</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.base.Base.motor_rad_to_translate", "modulename": "stretch_body.base", "qualname": "Base.motor_rad_to_translate", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x_r</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.base.Base.rotate_to_motor_rad", "modulename": "stretch_body.base", "qualname": "Base.rotate_to_motor_rad", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x_r</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.base.Base.motor_rad_to_rotate", "modulename": "stretch_body.base", "qualname": "Base.motor_rad_to_rotate", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x_r</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.base.Base.translation_to_rotation", "modulename": "stretch_body.base", "qualname": "Base.translation_to_rotation", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x_m</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.base.Base.rotation_to_translation", "modulename": "stretch_body.base", "qualname": "Base.rotation_to_translation", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x_r</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.cobbs_framing", "modulename": "stretch_body.cobbs_framing", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "stretch_body.cobbs_framing.CobbsFraming", "modulename": "stretch_body.cobbs_framing", "qualname": "CobbsFraming", "kind": "class", "doc": "<p>Encoding for communications</p>\n"}, {"fullname": "stretch_body.cobbs_framing.CobbsFraming.encode_data", "modulename": "stretch_body.cobbs_framing", "qualname": "CobbsFraming.encode_data", "kind": "function", "doc": "<p>Encode data (len nb bytes)\nAppend CRC first\nReturn buffer of encoded data</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">data</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.cobbs_framing.CobbsFraming.decode_data", "modulename": "stretch_body.cobbs_framing", "qualname": "CobbsFraming.decode_data", "kind": "function", "doc": "<p>Decode data into decode buffer\nCheck CRC\nReturn crc ok, num bytes in decoded buffer</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">data</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.device", "modulename": "stretch_body.device", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "stretch_body.device.DeviceTimestamp", "modulename": "stretch_body.device", "qualname": "DeviceTimestamp", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "stretch_body.device.DeviceTimestamp.reset", "modulename": "stretch_body.device", "qualname": "DeviceTimestamp.reset", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.device.DeviceTimestamp.set", "modulename": "stretch_body.device", "qualname": "DeviceTimestamp.set", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ts</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.device.Device", "modulename": "stretch_body.device", "qualname": "Device", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "stretch_body.device.Device.__init__", "modulename": "stretch_body.device", "qualname": "Device.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;&#39;</span>, </span><span class=\"param\"><span class=\"n\">req_params</span><span class=\"o\">=</span><span class=\"kc\">True</span></span>)</span>"}, {"fullname": "stretch_body.device.Device.logging_params", "modulename": "stretch_body.device", "qualname": "Device.logging_params", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;version&#x27;: 1, &#x27;disable_existing_loggers&#x27;: True, &#x27;root&#x27;: {&#x27;level&#x27;: &#x27;DEBUG&#x27;, &#x27;handlers&#x27;: [&#x27;console_handler&#x27;, &#x27;file_handler&#x27;], &#x27;propagate&#x27;: False}, &#x27;handlers&#x27;: {&#x27;console_handler&#x27;: {&#x27;class&#x27;: &#x27;logging.StreamHandler&#x27;, &#x27;level&#x27;: &#x27;INFO&#x27;, &#x27;formatter&#x27;: &#x27;default_console_formatter&#x27;}, &#x27;file_handler&#x27;: {&#x27;class&#x27;: &#x27;logging.FileHandler&#x27;, &#x27;level&#x27;: &#x27;DEBUG&#x27;, &#x27;formatter&#x27;: &#x27;default_file_formatter&#x27;, &#x27;filename&#x27;: &#x27;/home/hello-robot/stretch_user/log/stretch_body_logger/stretchbody_20230825165220.log&#x27;}}, &#x27;formatters&#x27;: {&#x27;default_console_formatter&#x27;: {&#x27;format&#x27;: &#x27;[%(levelname)s] [%(name)s]: %(message)s&#x27;}, &#x27;brief_console_formatter&#x27;: {&#x27;format&#x27;: &#x27;%(message)s&#x27;}, &#x27;default_file_formatter&#x27;: {&#x27;format&#x27;: &#x27;[%(levelname)-8s] [%(asctime)s.%(msecs)03d] [%(name)s]: %(message)s&#x27;, &#x27;datefmt&#x27;: &#x27;%m/%d/%Y %H:%M:%S&#x27;}}}"}, {"fullname": "stretch_body.device.Device.name", "modulename": "stretch_body.device", "qualname": "Device.name", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.device.Device.params", "modulename": "stretch_body.device", "qualname": "Device.params", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.device.Device.logger", "modulename": "stretch_body.device", "qualname": "Device.logger", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.device.Device.timestamp", "modulename": "stretch_body.device", "qualname": "Device.timestamp", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.device.Device.thread_active", "modulename": "stretch_body.device", "qualname": "Device.thread_active", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.device.Device.thread_rate_hz", "modulename": "stretch_body.device", "qualname": "Device.thread_rate_hz", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.device.Device.thread_stats", "modulename": "stretch_body.device", "qualname": "Device.thread_stats", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.device.Device.thread", "modulename": "stretch_body.device", "qualname": "Device.thread", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.device.Device.thread_shutdown_flag", "modulename": "stretch_body.device", "qualname": "Device.thread_shutdown_flag", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.device.Device.startup", "modulename": "stretch_body.device", "qualname": "Device.startup", "kind": "function", "doc": "<p>Starts machinery required to interface with this device</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>threaded : bool\n    whether a thread manages hardware polling/pushing in the background</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>bool\n    whether the startup procedure succeeded</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">threaded</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.device.Device.stop", "modulename": "stretch_body.device", "qualname": "Device.stop", "kind": "function", "doc": "<p>Shuts down machinery started in <code>startup()</code></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.device.Device.push_command", "modulename": "stretch_body.device", "qualname": "Device.push_command", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.device.Device.pull_status", "modulename": "stretch_body.device", "qualname": "Device.pull_status", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.device.Device.home", "modulename": "stretch_body.device", "qualname": "Device.home", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">end_pos</span>, </span><span class=\"param\"><span class=\"n\">to_positive_stop</span>, </span><span class=\"param\"><span class=\"n\">measuring</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.device.Device.step_sentry", "modulename": "stretch_body.device", "qualname": "Device.step_sentry", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">robot</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.device.Device.pretty_print", "modulename": "stretch_body.device", "qualname": "Device.pretty_print", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.device.Device.write_device_params", "modulename": "stretch_body.device", "qualname": "Device.write_device_params", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">device_name</span>, </span><span class=\"param\"><span class=\"n\">params</span>, </span><span class=\"param\"><span class=\"n\">fleet_dir</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.device.Device.write_configuration_param_to_YAML", "modulename": "stretch_body.device", "qualname": "Device.write_configuration_param_to_YAML", "kind": "function", "doc": "<p>Update the robot configuration YAML with a new value</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">param_name</span>, </span><span class=\"param\"><span class=\"n\">value</span>, </span><span class=\"param\"><span class=\"n\">fleet_dir</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">force_creation</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.device.Device.write_user_param_to_YAML", "modulename": "stretch_body.device", "qualname": "Device.write_user_param_to_YAML", "kind": "function", "doc": "<p>Update the robot configuration YAML with a new value</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">param_name</span>, </span><span class=\"param\"><span class=\"n\">value</span>, </span><span class=\"param\"><span class=\"n\">fleet_dir</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">force_creation</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430", "modulename": "stretch_body.dynamixel_XL430", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "stretch_body.dynamixel_XL430.XL430_ADDR_MODEL_NUMBER", "modulename": "stretch_body.dynamixel_XL430", "qualname": "XL430_ADDR_MODEL_NUMBER", "kind": "variable", "doc": "<p></p>\n", "default_value": "0"}, {"fullname": "stretch_body.dynamixel_XL430.XL430_ADDR_MODEL_INFORMATION", "modulename": "stretch_body.dynamixel_XL430", "qualname": "XL430_ADDR_MODEL_INFORMATION", "kind": "variable", "doc": "<p></p>\n", "default_value": "2"}, {"fullname": "stretch_body.dynamixel_XL430.XL430_ADDR_FIRMWARE_VERSION", "modulename": "stretch_body.dynamixel_XL430", "qualname": "XL430_ADDR_FIRMWARE_VERSION", "kind": "variable", "doc": "<p></p>\n", "default_value": "6"}, {"fullname": "stretch_body.dynamixel_XL430.XL430_ADDR_ID", "modulename": "stretch_body.dynamixel_XL430", "qualname": "XL430_ADDR_ID", "kind": "variable", "doc": "<p></p>\n", "default_value": "7"}, {"fullname": "stretch_body.dynamixel_XL430.XL430_ADDR_BAUD_RATE", "modulename": "stretch_body.dynamixel_XL430", "qualname": "XL430_ADDR_BAUD_RATE", "kind": "variable", "doc": "<p></p>\n", "default_value": "8"}, {"fullname": "stretch_body.dynamixel_XL430.XL430_ADDR_RETURN_DELAY_TIME", "modulename": "stretch_body.dynamixel_XL430", "qualname": "XL430_ADDR_RETURN_DELAY_TIME", "kind": "variable", "doc": "<p></p>\n", "default_value": "9"}, {"fullname": "stretch_body.dynamixel_XL430.XL430_ADDR_DRIVE_MODE", "modulename": "stretch_body.dynamixel_XL430", "qualname": "XL430_ADDR_DRIVE_MODE", "kind": "variable", "doc": "<p></p>\n", "default_value": "10"}, {"fullname": "stretch_body.dynamixel_XL430.XL430_ADDR_OPERATING_MODE", "modulename": "stretch_body.dynamixel_XL430", "qualname": "XL430_ADDR_OPERATING_MODE", "kind": "variable", "doc": "<p></p>\n", "default_value": "11"}, {"fullname": "stretch_body.dynamixel_XL430.XL430_ADDR_SECONDARY_ID", "modulename": "stretch_body.dynamixel_XL430", "qualname": "XL430_ADDR_SECONDARY_ID", "kind": "variable", "doc": "<p></p>\n", "default_value": "12"}, {"fullname": "stretch_body.dynamixel_XL430.XL430_ADDR_PROTOCOL_VERSION", "modulename": "stretch_body.dynamixel_XL430", "qualname": "XL430_ADDR_PROTOCOL_VERSION", "kind": "variable", "doc": "<p></p>\n", "default_value": "13"}, {"fullname": "stretch_body.dynamixel_XL430.XL430_ADDR_HOMING_OFFSET", "modulename": "stretch_body.dynamixel_XL430", "qualname": "XL430_ADDR_HOMING_OFFSET", "kind": "variable", "doc": "<p></p>\n", "default_value": "20"}, {"fullname": "stretch_body.dynamixel_XL430.XL430_ADDR_MOVING_THRESHOLD", "modulename": "stretch_body.dynamixel_XL430", "qualname": "XL430_ADDR_MOVING_THRESHOLD", "kind": "variable", "doc": "<p></p>\n", "default_value": "24"}, {"fullname": "stretch_body.dynamixel_XL430.XL430_ADDR_TEMPERATURE_LIMIT", "modulename": "stretch_body.dynamixel_XL430", "qualname": "XL430_ADDR_TEMPERATURE_LIMIT", "kind": "variable", "doc": "<p></p>\n", "default_value": "31"}, {"fullname": "stretch_body.dynamixel_XL430.XL430_ADDR_MAX_VOLTAGE_LIMIT", "modulename": "stretch_body.dynamixel_XL430", "qualname": "XL430_ADDR_MAX_VOLTAGE_LIMIT", "kind": "variable", "doc": "<p></p>\n", "default_value": "32"}, {"fullname": "stretch_body.dynamixel_XL430.XL430_ADDR_MIN_VOLTAGE_LIMIT", "modulename": "stretch_body.dynamixel_XL430", "qualname": "XL430_ADDR_MIN_VOLTAGE_LIMIT", "kind": "variable", "doc": "<p></p>\n", "default_value": "34"}, {"fullname": "stretch_body.dynamixel_XL430.XL430_ADDR_PWM_LIMIT", "modulename": "stretch_body.dynamixel_XL430", "qualname": "XL430_ADDR_PWM_LIMIT", "kind": "variable", "doc": "<p></p>\n", "default_value": "36"}, {"fullname": "stretch_body.dynamixel_XL430.XL430_ADDR_VELOCITY_LIMIT", "modulename": "stretch_body.dynamixel_XL430", "qualname": "XL430_ADDR_VELOCITY_LIMIT", "kind": "variable", "doc": "<p></p>\n", "default_value": "44"}, {"fullname": "stretch_body.dynamixel_XL430.XL430_ADDR_MAX_POS_LIMIT", "modulename": "stretch_body.dynamixel_XL430", "qualname": "XL430_ADDR_MAX_POS_LIMIT", "kind": "variable", "doc": "<p></p>\n", "default_value": "48"}, {"fullname": "stretch_body.dynamixel_XL430.XL430_ADDR_MIN_POS_LIMIT", "modulename": "stretch_body.dynamixel_XL430", "qualname": "XL430_ADDR_MIN_POS_LIMIT", "kind": "variable", "doc": "<p></p>\n", "default_value": "52"}, {"fullname": "stretch_body.dynamixel_XL430.XL430_ADDR_SHUTDOWN", "modulename": "stretch_body.dynamixel_XL430", "qualname": "XL430_ADDR_SHUTDOWN", "kind": "variable", "doc": "<p></p>\n", "default_value": "63"}, {"fullname": "stretch_body.dynamixel_XL430.XL430_ADDR_TORQUE_ENABLE", "modulename": "stretch_body.dynamixel_XL430", "qualname": "XL430_ADDR_TORQUE_ENABLE", "kind": "variable", "doc": "<p></p>\n", "default_value": "64"}, {"fullname": "stretch_body.dynamixel_XL430.XL430_ADDR_LED", "modulename": "stretch_body.dynamixel_XL430", "qualname": "XL430_ADDR_LED", "kind": "variable", "doc": "<p></p>\n", "default_value": "65"}, {"fullname": "stretch_body.dynamixel_XL430.XL430_ADDR_STATUS_RETURN_LEVEL", "modulename": "stretch_body.dynamixel_XL430", "qualname": "XL430_ADDR_STATUS_RETURN_LEVEL", "kind": "variable", "doc": "<p></p>\n", "default_value": "68"}, {"fullname": "stretch_body.dynamixel_XL430.XL430_ADDR_REGISTERED_INSTRUCTION", "modulename": "stretch_body.dynamixel_XL430", "qualname": "XL430_ADDR_REGISTERED_INSTRUCTION", "kind": "variable", "doc": "<p></p>\n", "default_value": "69"}, {"fullname": "stretch_body.dynamixel_XL430.XL430_ADDR_HARDWARE_ERROR_STATUS", "modulename": "stretch_body.dynamixel_XL430", "qualname": "XL430_ADDR_HARDWARE_ERROR_STATUS", "kind": "variable", "doc": "<p></p>\n", "default_value": "70"}, {"fullname": "stretch_body.dynamixel_XL430.XL430_ADDR_VELOCITY_I_GAIN", "modulename": "stretch_body.dynamixel_XL430", "qualname": "XL430_ADDR_VELOCITY_I_GAIN", "kind": "variable", "doc": "<p></p>\n", "default_value": "76"}, {"fullname": "stretch_body.dynamixel_XL430.XL430_ADDR_VELOCITY_P_GAIN", "modulename": "stretch_body.dynamixel_XL430", "qualname": "XL430_ADDR_VELOCITY_P_GAIN", "kind": "variable", "doc": "<p></p>\n", "default_value": "78"}, {"fullname": "stretch_body.dynamixel_XL430.XL430_ADDR_POS_D_GAIN", "modulename": "stretch_body.dynamixel_XL430", "qualname": "XL430_ADDR_POS_D_GAIN", "kind": "variable", "doc": "<p></p>\n", "default_value": "80"}, {"fullname": "stretch_body.dynamixel_XL430.XL430_ADDR_POS_I_GAIN", "modulename": "stretch_body.dynamixel_XL430", "qualname": "XL430_ADDR_POS_I_GAIN", "kind": "variable", "doc": "<p></p>\n", "default_value": "82"}, {"fullname": "stretch_body.dynamixel_XL430.XL430_ADDR_POS_P_GAIN", "modulename": "stretch_body.dynamixel_XL430", "qualname": "XL430_ADDR_POS_P_GAIN", "kind": "variable", "doc": "<p></p>\n", "default_value": "84"}, {"fullname": "stretch_body.dynamixel_XL430.XL430_ADDR_FF_2ND_GAIN", "modulename": "stretch_body.dynamixel_XL430", "qualname": "XL430_ADDR_FF_2ND_GAIN", "kind": "variable", "doc": "<p></p>\n", "default_value": "88"}, {"fullname": "stretch_body.dynamixel_XL430.XL430_ADDR_FF_1ST_GAIN", "modulename": "stretch_body.dynamixel_XL430", "qualname": "XL430_ADDR_FF_1ST_GAIN", "kind": "variable", "doc": "<p></p>\n", "default_value": "90"}, {"fullname": "stretch_body.dynamixel_XL430.XL430_ADDR_BUS_WATCHDOG", "modulename": "stretch_body.dynamixel_XL430", "qualname": "XL430_ADDR_BUS_WATCHDOG", "kind": "variable", "doc": "<p></p>\n", "default_value": "98"}, {"fullname": "stretch_body.dynamixel_XL430.XL430_ADDR_GOAL_PWM", "modulename": "stretch_body.dynamixel_XL430", "qualname": "XL430_ADDR_GOAL_PWM", "kind": "variable", "doc": "<p></p>\n", "default_value": "100"}, {"fullname": "stretch_body.dynamixel_XL430.XL430_ADDR_GOAL_VEL", "modulename": "stretch_body.dynamixel_XL430", "qualname": "XL430_ADDR_GOAL_VEL", "kind": "variable", "doc": "<p></p>\n", "default_value": "104"}, {"fullname": "stretch_body.dynamixel_XL430.XL430_ADDR_PROFILE_ACCELERATION", "modulename": "stretch_body.dynamixel_XL430", "qualname": "XL430_ADDR_PROFILE_ACCELERATION", "kind": "variable", "doc": "<p></p>\n", "default_value": "108"}, {"fullname": "stretch_body.dynamixel_XL430.XL430_ADDR_PROFILE_VELOCITY", "modulename": "stretch_body.dynamixel_XL430", "qualname": "XL430_ADDR_PROFILE_VELOCITY", "kind": "variable", "doc": "<p></p>\n", "default_value": "112"}, {"fullname": "stretch_body.dynamixel_XL430.XL430_ADDR_GOAL_POSITION", "modulename": "stretch_body.dynamixel_XL430", "qualname": "XL430_ADDR_GOAL_POSITION", "kind": "variable", "doc": "<p></p>\n", "default_value": "116"}, {"fullname": "stretch_body.dynamixel_XL430.XL430_ADDR_REALTIME_TICK", "modulename": "stretch_body.dynamixel_XL430", "qualname": "XL430_ADDR_REALTIME_TICK", "kind": "variable", "doc": "<p></p>\n", "default_value": "120"}, {"fullname": "stretch_body.dynamixel_XL430.XL430_ADDR_MOVING", "modulename": "stretch_body.dynamixel_XL430", "qualname": "XL430_ADDR_MOVING", "kind": "variable", "doc": "<p></p>\n", "default_value": "122"}, {"fullname": "stretch_body.dynamixel_XL430.XL430_ADDR_MOVING_STATUS", "modulename": "stretch_body.dynamixel_XL430", "qualname": "XL430_ADDR_MOVING_STATUS", "kind": "variable", "doc": "<p></p>\n", "default_value": "123"}, {"fullname": "stretch_body.dynamixel_XL430.XL430_ADDR_PRESENT_PWM", "modulename": "stretch_body.dynamixel_XL430", "qualname": "XL430_ADDR_PRESENT_PWM", "kind": "variable", "doc": "<p></p>\n", "default_value": "124"}, {"fullname": "stretch_body.dynamixel_XL430.XL430_ADDR_PRESENT_LOAD", "modulename": "stretch_body.dynamixel_XL430", "qualname": "XL430_ADDR_PRESENT_LOAD", "kind": "variable", "doc": "<p></p>\n", "default_value": "126"}, {"fullname": "stretch_body.dynamixel_XL430.XL430_ADDR_PRESENT_VELOCITY", "modulename": "stretch_body.dynamixel_XL430", "qualname": "XL430_ADDR_PRESENT_VELOCITY", "kind": "variable", "doc": "<p></p>\n", "default_value": "128"}, {"fullname": "stretch_body.dynamixel_XL430.XL430_ADDR_PRESENT_POSITION", "modulename": "stretch_body.dynamixel_XL430", "qualname": "XL430_ADDR_PRESENT_POSITION", "kind": "variable", "doc": "<p></p>\n", "default_value": "132"}, {"fullname": "stretch_body.dynamixel_XL430.XL430_ADDR_VELOCITY_TRAJECTORY", "modulename": "stretch_body.dynamixel_XL430", "qualname": "XL430_ADDR_VELOCITY_TRAJECTORY", "kind": "variable", "doc": "<p></p>\n", "default_value": "136"}, {"fullname": "stretch_body.dynamixel_XL430.XL430_ADDR_POSITION_TRAJECTORY", "modulename": "stretch_body.dynamixel_XL430", "qualname": "XL430_ADDR_POSITION_TRAJECTORY", "kind": "variable", "doc": "<p></p>\n", "default_value": "140"}, {"fullname": "stretch_body.dynamixel_XL430.XL430_ADDR_PRESENT_INPUT_VOLTATE", "modulename": "stretch_body.dynamixel_XL430", "qualname": "XL430_ADDR_PRESENT_INPUT_VOLTATE", "kind": "variable", "doc": "<p></p>\n", "default_value": "144"}, {"fullname": "stretch_body.dynamixel_XL430.XL430_ADDR_PRESENT_TEMPERATURE", "modulename": "stretch_body.dynamixel_XL430", "qualname": "XL430_ADDR_PRESENT_TEMPERATURE", "kind": "variable", "doc": "<p></p>\n", "default_value": "146"}, {"fullname": "stretch_body.dynamixel_XL430.XL430_ADDR_HELLO_CALIBRATED", "modulename": "stretch_body.dynamixel_XL430", "qualname": "XL430_ADDR_HELLO_CALIBRATED", "kind": "variable", "doc": "<p></p>\n", "default_value": "661"}, {"fullname": "stretch_body.dynamixel_XL430.XM430_ADDR_GOAL_CURRENT", "modulename": "stretch_body.dynamixel_XL430", "qualname": "XM430_ADDR_GOAL_CURRENT", "kind": "variable", "doc": "<p></p>\n", "default_value": "102"}, {"fullname": "stretch_body.dynamixel_XL430.XM430_ADDR_CURRENT_LIMIT", "modulename": "stretch_body.dynamixel_XL430", "qualname": "XM430_ADDR_CURRENT_LIMIT", "kind": "variable", "doc": "<p></p>\n", "default_value": "38"}, {"fullname": "stretch_body.dynamixel_XL430.COMM_CODES", "modulename": "stretch_body.dynamixel_XL430", "qualname": "COMM_CODES", "kind": "variable", "doc": "<p></p>\n", "default_value": "{0: &#x27;COMM_SUCCESS&#x27;, -1000: &#x27;COMM_PORT_BUSY&#x27;, -1001: &#x27;COMM_TX_FAIL&#x27;, -1002: &#x27;COMM_RX_FAIL&#x27;, -2000: &#x27;COMM_TX_ERROR&#x27;, -3000: &#x27;COMM_RX_WAITING&#x27;, -3001: &#x27;COMM_RX_TIMEOUT&#x27;, -3002: &#x27;COMM_RX_CORRUPT&#x27;, -9000: &#x27;COMM_NOT_AVAILABLE&#x27;}"}, {"fullname": "stretch_body.dynamixel_XL430.BAUD_MAP", "modulename": "stretch_body.dynamixel_XL430", "qualname": "BAUD_MAP", "kind": "variable", "doc": "<p></p>\n", "default_value": "{9600: 0, 57600: 1, 115200: 2, 1000000: 3, 2000000: 4, 3000000: 5, 4000000: 6, 4500000: 7}"}, {"fullname": "stretch_body.dynamixel_XL430.DelayedKeyboardInterrupt", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DelayedKeyboardInterrupt", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "stretch_body.dynamixel_XL430.DelayedKeyboardInterrupt.handler", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DelayedKeyboardInterrupt.handler", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">sig</span>, </span><span class=\"param\"><span class=\"n\">frame</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelCommError", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelCommError", "kind": "class", "doc": "<p>Common base class for all non-exit exceptions.</p>\n", "bases": "builtins.Exception"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430", "kind": "class", "doc": "<p>Wrapping of Dynamixel X-Series interface</p>\n"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.__init__", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">dxl_id</span>,</span><span class=\"param\">\t<span class=\"n\">usb</span>,</span><span class=\"param\">\t<span class=\"n\">port_handler</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">pt_lock</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">baud</span><span class=\"o\">=</span><span class=\"mi\">57600</span>,</span><span class=\"param\">\t<span class=\"n\">logger</span><span class=\"o\">=&lt;</span><span class=\"n\">RootLogger</span> <span class=\"n\">root</span> <span class=\"p\">(</span><span class=\"n\">DEBUG</span><span class=\"p\">)</span><span class=\"o\">&gt;</span></span>)</span>"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.dxl_id", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.dxl_id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.usb", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.usb", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.comm_errors", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.comm_errors", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.last_comm_success", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.last_comm_success", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.logger", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.logger", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.baud", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.baud", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.pt_lock", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.pt_lock", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.packet_handler", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.packet_handler", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.hw_valid", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.hw_valid", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.identify_baud_rate", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.identify_baud_rate", "kind": "function", "doc": "<p>Identify the baud rate a Dynamixel servo is communicating at.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>dxl_id : int\n    Dynamixel ID on chain. Must be [0, 25]\nusb : str\n    the USB port, typically \"/dev/something\"</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>int\n    the baud rate the Dynamixel is communicating at</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">dxl_id</span>, </span><span class=\"param\"><span class=\"n\">usb</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.startup", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.startup", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.stop", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.stop", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.pretty_print", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.pretty_print", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.handle_comm_result", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.handle_comm_result", "kind": "function", "doc": "<p>Handles comm result and tracks comm errors.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>fx : str\n    control table address label\ndxl_comm_result : int\n    communication result from options <code>COMM_CODES</code>\ndxl_error : int\n    hardware errors sent by the dynamixel</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>bool\n    True if successful result, False otherwise</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">fx</span>, </span><span class=\"param\"><span class=\"n\">dxl_comm_result</span>, </span><span class=\"param\"><span class=\"n\">dxl_error</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.get_comm_errors", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.get_comm_errors", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.read_int32_t", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.read_int32_t", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">addr</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.read_int16_t", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.read_int16_t", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">addr</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.do_ping", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.do_ping", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.get_id", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.get_id", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.set_id", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.set_id", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.get_baud_rate", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.get_baud_rate", "kind": "function", "doc": "<p>Retrieves the baud rate of Dynamixel communication.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>int\n    baud rate from <code>BAUD_MAP</code> if successful communication, else -1</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.set_baud_rate", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.set_baud_rate", "kind": "function", "doc": "<p>Sets the baud rate of Dynamixel communication.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>rate : int\n    baud rate option from <code>BAUD_MAP</code></p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>bool\n    True if the baud rate was set successfully, else False</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">rate</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.is_calibrated", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.is_calibrated", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.set_calibrated", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.set_calibrated", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.do_reboot", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.do_reboot", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.get_shutdown", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.get_shutdown", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.set_shutdown", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.set_shutdown", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.get_hardware_error", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.get_hardware_error", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.enable_torque", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.enable_torque", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.disable_torque", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.disable_torque", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.set_return_delay_time", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.set_return_delay_time", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.get_return_delay_time", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.get_return_delay_time", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.set_pwm", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.set_pwm", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.set_current_limit", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.set_current_limit", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">i</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.get_current_limit", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.get_current_limit", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.enable_multiturn", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.enable_multiturn", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.enable_pwm", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.enable_pwm", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.enable_pos", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.enable_pos", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.enable_vel", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.enable_vel", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.enable_pos_current", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.enable_pos_current", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.enable_current", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.enable_current", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.get_operating_mode", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.get_operating_mode", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.get_drive_mode", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.get_drive_mode", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.set_drive_mode", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.set_drive_mode", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">vel_based</span><span class=\"o\">=</span><span class=\"kc\">True</span>, </span><span class=\"param\"><span class=\"n\">reverse</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.set_goal_current", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.set_goal_current", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">i</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.get_goal_current", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.get_goal_current", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.go_to_pos", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.go_to_pos", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.set_vel", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.set_vel", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.enable_watchdog", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.enable_watchdog", "kind": "function", "doc": "<p>Enables bus monitoring to stop safely if communications fails.</p>\n\n<p>In any operating mode, a watchdog may be enabled on the Dynamixel\nhardware. If bus communication ceases for longer than a specified\ntimeout, the hardware enters watchdog error mode. New commands will\nnot execute until watchdog is disabled. Watchdog can be used with\nvelocity control to prevent undesired behavior in case of software\nfailure.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>timeout_20msec : int\n    value in range [1, 127] calculates timeout as value * 20 milliseconds (default 1s)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">timeout_20msec</span><span class=\"o\">=</span><span class=\"mi\">50</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.disable_watchdog", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.disable_watchdog", "kind": "function", "doc": "<p>Disables watchdog bus monitoring.</p>\n\n<p>In case of watchdog error occurred, no new goal commands will execute\nuntil watchdog disabled with this function.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.get_watchdog_error", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.get_watchdog_error", "kind": "function", "doc": "<p>Checks if watchdog error occurred.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>bool\n    True if watchdog detected no communication for longer than watchdog timeout</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.get_pos", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.get_pos", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.get_moving_status", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.get_moving_status", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.get_load", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.get_load", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.get_pwm", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.get_pwm", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.set_profile_velocity", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.set_profile_velocity", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">v</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.set_profile_acceleration", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.set_profile_acceleration", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">a</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.get_profile_velocity", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.get_profile_velocity", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.get_profile_acceleration", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.get_profile_acceleration", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.get_vel", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.get_vel", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.get_P_gain", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.get_P_gain", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.set_P_gain", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.set_P_gain", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.get_D_gain", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.get_D_gain", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.set_D_gain", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.set_D_gain", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.get_I_gain", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.get_I_gain", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.set_I_gain", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.set_I_gain", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.get_vel_I_gain", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.get_vel_I_gain", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.set_vel_I_gain", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.set_vel_I_gain", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.get_vel_P_gain", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.get_vel_P_gain", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.set_vel_P_gain", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.set_vel_P_gain", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.get_temperature_limit", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.get_temperature_limit", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.set_temperature_limit", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.set_temperature_limit", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.get_max_voltage_limit", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.get_max_voltage_limit", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.set_max_voltage_limit", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.set_max_voltage_limit", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.get_min_voltage_limit", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.get_min_voltage_limit", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.set_min_voltage_limit", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.set_min_voltage_limit", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.get_vel_limit", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.get_vel_limit", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.set_vel_limit", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.set_vel_limit", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.get_max_pos_limit", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.get_max_pos_limit", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.set_max_pos_limit", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.set_max_pos_limit", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.set_min_pos_limit", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.set_min_pos_limit", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.get_min_pos_limit", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.get_min_pos_limit", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.get_temp", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.get_temp", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.set_moving_threshold", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.set_moving_threshold", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.get_moving_threshold", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.get_moving_threshold", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.set_pwm_limit", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.set_pwm_limit", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.get_pwm_limit", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.get_pwm_limit", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.is_moving", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.is_moving", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.zero_position", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.zero_position", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.get_homing_offset", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.get_homing_offset", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_XL430.DynamixelXL430.set_homing_offset", "modulename": "stretch_body.dynamixel_XL430", "qualname": "DynamixelXL430.set_homing_offset", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_X_chain", "modulename": "stretch_body.dynamixel_X_chain", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "stretch_body.dynamixel_X_chain.DynamixelXChain", "modulename": "stretch_body.dynamixel_X_chain", "qualname": "DynamixelXChain", "kind": "class", "doc": "<p>This class manages a daisy chain of Dynamixel X-Series servos\nIt allows adding more than one servo at run time\nIt allows manage group reading of status data from servos so as to not overload the control bus</p>\n", "bases": "stretch_body.device.Device"}, {"fullname": "stretch_body.dynamixel_X_chain.DynamixelXChain.__init__", "modulename": "stretch_body.dynamixel_X_chain", "qualname": "DynamixelXChain.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">usb</span>, </span><span class=\"param\"><span class=\"n\">name</span></span>)</span>"}, {"fullname": "stretch_body.dynamixel_X_chain.DynamixelXChain.usb", "modulename": "stretch_body.dynamixel_X_chain", "qualname": "DynamixelXChain.usb", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.dynamixel_X_chain.DynamixelXChain.pt_lock", "modulename": "stretch_body.dynamixel_X_chain", "qualname": "DynamixelXChain.pt_lock", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.dynamixel_X_chain.DynamixelXChain.thread_rate_hz", "modulename": "stretch_body.dynamixel_X_chain", "qualname": "DynamixelXChain.thread_rate_hz", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.dynamixel_X_chain.DynamixelXChain.status", "modulename": "stretch_body.dynamixel_X_chain", "qualname": "DynamixelXChain.status", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.dynamixel_X_chain.DynamixelXChain.motors", "modulename": "stretch_body.dynamixel_X_chain", "qualname": "DynamixelXChain.motors", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.dynamixel_X_chain.DynamixelXChain.readers", "modulename": "stretch_body.dynamixel_X_chain", "qualname": "DynamixelXChain.readers", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.dynamixel_X_chain.DynamixelXChain.comm_errors", "modulename": "stretch_body.dynamixel_X_chain", "qualname": "DynamixelXChain.comm_errors", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.dynamixel_X_chain.DynamixelXChain.status_mux_id", "modulename": "stretch_body.dynamixel_X_chain", "qualname": "DynamixelXChain.status_mux_id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.dynamixel_X_chain.DynamixelXChain.add_motor", "modulename": "stretch_body.dynamixel_X_chain", "qualname": "DynamixelXChain.add_motor", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">m</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_X_chain.DynamixelXChain.get_motor", "modulename": "stretch_body.dynamixel_X_chain", "qualname": "DynamixelXChain.get_motor", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">motor_name</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_X_chain.DynamixelXChain.startup", "modulename": "stretch_body.dynamixel_X_chain", "qualname": "DynamixelXChain.startup", "kind": "function", "doc": "<p>Starts machinery required to interface with this device</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>threaded : bool\n    whether a thread manages hardware polling/pushing in the background</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>bool\n    whether the startup procedure succeeded</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">threaded</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_X_chain.DynamixelXChain.stop", "modulename": "stretch_body.dynamixel_X_chain", "qualname": "DynamixelXChain.stop", "kind": "function", "doc": "<p>Shuts down machinery started in <code>startup()</code></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_X_chain.DynamixelXChain.is_trajectory_active", "modulename": "stretch_body.dynamixel_X_chain", "qualname": "DynamixelXChain.is_trajectory_active", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_X_chain.DynamixelXChain.follow_trajectory", "modulename": "stretch_body.dynamixel_X_chain", "qualname": "DynamixelXChain.follow_trajectory", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">v_r</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">a_r</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">req_calibration</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">move_to_start_point</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_X_chain.DynamixelXChain.update_trajectory", "modulename": "stretch_body.dynamixel_X_chain", "qualname": "DynamixelXChain.update_trajectory", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_X_chain.DynamixelXChain.stop_trajectory", "modulename": "stretch_body.dynamixel_X_chain", "qualname": "DynamixelXChain.stop_trajectory", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_X_chain.DynamixelXChain.pull_status", "modulename": "stretch_body.dynamixel_X_chain", "qualname": "DynamixelXChain.pull_status", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_X_chain.DynamixelXChain.pretty_print", "modulename": "stretch_body.dynamixel_X_chain", "qualname": "DynamixelXChain.pretty_print", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_X_chain.DynamixelXChain.sync_read", "modulename": "stretch_body.dynamixel_X_chain", "qualname": "DynamixelXChain.sync_read", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">reader</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_X_chain.DynamixelXChain.step_sentry", "modulename": "stretch_body.dynamixel_X_chain", "qualname": "DynamixelXChain.step_sentry", "kind": "function", "doc": "<p>This sentry places the Dynamixel servos in torque_disabled\nmode when the runstop is enabled.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">robot</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_hello_XL430", "modulename": "stretch_body.dynamixel_hello_XL430", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "stretch_body.dynamixel_hello_XL430.DynamixelCommErrorStats", "modulename": "stretch_body.dynamixel_hello_XL430", "qualname": "DynamixelCommErrorStats", "kind": "class", "doc": "<p></p>\n", "bases": "stretch_body.device.Device"}, {"fullname": "stretch_body.dynamixel_hello_XL430.DynamixelCommErrorStats.__init__", "modulename": "stretch_body.dynamixel_hello_XL430", "qualname": "DynamixelCommErrorStats.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span>, </span><span class=\"param\"><span class=\"n\">logger</span></span>)</span>"}, {"fullname": "stretch_body.dynamixel_hello_XL430.DynamixelCommErrorStats.name", "modulename": "stretch_body.dynamixel_hello_XL430", "qualname": "DynamixelCommErrorStats.name", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.dynamixel_hello_XL430.DynamixelCommErrorStats.status", "modulename": "stretch_body.dynamixel_hello_XL430", "qualname": "DynamixelCommErrorStats.status", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.dynamixel_hello_XL430.DynamixelCommErrorStats.rate_log", "modulename": "stretch_body.dynamixel_hello_XL430", "qualname": "DynamixelCommErrorStats.rate_log", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.dynamixel_hello_XL430.DynamixelCommErrorStats.n_log", "modulename": "stretch_body.dynamixel_hello_XL430", "qualname": "DynamixelCommErrorStats.n_log", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.dynamixel_hello_XL430.DynamixelCommErrorStats.log_idx", "modulename": "stretch_body.dynamixel_hello_XL430", "qualname": "DynamixelCommErrorStats.log_idx", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.dynamixel_hello_XL430.DynamixelCommErrorStats.ts_error_last", "modulename": "stretch_body.dynamixel_hello_XL430", "qualname": "DynamixelCommErrorStats.ts_error_last", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.dynamixel_hello_XL430.DynamixelCommErrorStats.ts_warn_last", "modulename": "stretch_body.dynamixel_hello_XL430", "qualname": "DynamixelCommErrorStats.ts_warn_last", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.dynamixel_hello_XL430.DynamixelCommErrorStats.logger", "modulename": "stretch_body.dynamixel_hello_XL430", "qualname": "DynamixelCommErrorStats.logger", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.dynamixel_hello_XL430.DynamixelCommErrorStats.add_error", "modulename": "stretch_body.dynamixel_hello_XL430", "qualname": "DynamixelCommErrorStats.add_error", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">rx</span><span class=\"o\">=</span><span class=\"kc\">True</span>, </span><span class=\"param\"><span class=\"n\">gsr</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_hello_XL430.DynamixelCommErrorStats.pretty_print", "modulename": "stretch_body.dynamixel_hello_XL430", "qualname": "DynamixelCommErrorStats.pretty_print", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_hello_XL430.DynamixelHelloXL430", "modulename": "stretch_body.dynamixel_hello_XL430", "qualname": "DynamixelHelloXL430", "kind": "class", "doc": "<p>Abstract the Dynamixel X-Series to handle calibration, radians, etc</p>\n", "bases": "stretch_body.device.Device"}, {"fullname": "stretch_body.dynamixel_hello_XL430.DynamixelHelloXL430.__init__", "modulename": "stretch_body.dynamixel_hello_XL430", "qualname": "DynamixelHelloXL430.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span>, </span><span class=\"param\"><span class=\"n\">chain</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">usb</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, {"fullname": "stretch_body.dynamixel_hello_XL430.DynamixelHelloXL430.check_homing_offset", "modulename": "stretch_body.dynamixel_hello_XL430", "qualname": "DynamixelHelloXL430.check_homing_offset", "kind": "function", "doc": "<p>Users may incorrectly set the homing offset on a single-turn servo\nIn general on single-turn servos, the homing offset should be zero\nIn some cases it may be non-zero but between -1024 and 1024 (per DXL spec)\nIf it is outside of the valid range it is ignored. However,\nwhen the servo is placed in other control modes (eg vel) the reported encoder position start using the offset\nThis can create unexpected behavior</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_hello_XL430.DynamixelHelloXL430.get_soft_motion_limits", "modulename": "stretch_body.dynamixel_hello_XL430", "qualname": "DynamixelHelloXL430.get_soft_motion_limits", "kind": "function", "doc": "<p>Return the currently applied soft motion limits: [min, max]</p>\n\n<p>The soft motion limit restricts joint motion to be &lt;= its physical limits.</p>\n\n<p>There are three types of limits:\nHard: The physical limits\nCollision: Limits set by RobotCollision to avoid collisions\nUser: Limits set by the user software</p>\n\n<p>The joint is limited to the most restrictive range of the Hard / Collision/ User values.\nSpecifying a value of None for a limit indicates that no constraint exists for that limit type.\nThis allows a User limits and Collision limits to coexist.\nFor example, a user can temporarily restrict the range of motion beyond the current collision limits.\nThen, by commanding User limits of None, the joint limits will revert back to the collision settings.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_hello_XL430.DynamixelHelloXL430.set_soft_motion_limit_min", "modulename": "stretch_body.dynamixel_hello_XL430", "qualname": "DynamixelHelloXL430.set_soft_motion_limit_min", "kind": "function", "doc": "<p>x: value to set a joints limit to\nlimit_type: 'user' or 'collision'</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">limit_type</span><span class=\"o\">=</span><span class=\"s1\">&#39;user&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_hello_XL430.DynamixelHelloXL430.set_soft_motion_limit_max", "modulename": "stretch_body.dynamixel_hello_XL430", "qualname": "DynamixelHelloXL430.set_soft_motion_limit_max", "kind": "function", "doc": "<p>x: value to set a joints limit to\nlimit_type: 'user' or 'collision'</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">limit_type</span><span class=\"o\">=</span><span class=\"s1\">&#39;user&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_hello_XL430.DynamixelHelloXL430.do_ping", "modulename": "stretch_body.dynamixel_hello_XL430", "qualname": "DynamixelHelloXL430.do_ping", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_hello_XL430.DynamixelHelloXL430.check_servo_errors", "modulename": "stretch_body.dynamixel_hello_XL430", "qualname": "DynamixelHelloXL430.check_servo_errors", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_hello_XL430.DynamixelHelloXL430.startup", "modulename": "stretch_body.dynamixel_hello_XL430", "qualname": "DynamixelHelloXL430.startup", "kind": "function", "doc": "<p>Starts machinery required to interface with this device</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>threaded : bool\n    whether a thread manages hardware polling/pushing in the background</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>bool\n    whether the startup procedure succeeded</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">threaded</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_hello_XL430.DynamixelHelloXL430.stop", "modulename": "stretch_body.dynamixel_hello_XL430", "qualname": "DynamixelHelloXL430.stop", "kind": "function", "doc": "<p>Shuts down machinery started in <code>startup()</code></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_hello_XL430.DynamixelHelloXL430.pull_status", "modulename": "stretch_body.dynamixel_hello_XL430", "qualname": "DynamixelHelloXL430.pull_status", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">data</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_hello_XL430.DynamixelHelloXL430.mark_zero", "modulename": "stretch_body.dynamixel_hello_XL430", "qualname": "DynamixelHelloXL430.mark_zero", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_hello_XL430.DynamixelHelloXL430.wait_until_at_setpoint", "modulename": "stretch_body.dynamixel_hello_XL430", "qualname": "DynamixelHelloXL430.wait_until_at_setpoint", "kind": "function", "doc": "<p>Polls for moving status to wait until at commanded position goal</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>bool\n    True if success, False if timeout</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mf\">15.0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_hello_XL430.DynamixelHelloXL430.pretty_print", "modulename": "stretch_body.dynamixel_hello_XL430", "qualname": "DynamixelHelloXL430.pretty_print", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_hello_XL430.DynamixelHelloXL430.bound_value", "modulename": "stretch_body.dynamixel_hello_XL430", "qualname": "DynamixelHelloXL430.bound_value", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span>, </span><span class=\"param\"><span class=\"n\">lower_bound</span>, </span><span class=\"param\"><span class=\"n\">upper_bound</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_hello_XL430.DynamixelHelloXL430.step_sentry", "modulename": "stretch_body.dynamixel_hello_XL430", "qualname": "DynamixelHelloXL430.step_sentry", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">robot</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_hello_XL430.DynamixelHelloXL430.get_dist_to_limits", "modulename": "stretch_body.dynamixel_hello_XL430", "qualname": "DynamixelHelloXL430.get_dist_to_limits", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">threshold</span><span class=\"o\">=</span><span class=\"mf\">0.2</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_hello_XL430.DynamixelHelloXL430.reboot", "modulename": "stretch_body.dynamixel_hello_XL430", "qualname": "DynamixelHelloXL430.reboot", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_hello_XL430.DynamixelHelloXL430.enable_torque", "modulename": "stretch_body.dynamixel_hello_XL430", "qualname": "DynamixelHelloXL430.enable_torque", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_hello_XL430.DynamixelHelloXL430.disable_torque", "modulename": "stretch_body.dynamixel_hello_XL430", "qualname": "DynamixelHelloXL430.disable_torque", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_hello_XL430.DynamixelHelloXL430.move_to_vel", "modulename": "stretch_body.dynamixel_hello_XL430", "qualname": "DynamixelHelloXL430.move_to_vel", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">v_des</span>, </span><span class=\"param\"><span class=\"n\">a_des</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_hello_XL430.DynamixelHelloXL430.set_velocity", "modulename": "stretch_body.dynamixel_hello_XL430", "qualname": "DynamixelHelloXL430.set_velocity", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">v_des</span>, </span><span class=\"param\"><span class=\"n\">a_des</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_hello_XL430.DynamixelHelloXL430.enable_velocity_ctrl", "modulename": "stretch_body.dynamixel_hello_XL430", "qualname": "DynamixelHelloXL430.enable_velocity_ctrl", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_hello_XL430.DynamixelHelloXL430.move_to", "modulename": "stretch_body.dynamixel_hello_XL430", "qualname": "DynamixelHelloXL430.move_to", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x_des</span>, </span><span class=\"param\"><span class=\"n\">v_des</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">a_des</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_hello_XL430.DynamixelHelloXL430.set_motion_params", "modulename": "stretch_body.dynamixel_hello_XL430", "qualname": "DynamixelHelloXL430.set_motion_params", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">v_des</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">a_des</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">force</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_hello_XL430.DynamixelHelloXL430.move_by", "modulename": "stretch_body.dynamixel_hello_XL430", "qualname": "DynamixelHelloXL430.move_by", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x_des</span>, </span><span class=\"param\"><span class=\"n\">v_des</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">a_des</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_hello_XL430.DynamixelHelloXL430.quick_stop", "modulename": "stretch_body.dynamixel_hello_XL430", "qualname": "DynamixelHelloXL430.quick_stop", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_hello_XL430.DynamixelHelloXL430.enable_pos", "modulename": "stretch_body.dynamixel_hello_XL430", "qualname": "DynamixelHelloXL430.enable_pos", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_hello_XL430.DynamixelHelloXL430.enable_pwm", "modulename": "stretch_body.dynamixel_hello_XL430", "qualname": "DynamixelHelloXL430.enable_pwm", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_hello_XL430.DynamixelHelloXL430.set_pwm", "modulename": "stretch_body.dynamixel_hello_XL430", "qualname": "DynamixelHelloXL430.set_pwm", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_hello_XL430.DynamixelHelloXL430.is_trajectory_active", "modulename": "stretch_body.dynamixel_hello_XL430", "qualname": "DynamixelHelloXL430.is_trajectory_active", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_hello_XL430.DynamixelHelloXL430.get_trajectory_ts", "modulename": "stretch_body.dynamixel_hello_XL430", "qualname": "DynamixelHelloXL430.get_trajectory_ts", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_hello_XL430.DynamixelHelloXL430.get_trajectory_time_remaining", "modulename": "stretch_body.dynamixel_hello_XL430", "qualname": "DynamixelHelloXL430.get_trajectory_time_remaining", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_hello_XL430.DynamixelHelloXL430.follow_trajectory", "modulename": "stretch_body.dynamixel_hello_XL430", "qualname": "DynamixelHelloXL430.follow_trajectory", "kind": "function", "doc": "<p>Starts executing a waypoint trajectory</p>\n\n<p><code>self.trajectory</code> must be populated with a valid trajectory before calling\nthis method.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>v_r : float\n    velocity limit for trajectory in radians per second\na_r : float\n    acceleration limit for trajectory in radians per second squared\nreq_calibration : bool\n    whether to allow motion prior to homing\nmove_to_start_point : bool\n    whether to move to the trajectory's start to avoid a jump, this\n    time to move doesn't count against the trajectory's timeline</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">v_r</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">a_r</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">req_calibration</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">move_to_start_point</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_hello_XL430.DynamixelHelloXL430.update_trajectory", "modulename": "stretch_body.dynamixel_hello_XL430", "qualname": "DynamixelHelloXL430.update_trajectory", "kind": "function", "doc": "<p>Updates hardware with the next position goal of <code>self.trajectory</code></p>\n\n<p>This method must be called frequently to enable complete trajectory execution\nand preemption of future segments. If used with <code>stretch_body.robot.Robot</code> or\nwith <code>self.startup(threaded=True)</code>, a background thread is launched for this.\nOtherwise, the user must handle calling this method.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_hello_XL430.DynamixelHelloXL430.stop_trajectory", "modulename": "stretch_body.dynamixel_hello_XL430", "qualname": "DynamixelHelloXL430.stop_trajectory", "kind": "function", "doc": "<p>Stop waypoint trajectory immediately and resets hardware</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_hello_XL430.DynamixelHelloXL430.home", "modulename": "stretch_body.dynamixel_hello_XL430", "qualname": "DynamixelHelloXL430.home", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">single_stop</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">move_to_zero</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">delay_at_stop</span><span class=\"o\">=</span><span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">save_calibration</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">set_homing_offset</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_hello_XL430.DynamixelHelloXL430.ticks_to_world_rad_per_sec_sec", "modulename": "stretch_body.dynamixel_hello_XL430", "qualname": "DynamixelHelloXL430.ticks_to_world_rad_per_sec_sec", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">t</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_hello_XL430.DynamixelHelloXL430.ticks_to_world_rad_per_sec", "modulename": "stretch_body.dynamixel_hello_XL430", "qualname": "DynamixelHelloXL430.ticks_to_world_rad_per_sec", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">t</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_hello_XL430.DynamixelHelloXL430.ticks_to_world_rad", "modulename": "stretch_body.dynamixel_hello_XL430", "qualname": "DynamixelHelloXL430.ticks_to_world_rad", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">t</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_hello_XL430.DynamixelHelloXL430.world_rad_to_ticks", "modulename": "stretch_body.dynamixel_hello_XL430", "qualname": "DynamixelHelloXL430.world_rad_to_ticks", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">r</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_hello_XL430.DynamixelHelloXL430.world_rad_to_ticks_per_sec", "modulename": "stretch_body.dynamixel_hello_XL430", "qualname": "DynamixelHelloXL430.world_rad_to_ticks_per_sec", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">r</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_hello_XL430.DynamixelHelloXL430.world_rad_to_ticks_per_sec_sec", "modulename": "stretch_body.dynamixel_hello_XL430", "qualname": "DynamixelHelloXL430.world_rad_to_ticks_per_sec_sec", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">r</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_hello_XL430.DynamixelHelloXL430.ticks_to_rad", "modulename": "stretch_body.dynamixel_hello_XL430", "qualname": "DynamixelHelloXL430.ticks_to_rad", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">t</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_hello_XL430.DynamixelHelloXL430.rad_to_ticks", "modulename": "stretch_body.dynamixel_hello_XL430", "qualname": "DynamixelHelloXL430.rad_to_ticks", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">r</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_hello_XL430.DynamixelHelloXL430.ticks_to_rad_per_sec", "modulename": "stretch_body.dynamixel_hello_XL430", "qualname": "DynamixelHelloXL430.ticks_to_rad_per_sec", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">t</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_hello_XL430.DynamixelHelloXL430.rad_per_sec_to_ticks", "modulename": "stretch_body.dynamixel_hello_XL430", "qualname": "DynamixelHelloXL430.rad_per_sec_to_ticks", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">r</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_hello_XL430.DynamixelHelloXL430.ticks_to_rad_per_sec_sec", "modulename": "stretch_body.dynamixel_hello_XL430", "qualname": "DynamixelHelloXL430.ticks_to_rad_per_sec_sec", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">t</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_hello_XL430.DynamixelHelloXL430.rad_per_sec_sec_to_ticks", "modulename": "stretch_body.dynamixel_hello_XL430", "qualname": "DynamixelHelloXL430.rad_per_sec_sec_to_ticks", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">r</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.dynamixel_hello_XL430.DynamixelHelloXL430.ticks_to_pct_load", "modulename": "stretch_body.dynamixel_hello_XL430", "qualname": "DynamixelHelloXL430.ticks_to_pct_load", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">t</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.end_of_arm", "modulename": "stretch_body.end_of_arm", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "stretch_body.end_of_arm.EndOfArm", "modulename": "stretch_body.end_of_arm", "qualname": "EndOfArm", "kind": "class", "doc": "<p>The EndOfArm class allows for an extensible serial chain of Dynamixel X series devices\nIt allows the specific type of device to be declared at runtime via the Yaml parameters\nIn this way, a user can add their own custom Dynamixel based tools to the robot end-of-arm by\nsimply deriving it from DynamixelHelloXL430 and declaring the class name / Python module name\nin the User YAML file</p>\n", "bases": "stretch_body.dynamixel_X_chain.DynamixelXChain"}, {"fullname": "stretch_body.end_of_arm.EndOfArm.__init__", "modulename": "stretch_body.end_of_arm", "qualname": "EndOfArm.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;end_of_arm&#39;</span>, </span><span class=\"param\"><span class=\"n\">usb</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, {"fullname": "stretch_body.end_of_arm.EndOfArm.joints", "modulename": "stretch_body.end_of_arm", "qualname": "EndOfArm.joints", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.end_of_arm.EndOfArm.startup", "modulename": "stretch_body.end_of_arm", "qualname": "EndOfArm.startup", "kind": "function", "doc": "<p>Starts machinery required to interface with this device</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>threaded : bool\n    whether a thread manages hardware polling/pushing in the background</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>bool\n    whether the startup procedure succeeded</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">threaded</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.end_of_arm.EndOfArm.get_joint", "modulename": "stretch_body.end_of_arm", "qualname": "EndOfArm.get_joint", "kind": "function", "doc": "<p>Retrieves joint by name.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>joint_name : str\n    valid joints defined as defined in params['devices']</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>DynamixelHelloXL430 or None\n    Motor object on valid joint name, else None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">joint_name</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.end_of_arm.EndOfArm.move_to", "modulename": "stretch_body.end_of_arm", "qualname": "EndOfArm.move_to", "kind": "function", "doc": "<p>joint: name of joint (string)\nx_r: commanded absolute position (radians).\nv_r: velocity for trapezoidal motion profile (rad/s).\na_r: acceleration for trapezoidal motion profile (rad/s^2)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">joint</span>, </span><span class=\"param\"><span class=\"n\">x_r</span>, </span><span class=\"param\"><span class=\"n\">v_r</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">a_r</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.end_of_arm.EndOfArm.move_by", "modulename": "stretch_body.end_of_arm", "qualname": "EndOfArm.move_by", "kind": "function", "doc": "<p>joint: name of joint (string)\nx_r: commanded incremental motion (radians).\nv_r: velocity for trapezoidal motion profile (rad/s).\na_r: acceleration for trapezoidal motion profile (rad/s^2)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">joint</span>, </span><span class=\"param\"><span class=\"n\">x_r</span>, </span><span class=\"param\"><span class=\"n\">v_r</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">a_r</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.end_of_arm.EndOfArm.pose", "modulename": "stretch_body.end_of_arm", "qualname": "EndOfArm.pose", "kind": "function", "doc": "<p>joint: name of joint (string)\np: named pose of joint\nv_r: velocity for trapezoidal motion profile (rad/s).\na_r: acceleration for trapezoidal motion profile (rad/s^2)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">joint</span>, </span><span class=\"param\"><span class=\"n\">p</span>, </span><span class=\"param\"><span class=\"n\">v_r</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">a_r</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.end_of_arm.EndOfArm.stow", "modulename": "stretch_body.end_of_arm", "qualname": "EndOfArm.stow", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.end_of_arm.EndOfArm.home", "modulename": "stretch_body.end_of_arm", "qualname": "EndOfArm.home", "kind": "function", "doc": "<p>Home to hardstops</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">joint</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.end_of_arm.EndOfArm.is_tool_present", "modulename": "stretch_body.end_of_arm", "qualname": "EndOfArm.is_tool_present", "kind": "function", "doc": "<p>Return true if the given tool type is present (eg. StretchGripper)\nAllows for conditional logic when switching end-of-arm tools</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">class_name</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.end_of_arm_tools", "modulename": "stretch_body.end_of_arm_tools", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "stretch_body.end_of_arm_tools.ToolNone", "modulename": "stretch_body.end_of_arm_tools", "qualname": "ToolNone", "kind": "class", "doc": "<p>The EndOfArm class allows for an extensible serial chain of Dynamixel X series devices\nIt allows the specific type of device to be declared at runtime via the Yaml parameters\nIn this way, a user can add their own custom Dynamixel based tools to the robot end-of-arm by\nsimply deriving it from DynamixelHelloXL430 and declaring the class name / Python module name\nin the User YAML file</p>\n", "bases": "stretch_body.end_of_arm.EndOfArm"}, {"fullname": "stretch_body.end_of_arm_tools.ToolStretchGripper", "modulename": "stretch_body.end_of_arm_tools", "qualname": "ToolStretchGripper", "kind": "class", "doc": "<p>The EndOfArm class allows for an extensible serial chain of Dynamixel X series devices\nIt allows the specific type of device to be declared at runtime via the Yaml parameters\nIn this way, a user can add their own custom Dynamixel based tools to the robot end-of-arm by\nsimply deriving it from DynamixelHelloXL430 and declaring the class name / Python module name\nin the User YAML file</p>\n", "bases": "stretch_body.end_of_arm.EndOfArm"}, {"fullname": "stretch_body.end_of_arm_tools.ToolStretchGripper.stow", "modulename": "stretch_body.end_of_arm_tools", "qualname": "ToolStretchGripper.stow", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.head", "modulename": "stretch_body.head", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "stretch_body.head.Head", "modulename": "stretch_body.head", "qualname": "Head", "kind": "class", "doc": "<p>API to the Stretch RE1 Head</p>\n", "bases": "stretch_body.dynamixel_X_chain.DynamixelXChain"}, {"fullname": "stretch_body.head.Head.__init__", "modulename": "stretch_body.head", "qualname": "Head.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">usb</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, {"fullname": "stretch_body.head.Head.joints", "modulename": "stretch_body.head", "qualname": "Head.joints", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.head.Head.poses", "modulename": "stretch_body.head", "qualname": "Head.poses", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.head.Head.startup", "modulename": "stretch_body.head", "qualname": "Head.startup", "kind": "function", "doc": "<p>Starts machinery required to interface with this device</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>threaded : bool\n    whether a thread manages hardware polling/pushing in the background</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>bool\n    whether the startup procedure succeeded</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">threaded</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.head.Head.get_joint", "modulename": "stretch_body.head", "qualname": "Head.get_joint", "kind": "function", "doc": "<p>Retrieves joint by name.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>joint_name : str\n    valid joints defined in <code>joints</code></p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>DynamixelHelloXL430 or None\n    Motor object on valid joint name, else None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">joint_name</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.head.Head.move_to", "modulename": "stretch_body.head", "qualname": "Head.move_to", "kind": "function", "doc": "<p>joint: Name of the joint to move ('head_pan' or 'head_tilt')\nx_r: commanded absolute position (radians).\nv_r: velocity for trapezoidal motion profile (rad/s).\na_r: acceleration for trapezoidal motion profile (rad/s^2)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">joint</span>, </span><span class=\"param\"><span class=\"n\">x_r</span>, </span><span class=\"param\"><span class=\"n\">v_r</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">a_r</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.head.Head.move_by", "modulename": "stretch_body.head", "qualname": "Head.move_by", "kind": "function", "doc": "<p>joint: Name of the joint to move ('head_pan' or 'head_tilt')\nx_r: commanded incremental motion (radians).\nv_r: velocity for trapezoidal motion profile (rad/s).\na_r: acceleration for trapezoidal motion profile (rad/s^2)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">joint</span>, </span><span class=\"param\"><span class=\"n\">x_r</span>, </span><span class=\"param\"><span class=\"n\">v_r</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">a_r</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.head.Head.home", "modulename": "stretch_body.head", "qualname": "Head.home", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.head.Head.pose", "modulename": "stretch_body.head", "qualname": "Head.pose", "kind": "function", "doc": "<p>p: Dictionary key to named pose (eg 'ahead')\nv_r: list, velocities for trapezoidal motion profile (rad/s).\na_r: list, accelerations for trapezoidal motion profile (rad/s^2)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">p</span>, </span><span class=\"param\"><span class=\"n\">v_r</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">a_r</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.hello_utils", "modulename": "stretch_body.hello_utils", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "stretch_body.hello_utils.print_stretch_re_use", "modulename": "stretch_body.hello_utils", "qualname": "print_stretch_re_use", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.hello_utils.create_time_string", "modulename": "stretch_body.hello_utils", "qualname": "create_time_string", "kind": "function", "doc": "<p>Returns current time formatted as <code>time_format</code></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>time_format : str\n    Refer <a href=\"https://docs.python.org/3/library/time.html#time.strftime\">https://docs.python.org/3/library/time.html#time.strftime</a> for options</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>str\n    time as string in requested format</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">time_format</span><span class=\"o\">=</span><span class=\"s1\">&#39;%Y%m</span><span class=\"si\">%d</span><span class=\"s1\">%H%M%S&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.hello_utils.deg_to_rad", "modulename": "stretch_body.hello_utils", "qualname": "deg_to_rad", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.hello_utils.rad_to_deg", "modulename": "stretch_body.hello_utils", "qualname": "rad_to_deg", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.hello_utils.confirm", "modulename": "stretch_body.hello_utils", "qualname": "confirm", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">question</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.hello_utils.get_display", "modulename": "stretch_body.hello_utils", "qualname": "get_display", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.hello_utils.get_fleet_id", "modulename": "stretch_body.hello_utils", "qualname": "get_fleet_id", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.hello_utils.set_fleet_id", "modulename": "stretch_body.hello_utils", "qualname": "set_fleet_id", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"nb\">id</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.hello_utils.get_fleet_directory", "modulename": "stretch_body.hello_utils", "qualname": "get_fleet_directory", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.hello_utils.set_fleet_directory", "modulename": "stretch_body.hello_utils", "qualname": "set_fleet_directory", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fleet_path</span>, </span><span class=\"param\"><span class=\"n\">fleet_id</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.hello_utils.get_stretch_directory", "modulename": "stretch_body.hello_utils", "qualname": "get_stretch_directory", "kind": "function", "doc": "<p>Returns path to stretch_user dir if HELLO_FLEET_PATH env var exists</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>sub_directory : str\n    valid sub_directory within stretch_user/</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>str\n    dirpath to stretch_user/ or dir within it if stretch_user/ exists, else /tmp</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">sub_directory</span><span class=\"o\">=</span><span class=\"s1\">&#39;&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.hello_utils.read_fleet_yaml", "modulename": "stretch_body.hello_utils", "qualname": "read_fleet_yaml", "kind": "function", "doc": "<p>Reads yaml by filename from fleet directory</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>f : str\n    filename of the yaml</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>dict\n    yaml as dictionary if valid file, else empty dict</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">f</span>, </span><span class=\"param\"><span class=\"n\">fleet_dir</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.hello_utils.write_fleet_yaml", "modulename": "stretch_body.hello_utils", "qualname": "write_fleet_yaml", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fn</span>, </span><span class=\"param\"><span class=\"n\">rp</span>, </span><span class=\"param\"><span class=\"n\">fleet_dir</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">header</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.hello_utils.overwrite_dict", "modulename": "stretch_body.hello_utils", "qualname": "overwrite_dict", "kind": "function", "doc": "<p>Merge two dictionaries while overwriting common keys and\nreport errors when values of the same key differ in Python\ntype. The result gets stored in <code>overwritee_dict</code>.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>overwritee_dict : dict\n    The dictionary which will be overwritten. Use this as the merged result.\noverwriter_dict : dict\n    The dictionary which will overwrite.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>bool\n    True if no mismatches were found during the overwrite, False otherwise.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">overwritee_dict</span>, </span><span class=\"param\"><span class=\"n\">overwriter_dict</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.hello_utils.pretty_print_dict", "modulename": "stretch_body.hello_utils", "qualname": "pretty_print_dict", "kind": "function", "doc": "<p>Print human readable representation of dictionary to terminal</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>title : str\n    header title under which the dictionary is printed\nd : dict\n    the dictionary to pretty print</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">title</span>, </span><span class=\"param\"><span class=\"n\">d</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.hello_utils.LoopStats", "modulename": "stretch_body.hello_utils", "qualname": "LoopStats", "kind": "class", "doc": "<p>Track timing statistics for control loops</p>\n"}, {"fullname": "stretch_body.hello_utils.LoopStats.__init__", "modulename": "stretch_body.hello_utils", "qualname": "LoopStats.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">loop_name</span>, </span><span class=\"param\"><span class=\"n\">target_loop_rate</span></span>)</span>"}, {"fullname": "stretch_body.hello_utils.LoopStats.loop_name", "modulename": "stretch_body.hello_utils", "qualname": "LoopStats.loop_name", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.hello_utils.LoopStats.target_loop_rate", "modulename": "stretch_body.hello_utils", "qualname": "LoopStats.target_loop_rate", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.hello_utils.LoopStats.ts_loop_start", "modulename": "stretch_body.hello_utils", "qualname": "LoopStats.ts_loop_start", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.hello_utils.LoopStats.ts_loop_end", "modulename": "stretch_body.hello_utils", "qualname": "LoopStats.ts_loop_end", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.hello_utils.LoopStats.last_ts_loop_start", "modulename": "stretch_body.hello_utils", "qualname": "LoopStats.last_ts_loop_start", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.hello_utils.LoopStats.status", "modulename": "stretch_body.hello_utils", "qualname": "LoopStats.status", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.hello_utils.LoopStats.logger", "modulename": "stretch_body.hello_utils", "qualname": "LoopStats.logger", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.hello_utils.LoopStats.curr_rate_history", "modulename": "stretch_body.hello_utils", "qualname": "LoopStats.curr_rate_history", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.hello_utils.LoopStats.supportable_rate_history", "modulename": "stretch_body.hello_utils", "qualname": "LoopStats.supportable_rate_history", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.hello_utils.LoopStats.n_history", "modulename": "stretch_body.hello_utils", "qualname": "LoopStats.n_history", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.hello_utils.LoopStats.debug_freq", "modulename": "stretch_body.hello_utils", "qualname": "LoopStats.debug_freq", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.hello_utils.LoopStats.sleep_time_s", "modulename": "stretch_body.hello_utils", "qualname": "LoopStats.sleep_time_s", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.hello_utils.LoopStats.ts_0", "modulename": "stretch_body.hello_utils", "qualname": "LoopStats.ts_0", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.hello_utils.LoopStats.pretty_print", "modulename": "stretch_body.hello_utils", "qualname": "LoopStats.pretty_print", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.hello_utils.LoopStats.mark_loop_start", "modulename": "stretch_body.hello_utils", "qualname": "LoopStats.mark_loop_start", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.hello_utils.LoopStats.mark_loop_end", "modulename": "stretch_body.hello_utils", "qualname": "LoopStats.mark_loop_end", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.hello_utils.LoopStats.generate_rate_histogram", "modulename": "stretch_body.hello_utils", "qualname": "LoopStats.generate_rate_histogram", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">save</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.hello_utils.LoopStats.get_loop_sleep_time", "modulename": "stretch_body.hello_utils", "qualname": "LoopStats.get_loop_sleep_time", "kind": "function", "doc": "<h2 id=\"returns\">Returns</h2>\n\n<p>float : Time to sleep for to hit target loop rate</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.hello_utils.LoopStats.wait_until_ready_to_run", "modulename": "stretch_body.hello_utils", "qualname": "LoopStats.wait_until_ready_to_run", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">sleep</span><span class=\"o\">=</span><span class=\"mf\">0.0005</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.hello_utils.ThreadServiceExit", "modulename": "stretch_body.hello_utils", "qualname": "ThreadServiceExit", "kind": "class", "doc": "<p>Custom exception which is used to trigger the clean exit\nof all running threads and the main program.</p>\n", "bases": "builtins.Exception"}, {"fullname": "stretch_body.hello_utils.thread_service_shutdown", "modulename": "stretch_body.hello_utils", "qualname": "thread_service_shutdown", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">signum</span>, </span><span class=\"param\"><span class=\"n\">frame</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.hello_utils.evaluate_polynomial_at", "modulename": "stretch_body.hello_utils", "qualname": "evaluate_polynomial_at", "kind": "function", "doc": "<p>Evaluate a quintic polynomial at a given time.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>poly : List(float)\n    Represents a quintic polynomial as a coefficients array [a0, a1, a2, a3, a4, a5].\n    The polynomial is f(t) = a0 + a1<em>t + a2</em>t^2 + a3<em>t^3 + a4</em>t^4 + a5*t^5\nt : float\n    the time in seconds at which to evaluate the polynomial</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Tuple(float)\n    array with three elements: evaluated position, velocity, and acceleration.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">poly</span>, </span><span class=\"param\"><span class=\"n\">t</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.hello_utils.is_segment_feasible", "modulename": "stretch_body.hello_utils", "qualname": "is_segment_feasible", "kind": "function", "doc": "<p>Determine whether a segment adheres to dynamic limits.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>segment : List\n    Represents a segment of a waypoint trajectory as a list of length eight,\n    structured like [duration_s, a0, a1, a2, a3, a4, a5, segment_id].\nv_des : float\n    Velocity limit that the segment shouldn't exceed\na_des : float\n    Acceleration limit that the segment shouldn't exceed\nt : float\n    optional, time in seconds at which to begin checking segment\ninc : float\n    optional, increment in seconds at which the polynomial is evaluated along the segment</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>success: bool\n    whether the segment is feasible\nmax_v: float\n    Maximum velocity of spline\nmax_a: float\n    Maximum acceleration of spline</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">segment</span>, </span><span class=\"param\"><span class=\"n\">v_des</span>, </span><span class=\"param\"><span class=\"n\">a_des</span>, </span><span class=\"param\"><span class=\"n\">t</span><span class=\"o\">=</span><span class=\"mf\">0.0</span>, </span><span class=\"param\"><span class=\"n\">inc</span><span class=\"o\">=</span><span class=\"mf\">0.1</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.hello_utils.generate_quintic_polynomial", "modulename": "stretch_body.hello_utils", "qualname": "generate_quintic_polynomial", "kind": "function", "doc": "<p>Generate quintic polynomial from two points</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>i : List(float)\n    Represents the first waypoint as a list, [time, pos, vel, accel]\nf : List(float)\n    Represents the second waypoint as a list, [time, pos, vel, accel]</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>List(float)\n    Represents a quintic polynomial as a coefficients + duration array [duration, a0, a1, a2, a3, a4, a5].\n    The polynomial is f(t) = a0 + a1<em>t + a2</em>t^2 + a3<em>t^3 + a4</em>t^4 + a5*t^5</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">i</span>, </span><span class=\"param\"><span class=\"n\">f</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.hello_utils.generate_cubic_polynomial", "modulename": "stretch_body.hello_utils", "qualname": "generate_cubic_polynomial", "kind": "function", "doc": "<p>Generate cubic polynomial from two points</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>i : List(float)\n    Represents the first waypoint as a list, [time, pos, vel]\nf : List(float)\n    Represents the second waypoint as a list, [time, pos, vel]</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>List(float)\n    Represents a cubic polynomial as a coefficients + duration array [duration, a0, a1, a2, a3, 0, 0].\n    The polynomial is f(t) = a0 + a1<em>t + a2</em>t^2 + a3*t^3</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">i</span>, </span><span class=\"param\"><span class=\"n\">f</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.hello_utils.generate_linear_polynomial", "modulename": "stretch_body.hello_utils", "qualname": "generate_linear_polynomial", "kind": "function", "doc": "<p>Generate linear polynomial from two points</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>i : List(float)\n    Represents the first waypoint as a list, [time, pos]\nf : List(float)\n    Represents the second waypoint as a list, [time, pos]</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>List(float)\n    Represents a linear polynomial as a coefficients + duration array [duration, a0, a1, 0, 0, 0, 0].\n    The polynomial is f(t) = a0 + a1*t</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">i</span>, </span><span class=\"param\"><span class=\"n\">f</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.hello_utils.get_pose_diff", "modulename": "stretch_body.hello_utils", "qualname": "get_pose_diff", "kind": "function", "doc": "<p>Return the motion required to get from pose 0 to pose 1.</p>\n\n<p>Assumed that between pose 0 and pose 1, there has only been\neither a translation or rotation motion.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>pose0 : Tuple(float, float, float)\n    x, y, theta in meters and radians\npose1 : Tuple(float, float, float)\n    x, y, theta in meters and radians</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>float, float\n    Tuple (dx, dtheta) of translation and rotation required to\n    move from pose0 to pose1</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">pose0</span>, </span><span class=\"param\"><span class=\"n\">pose1</span>, </span><span class=\"param\"><span class=\"n\">translation_atol</span><span class=\"o\">=</span><span class=\"mf\">0.002</span>, </span><span class=\"param\"><span class=\"n\">rotation_atol</span><span class=\"o\">=</span><span class=\"mf\">0.02</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.hello_utils.pseudo_N_to_effort_pct", "modulename": "stretch_body.hello_utils", "qualname": "pseudo_N_to_effort_pct", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">joint_name</span>, </span><span class=\"param\"><span class=\"n\">contact_thresh_N</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.hello_utils.check_deprecated_contact_model_base", "modulename": "stretch_body.hello_utils", "qualname": "check_deprecated_contact_model_base", "kind": "function", "doc": "<p>With RE2 we are transitioning entire stretch fleet to use new API (and effort_pct for the contact model)\nCatch older code that is using the older API and require updating of code</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">joint</span>, </span><span class=\"param\"><span class=\"n\">method_name</span>, </span><span class=\"param\"><span class=\"n\">contact_thresh_N</span>, </span><span class=\"param\"><span class=\"n\">contact_thresh</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.hello_utils.check_deprecated_contact_model_prismatic_joint", "modulename": "stretch_body.hello_utils", "qualname": "check_deprecated_contact_model_prismatic_joint", "kind": "function", "doc": "<p>With RE2 we are transitioning entire stretch fleet to use new API (and effort_pct for the contact model)\nCatch older code that is using the older API and require updating of code\nFor code that was, for example:\n    arm.move_to(x_m=0.1, contact_thresh_pos_N=30.0, contact_thresh_neg_N=-30.0)\nShould now be:\n    arm.move_to(x_m=0.1, contact_thresh_pos=pseudo_N_to_effort_pct(30.0),\n        contact_thresh_neg=pseudo_N_to_effort_pct(-30.0))</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">joint</span>,</span><span class=\"param\">\t<span class=\"n\">method_name</span>,</span><span class=\"param\">\t<span class=\"n\">contact_thresh_pos_N</span>,</span><span class=\"param\">\t<span class=\"n\">contact_thresh_neg_N</span>,</span><span class=\"param\">\t<span class=\"n\">contact_thresh_pos</span>,</span><span class=\"param\">\t<span class=\"n\">contact_thresh_neg</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.lift", "modulename": "stretch_body.lift", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "stretch_body.lift.Lift", "modulename": "stretch_body.lift", "qualname": "Lift", "kind": "class", "doc": "<p>API to the Stretch Lift</p>\n", "bases": "stretch_body.prismatic_joint.PrismaticJoint"}, {"fullname": "stretch_body.lift.Lift.__init__", "modulename": "stretch_body.lift", "qualname": "Lift.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">usb</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, {"fullname": "stretch_body.lift.Lift.motor_rad_to_translate_m", "modulename": "stretch_body.lift", "qualname": "Lift.motor_rad_to_translate_m", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ang</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.lift.Lift.translate_m_to_motor_rad", "modulename": "stretch_body.lift", "qualname": "Lift.translate_m_to_motor_rad", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.lift.Lift.home", "modulename": "stretch_body.lift", "qualname": "Lift.home", "kind": "function", "doc": "<p>end_pos: position to end on\nto_positive_stop:\n-- True: Move to the positive direction stop and mark to range_m[1]\n-- False: Move to the negative direction stop and mark to range_m[0]\nmeasuring: After homing to stop, move to opposite stop and report back measured distance\nreturn measured range-of-motion if measuring. Return None if not a valide measurement</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">end_pos</span><span class=\"o\">=</span><span class=\"mf\">0.6</span>, </span><span class=\"param\"><span class=\"n\">to_positive_stop</span><span class=\"o\">=</span><span class=\"kc\">True</span>, </span><span class=\"param\"><span class=\"n\">measuring</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu", "modulename": "stretch_body.pimu", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "stretch_body.pimu.IMUBase", "modulename": "stretch_body.pimu", "qualname": "IMUBase", "kind": "class", "doc": "<p>API to the Stretch IMU found in the base</p>\n", "bases": "stretch_body.device.Device"}, {"fullname": "stretch_body.pimu.IMUBase.status", "modulename": "stretch_body.pimu", "qualname": "IMUBase.status", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.pimu.IMUBase.get_status", "modulename": "stretch_body.pimu", "qualname": "IMUBase.get_status", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.IMUBase.get_quaternion", "modulename": "stretch_body.pimu", "qualname": "IMUBase.get_quaternion", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.IMUBase.pretty_print", "modulename": "stretch_body.pimu", "qualname": "IMUBase.pretty_print", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.IMUBase.unpack_status", "modulename": "stretch_body.pimu", "qualname": "IMUBase.unpack_status", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">s</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.IMU_Protocol_P0", "modulename": "stretch_body.pimu", "qualname": "IMU_Protocol_P0", "kind": "class", "doc": "<p>API to the Stretch IMU found in the base</p>\n", "bases": "IMUBase"}, {"fullname": "stretch_body.pimu.IMU_Protocol_P0.unpack_status", "modulename": "stretch_body.pimu", "qualname": "IMU_Protocol_P0.unpack_status", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">s</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.IMU_Protocol_P1", "modulename": "stretch_body.pimu", "qualname": "IMU_Protocol_P1", "kind": "class", "doc": "<p>API to the Stretch IMU found in the base</p>\n", "bases": "IMUBase"}, {"fullname": "stretch_body.pimu.IMU_Protocol_P1.unpack_status", "modulename": "stretch_body.pimu", "qualname": "IMU_Protocol_P1.unpack_status", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">s</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.IMU", "modulename": "stretch_body.pimu", "qualname": "IMU", "kind": "class", "doc": "<p>API to the Stretch IMU found in the base</p>\n", "bases": "IMUBase"}, {"fullname": "stretch_body.pimu.IMU.supported_protocols", "modulename": "stretch_body.pimu", "qualname": "IMU.supported_protocols", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.pimu.PimuBase", "modulename": "stretch_body.pimu", "qualname": "PimuBase", "kind": "class", "doc": "<p>API to the Stretch Power and IMU board (Pimu)</p>\n", "bases": "stretch_body.device.Device"}, {"fullname": "stretch_body.pimu.PimuBase.__init__", "modulename": "stretch_body.pimu", "qualname": "PimuBase.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">event_reset</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">usb</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, {"fullname": "stretch_body.pimu.PimuBase.RPC_SET_PIMU_CONFIG", "modulename": "stretch_body.pimu", "qualname": "PimuBase.RPC_SET_PIMU_CONFIG", "kind": "variable", "doc": "<p></p>\n", "default_value": "1"}, {"fullname": "stretch_body.pimu.PimuBase.RPC_REPLY_PIMU_CONFIG", "modulename": "stretch_body.pimu", "qualname": "PimuBase.RPC_REPLY_PIMU_CONFIG", "kind": "variable", "doc": "<p></p>\n", "default_value": "2"}, {"fullname": "stretch_body.pimu.PimuBase.RPC_GET_PIMU_STATUS", "modulename": "stretch_body.pimu", "qualname": "PimuBase.RPC_GET_PIMU_STATUS", "kind": "variable", "doc": "<p></p>\n", "default_value": "3"}, {"fullname": "stretch_body.pimu.PimuBase.RPC_REPLY_PIMU_STATUS", "modulename": "stretch_body.pimu", "qualname": "PimuBase.RPC_REPLY_PIMU_STATUS", "kind": "variable", "doc": "<p></p>\n", "default_value": "4"}, {"fullname": "stretch_body.pimu.PimuBase.RPC_SET_PIMU_TRIGGER", "modulename": "stretch_body.pimu", "qualname": "PimuBase.RPC_SET_PIMU_TRIGGER", "kind": "variable", "doc": "<p></p>\n", "default_value": "5"}, {"fullname": "stretch_body.pimu.PimuBase.RPC_REPLY_PIMU_TRIGGER", "modulename": "stretch_body.pimu", "qualname": "PimuBase.RPC_REPLY_PIMU_TRIGGER", "kind": "variable", "doc": "<p></p>\n", "default_value": "6"}, {"fullname": "stretch_body.pimu.PimuBase.RPC_GET_PIMU_BOARD_INFO", "modulename": "stretch_body.pimu", "qualname": "PimuBase.RPC_GET_PIMU_BOARD_INFO", "kind": "variable", "doc": "<p></p>\n", "default_value": "7"}, {"fullname": "stretch_body.pimu.PimuBase.RPC_REPLY_PIMU_BOARD_INFO", "modulename": "stretch_body.pimu", "qualname": "PimuBase.RPC_REPLY_PIMU_BOARD_INFO", "kind": "variable", "doc": "<p></p>\n", "default_value": "8"}, {"fullname": "stretch_body.pimu.PimuBase.RPC_SET_MOTOR_SYNC", "modulename": "stretch_body.pimu", "qualname": "PimuBase.RPC_SET_MOTOR_SYNC", "kind": "variable", "doc": "<p></p>\n", "default_value": "9"}, {"fullname": "stretch_body.pimu.PimuBase.RPC_REPLY_MOTOR_SYNC", "modulename": "stretch_body.pimu", "qualname": "PimuBase.RPC_REPLY_MOTOR_SYNC", "kind": "variable", "doc": "<p></p>\n", "default_value": "10"}, {"fullname": "stretch_body.pimu.PimuBase.RPC_READ_TRACE", "modulename": "stretch_body.pimu", "qualname": "PimuBase.RPC_READ_TRACE", "kind": "variable", "doc": "<p></p>\n", "default_value": "11"}, {"fullname": "stretch_body.pimu.PimuBase.RPC_REPLY_READ_TRACE", "modulename": "stretch_body.pimu", "qualname": "PimuBase.RPC_REPLY_READ_TRACE", "kind": "variable", "doc": "<p></p>\n", "default_value": "12"}, {"fullname": "stretch_body.pimu.PimuBase.RPC_GET_PIMU_STATUS_AUX", "modulename": "stretch_body.pimu", "qualname": "PimuBase.RPC_GET_PIMU_STATUS_AUX", "kind": "variable", "doc": "<p></p>\n", "default_value": "13"}, {"fullname": "stretch_body.pimu.PimuBase.RPC_REPLY_PIMU_STATUS_AUX", "modulename": "stretch_body.pimu", "qualname": "PimuBase.RPC_REPLY_PIMU_STATUS_AUX", "kind": "variable", "doc": "<p></p>\n", "default_value": "14"}, {"fullname": "stretch_body.pimu.PimuBase.RPC_LOAD_TEST_PULL", "modulename": "stretch_body.pimu", "qualname": "PimuBase.RPC_LOAD_TEST_PULL", "kind": "variable", "doc": "<p></p>\n", "default_value": "15"}, {"fullname": "stretch_body.pimu.PimuBase.RPC_REPLY_LOAD_TEST_PULL", "modulename": "stretch_body.pimu", "qualname": "PimuBase.RPC_REPLY_LOAD_TEST_PULL", "kind": "variable", "doc": "<p></p>\n", "default_value": "16"}, {"fullname": "stretch_body.pimu.PimuBase.RPC_LOAD_TEST_PUSH", "modulename": "stretch_body.pimu", "qualname": "PimuBase.RPC_LOAD_TEST_PUSH", "kind": "variable", "doc": "<p></p>\n", "default_value": "17"}, {"fullname": "stretch_body.pimu.PimuBase.RPC_REPLY_LOAD_TEST_PUSH", "modulename": "stretch_body.pimu", "qualname": "PimuBase.RPC_REPLY_LOAD_TEST_PUSH", "kind": "variable", "doc": "<p></p>\n", "default_value": "18"}, {"fullname": "stretch_body.pimu.PimuBase.STATE_AT_CLIFF_0", "modulename": "stretch_body.pimu", "qualname": "PimuBase.STATE_AT_CLIFF_0", "kind": "variable", "doc": "<p></p>\n", "default_value": "1"}, {"fullname": "stretch_body.pimu.PimuBase.STATE_AT_CLIFF_1", "modulename": "stretch_body.pimu", "qualname": "PimuBase.STATE_AT_CLIFF_1", "kind": "variable", "doc": "<p></p>\n", "default_value": "2"}, {"fullname": "stretch_body.pimu.PimuBase.STATE_AT_CLIFF_2", "modulename": "stretch_body.pimu", "qualname": "PimuBase.STATE_AT_CLIFF_2", "kind": "variable", "doc": "<p></p>\n", "default_value": "4"}, {"fullname": "stretch_body.pimu.PimuBase.STATE_AT_CLIFF_3", "modulename": "stretch_body.pimu", "qualname": "PimuBase.STATE_AT_CLIFF_3", "kind": "variable", "doc": "<p></p>\n", "default_value": "8"}, {"fullname": "stretch_body.pimu.PimuBase.STATE_RUNSTOP_EVENT", "modulename": "stretch_body.pimu", "qualname": "PimuBase.STATE_RUNSTOP_EVENT", "kind": "variable", "doc": "<p></p>\n", "default_value": "16"}, {"fullname": "stretch_body.pimu.PimuBase.STATE_CLIFF_EVENT", "modulename": "stretch_body.pimu", "qualname": "PimuBase.STATE_CLIFF_EVENT", "kind": "variable", "doc": "<p></p>\n", "default_value": "32"}, {"fullname": "stretch_body.pimu.PimuBase.STATE_FAN_ON", "modulename": "stretch_body.pimu", "qualname": "PimuBase.STATE_FAN_ON", "kind": "variable", "doc": "<p></p>\n", "default_value": "64"}, {"fullname": "stretch_body.pimu.PimuBase.STATE_BUZZER_ON", "modulename": "stretch_body.pimu", "qualname": "PimuBase.STATE_BUZZER_ON", "kind": "variable", "doc": "<p></p>\n", "default_value": "128"}, {"fullname": "stretch_body.pimu.PimuBase.STATE_LOW_VOLTAGE_ALERT", "modulename": "stretch_body.pimu", "qualname": "PimuBase.STATE_LOW_VOLTAGE_ALERT", "kind": "variable", "doc": "<p></p>\n", "default_value": "256"}, {"fullname": "stretch_body.pimu.PimuBase.STATE_OVER_TILT_ALERT", "modulename": "stretch_body.pimu", "qualname": "PimuBase.STATE_OVER_TILT_ALERT", "kind": "variable", "doc": "<p></p>\n", "default_value": "512"}, {"fullname": "stretch_body.pimu.PimuBase.STATE_HIGH_CURRENT_ALERT", "modulename": "stretch_body.pimu", "qualname": "PimuBase.STATE_HIGH_CURRENT_ALERT", "kind": "variable", "doc": "<p></p>\n", "default_value": "1024"}, {"fullname": "stretch_body.pimu.PimuBase.STATE_CHARGER_CONNECTED", "modulename": "stretch_body.pimu", "qualname": "PimuBase.STATE_CHARGER_CONNECTED", "kind": "variable", "doc": "<p></p>\n", "default_value": "2048"}, {"fullname": "stretch_body.pimu.PimuBase.STATE_BOOT_DETECTED", "modulename": "stretch_body.pimu", "qualname": "PimuBase.STATE_BOOT_DETECTED", "kind": "variable", "doc": "<p></p>\n", "default_value": "4096"}, {"fullname": "stretch_body.pimu.PimuBase.STATE_IS_TRACE_ON", "modulename": "stretch_body.pimu", "qualname": "PimuBase.STATE_IS_TRACE_ON", "kind": "variable", "doc": "<p></p>\n", "default_value": "8192"}, {"fullname": "stretch_body.pimu.PimuBase.TRIGGER_BOARD_RESET", "modulename": "stretch_body.pimu", "qualname": "PimuBase.TRIGGER_BOARD_RESET", "kind": "variable", "doc": "<p></p>\n", "default_value": "1"}, {"fullname": "stretch_body.pimu.PimuBase.TRIGGER_RUNSTOP_RESET", "modulename": "stretch_body.pimu", "qualname": "PimuBase.TRIGGER_RUNSTOP_RESET", "kind": "variable", "doc": "<p></p>\n", "default_value": "2"}, {"fullname": "stretch_body.pimu.PimuBase.TRIGGER_CLIFF_EVENT_RESET", "modulename": "stretch_body.pimu", "qualname": "PimuBase.TRIGGER_CLIFF_EVENT_RESET", "kind": "variable", "doc": "<p></p>\n", "default_value": "4"}, {"fullname": "stretch_body.pimu.PimuBase.TRIGGER_BUZZER_ON", "modulename": "stretch_body.pimu", "qualname": "PimuBase.TRIGGER_BUZZER_ON", "kind": "variable", "doc": "<p></p>\n", "default_value": "8"}, {"fullname": "stretch_body.pimu.PimuBase.TRIGGER_BUZZER_OFF", "modulename": "stretch_body.pimu", "qualname": "PimuBase.TRIGGER_BUZZER_OFF", "kind": "variable", "doc": "<p></p>\n", "default_value": "16"}, {"fullname": "stretch_body.pimu.PimuBase.TRIGGER_FAN_ON", "modulename": "stretch_body.pimu", "qualname": "PimuBase.TRIGGER_FAN_ON", "kind": "variable", "doc": "<p></p>\n", "default_value": "32"}, {"fullname": "stretch_body.pimu.PimuBase.TRIGGER_FAN_OFF", "modulename": "stretch_body.pimu", "qualname": "PimuBase.TRIGGER_FAN_OFF", "kind": "variable", "doc": "<p></p>\n", "default_value": "64"}, {"fullname": "stretch_body.pimu.PimuBase.TRIGGER_IMU_RESET", "modulename": "stretch_body.pimu", "qualname": "PimuBase.TRIGGER_IMU_RESET", "kind": "variable", "doc": "<p></p>\n", "default_value": "128"}, {"fullname": "stretch_body.pimu.PimuBase.TRIGGER_RUNSTOP_ON", "modulename": "stretch_body.pimu", "qualname": "PimuBase.TRIGGER_RUNSTOP_ON", "kind": "variable", "doc": "<p></p>\n", "default_value": "256"}, {"fullname": "stretch_body.pimu.PimuBase.TRIGGER_BEEP", "modulename": "stretch_body.pimu", "qualname": "PimuBase.TRIGGER_BEEP", "kind": "variable", "doc": "<p></p>\n", "default_value": "512"}, {"fullname": "stretch_body.pimu.PimuBase.TRIGGER_LIGHTBAR_TEST", "modulename": "stretch_body.pimu", "qualname": "PimuBase.TRIGGER_LIGHTBAR_TEST", "kind": "variable", "doc": "<p></p>\n", "default_value": "1024"}, {"fullname": "stretch_body.pimu.PimuBase.TRIGGER_ENABLE_TRACE", "modulename": "stretch_body.pimu", "qualname": "PimuBase.TRIGGER_ENABLE_TRACE", "kind": "variable", "doc": "<p></p>\n", "default_value": "2048"}, {"fullname": "stretch_body.pimu.PimuBase.TRIGGER_DISABLE_TRACE", "modulename": "stretch_body.pimu", "qualname": "PimuBase.TRIGGER_DISABLE_TRACE", "kind": "variable", "doc": "<p></p>\n", "default_value": "4096"}, {"fullname": "stretch_body.pimu.PimuBase.TRACE_TYPE_STATUS", "modulename": "stretch_body.pimu", "qualname": "PimuBase.TRACE_TYPE_STATUS", "kind": "variable", "doc": "<p></p>\n", "default_value": "0"}, {"fullname": "stretch_body.pimu.PimuBase.TRACE_TYPE_DEBUG", "modulename": "stretch_body.pimu", "qualname": "PimuBase.TRACE_TYPE_DEBUG", "kind": "variable", "doc": "<p></p>\n", "default_value": "1"}, {"fullname": "stretch_body.pimu.PimuBase.TRACE_TYPE_PRINT", "modulename": "stretch_body.pimu", "qualname": "PimuBase.TRACE_TYPE_PRINT", "kind": "variable", "doc": "<p></p>\n", "default_value": "2"}, {"fullname": "stretch_body.pimu.PimuBase.config", "modulename": "stretch_body.pimu", "qualname": "PimuBase.config", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.pimu.PimuBase.imu", "modulename": "stretch_body.pimu", "qualname": "PimuBase.imu", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.pimu.PimuBase.frame_id_last", "modulename": "stretch_body.pimu", "qualname": "PimuBase.frame_id_last", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.pimu.PimuBase.frame_id_base", "modulename": "stretch_body.pimu", "qualname": "PimuBase.frame_id_base", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.pimu.PimuBase.transport", "modulename": "stretch_body.pimu", "qualname": "PimuBase.transport", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.pimu.PimuBase.status", "modulename": "stretch_body.pimu", "qualname": "PimuBase.status", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.pimu.PimuBase.status_zero", "modulename": "stretch_body.pimu", "qualname": "PimuBase.status_zero", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.pimu.PimuBase.status_aux", "modulename": "stretch_body.pimu", "qualname": "PimuBase.status_aux", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.pimu.PimuBase.ts_last_fan_on", "modulename": "stretch_body.pimu", "qualname": "PimuBase.ts_last_fan_on", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.pimu.PimuBase.fan_on_last", "modulename": "stretch_body.pimu", "qualname": "PimuBase.fan_on_last", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.pimu.PimuBase.board_info", "modulename": "stretch_body.pimu", "qualname": "PimuBase.board_info", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.pimu.PimuBase.hw_valid", "modulename": "stretch_body.pimu", "qualname": "PimuBase.hw_valid", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.pimu.PimuBase.ts_last_motor_sync", "modulename": "stretch_body.pimu", "qualname": "PimuBase.ts_last_motor_sync", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.pimu.PimuBase.ts_last_motor_sync_warn", "modulename": "stretch_body.pimu", "qualname": "PimuBase.ts_last_motor_sync_warn", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.pimu.PimuBase.load_test_payload", "modulename": "stretch_body.pimu", "qualname": "PimuBase.load_test_payload", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.pimu.PimuBase.ts_get_cpu_temp", "modulename": "stretch_body.pimu", "qualname": "PimuBase.ts_get_cpu_temp", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.pimu.PimuBase.startup", "modulename": "stretch_body.pimu", "qualname": "PimuBase.startup", "kind": "function", "doc": "<p>Starts machinery required to interface with this device</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>threaded : bool\n    whether a thread manages hardware polling/pushing in the background</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>bool\n    whether the startup procedure succeeded</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">threaded</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.PimuBase.stop", "modulename": "stretch_body.pimu", "qualname": "PimuBase.stop", "kind": "function", "doc": "<p>Shuts down machinery started in <code>startup()</code></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.PimuBase.set_config", "modulename": "stretch_body.pimu", "qualname": "PimuBase.set_config", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">c</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.PimuBase.pull_status", "modulename": "stretch_body.pimu", "qualname": "PimuBase.pull_status", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">exiting</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.PimuBase.pull_status_async", "modulename": "stretch_body.pimu", "qualname": "PimuBase.pull_status_async", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">exiting</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "stretch_body.pimu.PimuBase.push_command_async", "modulename": "stretch_body.pimu", "qualname": "PimuBase.push_command_async", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">exiting</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "stretch_body.pimu.PimuBase.push_command", "modulename": "stretch_body.pimu", "qualname": "PimuBase.push_command", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">exiting</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.PimuBase.pretty_print", "modulename": "stretch_body.pimu", "qualname": "PimuBase.pretty_print", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.PimuBase.runstop_event_reset", "modulename": "stretch_body.pimu", "qualname": "PimuBase.runstop_event_reset", "kind": "function", "doc": "<p>Reset the robot runstop, allowing motion to continue</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.PimuBase.runstop_event_trigger", "modulename": "stretch_body.pimu", "qualname": "PimuBase.runstop_event_trigger", "kind": "function", "doc": "<p>Trigger the robot runstop, stopping motion</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.PimuBase.trigger_beep", "modulename": "stretch_body.pimu", "qualname": "PimuBase.trigger_beep", "kind": "function", "doc": "<p>Generate a single short beep</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.PimuBase.trigger_lightbar_test", "modulename": "stretch_body.pimu", "qualname": "PimuBase.trigger_lightbar_test", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.PimuBase.imu_reset", "modulename": "stretch_body.pimu", "qualname": "PimuBase.imu_reset", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.PimuBase.is_ready_for_sync", "modulename": "stretch_body.pimu", "qualname": "PimuBase.is_ready_for_sync", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.PimuBase.trigger_motor_sync", "modulename": "stretch_body.pimu", "qualname": "PimuBase.trigger_motor_sync", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.PimuBase.set_fan_on", "modulename": "stretch_body.pimu", "qualname": "PimuBase.set_fan_on", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.PimuBase.set_fan_off", "modulename": "stretch_body.pimu", "qualname": "PimuBase.set_fan_off", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.PimuBase.set_buzzer_on", "modulename": "stretch_body.pimu", "qualname": "PimuBase.set_buzzer_on", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.PimuBase.set_buzzer_off", "modulename": "stretch_body.pimu", "qualname": "PimuBase.set_buzzer_off", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.PimuBase.board_reset", "modulename": "stretch_body.pimu", "qualname": "PimuBase.board_reset", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.PimuBase.cliff_event_reset", "modulename": "stretch_body.pimu", "qualname": "PimuBase.cliff_event_reset", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.PimuBase.get_voltage", "modulename": "stretch_body.pimu", "qualname": "PimuBase.get_voltage", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">raw</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.PimuBase.get_temp", "modulename": "stretch_body.pimu", "qualname": "PimuBase.get_temp", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">raw</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.PimuBase.get_current", "modulename": "stretch_body.pimu", "qualname": "PimuBase.get_current", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">raw</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.PimuBase.unpack_board_info", "modulename": "stretch_body.pimu", "qualname": "PimuBase.unpack_board_info", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">s</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.PimuBase.pack_config", "modulename": "stretch_body.pimu", "qualname": "PimuBase.pack_config", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">s</span>, </span><span class=\"param\"><span class=\"n\">sidx</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.PimuBase.pack_trigger", "modulename": "stretch_body.pimu", "qualname": "PimuBase.pack_trigger", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">s</span>, </span><span class=\"param\"><span class=\"n\">sidx</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.PimuBase.unpack_status", "modulename": "stretch_body.pimu", "qualname": "PimuBase.unpack_status", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">s</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.PimuBase.read_firmware_trace", "modulename": "stretch_body.pimu", "qualname": "PimuBase.read_firmware_trace", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.PimuBase.rpc_read_firmware_trace_reply", "modulename": "stretch_body.pimu", "qualname": "PimuBase.rpc_read_firmware_trace_reply", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">reply</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.PimuBase.enable_firmware_trace", "modulename": "stretch_body.pimu", "qualname": "PimuBase.enable_firmware_trace", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.PimuBase.disable_firmware_trace", "modulename": "stretch_body.pimu", "qualname": "PimuBase.disable_firmware_trace", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.PimuBase.pull_status_aux", "modulename": "stretch_body.pimu", "qualname": "PimuBase.pull_status_aux", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.PimuBase.push_load_test", "modulename": "stretch_body.pimu", "qualname": "PimuBase.push_load_test", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.PimuBase.pull_load_test", "modulename": "stretch_body.pimu", "qualname": "PimuBase.pull_load_test", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.PimuBase.rpc_motor_sync_reply", "modulename": "stretch_body.pimu", "qualname": "PimuBase.rpc_motor_sync_reply", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">reply</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.PimuBase.rpc_config_reply", "modulename": "stretch_body.pimu", "qualname": "PimuBase.rpc_config_reply", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">reply</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.PimuBase.rpc_board_info_reply", "modulename": "stretch_body.pimu", "qualname": "PimuBase.rpc_board_info_reply", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">reply</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.PimuBase.rpc_trigger_reply", "modulename": "stretch_body.pimu", "qualname": "PimuBase.rpc_trigger_reply", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">reply</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.PimuBase.rpc_status_reply", "modulename": "stretch_body.pimu", "qualname": "PimuBase.rpc_status_reply", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">reply</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.PimuBase.get_cpu_temp", "modulename": "stretch_body.pimu", "qualname": "PimuBase.get_cpu_temp", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.PimuBase.step_sentry", "modulename": "stretch_body.pimu", "qualname": "PimuBase.step_sentry", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">robot</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.Pimu_Protocol_P0", "modulename": "stretch_body.pimu", "qualname": "Pimu_Protocol_P0", "kind": "class", "doc": "<p>API to the Stretch Power and IMU board (Pimu)</p>\n", "bases": "PimuBase"}, {"fullname": "stretch_body.pimu.Pimu_Protocol_P0.unpack_status", "modulename": "stretch_body.pimu", "qualname": "Pimu_Protocol_P0.unpack_status", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">s</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.Pimu_Protocol_P1", "modulename": "stretch_body.pimu", "qualname": "Pimu_Protocol_P1", "kind": "class", "doc": "<p>API to the Stretch Power and IMU board (Pimu)</p>\n", "bases": "PimuBase"}, {"fullname": "stretch_body.pimu.Pimu_Protocol_P1.unpack_status", "modulename": "stretch_body.pimu", "qualname": "Pimu_Protocol_P1.unpack_status", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">s</span>, </span><span class=\"param\"><span class=\"n\">unpack_to</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.Pimu_Protocol_P2", "modulename": "stretch_body.pimu", "qualname": "Pimu_Protocol_P2", "kind": "class", "doc": "<p>API to the Stretch Power and IMU board (Pimu)</p>\n", "bases": "PimuBase"}, {"fullname": "stretch_body.pimu.Pimu_Protocol_P2.read_firmware_trace", "modulename": "stretch_body.pimu", "qualname": "Pimu_Protocol_P2.read_firmware_trace", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.Pimu_Protocol_P2.unpack_debug_trace", "modulename": "stretch_body.pimu", "qualname": "Pimu_Protocol_P2.unpack_debug_trace", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">s</span>, </span><span class=\"param\"><span class=\"n\">unpack_to</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.Pimu_Protocol_P2.unpack_print_trace", "modulename": "stretch_body.pimu", "qualname": "Pimu_Protocol_P2.unpack_print_trace", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">s</span>, </span><span class=\"param\"><span class=\"n\">unpack_to</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.Pimu_Protocol_P2.rpc_read_firmware_trace_reply", "modulename": "stretch_body.pimu", "qualname": "Pimu_Protocol_P2.rpc_read_firmware_trace_reply", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">reply</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.Pimu_Protocol_P2.enable_firmware_trace", "modulename": "stretch_body.pimu", "qualname": "Pimu_Protocol_P2.enable_firmware_trace", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.Pimu_Protocol_P2.disable_firmware_trace", "modulename": "stretch_body.pimu", "qualname": "Pimu_Protocol_P2.disable_firmware_trace", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.Pimu_Protocol_P2.unpack_status", "modulename": "stretch_body.pimu", "qualname": "Pimu_Protocol_P2.unpack_status", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">s</span>, </span><span class=\"param\"><span class=\"n\">unpack_to</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.Pimu_Protocol_P3", "modulename": "stretch_body.pimu", "qualname": "Pimu_Protocol_P3", "kind": "class", "doc": "<p>API to the Stretch Power and IMU board (Pimu)</p>\n", "bases": "PimuBase"}, {"fullname": "stretch_body.pimu.Pimu_Protocol_P3.is_ready_for_sync", "modulename": "stretch_body.pimu", "qualname": "Pimu_Protocol_P3.is_ready_for_sync", "kind": "function", "doc": "<p>With P3 this function is no longer meaningful as sync overruns are handled on the fw level</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.Pimu_Protocol_P3.trigger_motor_sync", "modulename": "stretch_body.pimu", "qualname": "Pimu_Protocol_P3.trigger_motor_sync", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.Pimu_Protocol_P3.rpc_motor_sync_reply", "modulename": "stretch_body.pimu", "qualname": "Pimu_Protocol_P3.rpc_motor_sync_reply", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">reply</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.Pimu_Protocol_P3.unpack_motor_sync_reply", "modulename": "stretch_body.pimu", "qualname": "Pimu_Protocol_P3.unpack_motor_sync_reply", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">s</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.Pimu_Protocol_P3.pull_status_aux", "modulename": "stretch_body.pimu", "qualname": "Pimu_Protocol_P3.pull_status_aux", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.Pimu_Protocol_P3.rpc_status_aux_reply", "modulename": "stretch_body.pimu", "qualname": "Pimu_Protocol_P3.rpc_status_aux_reply", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">reply</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.Pimu_Protocol_P3.unpack_status_aux", "modulename": "stretch_body.pimu", "qualname": "Pimu_Protocol_P3.unpack_status_aux", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">s</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.Pimu_Protocol_P3.push_load_test", "modulename": "stretch_body.pimu", "qualname": "Pimu_Protocol_P3.push_load_test", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.Pimu_Protocol_P3.pull_load_test", "modulename": "stretch_body.pimu", "qualname": "Pimu_Protocol_P3.pull_load_test", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.Pimu_Protocol_P3.rpc_load_test_push_reply", "modulename": "stretch_body.pimu", "qualname": "Pimu_Protocol_P3.rpc_load_test_push_reply", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">reply</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.Pimu_Protocol_P3.rpc_load_test_pull_reply", "modulename": "stretch_body.pimu", "qualname": "Pimu_Protocol_P3.rpc_load_test_pull_reply", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">reply</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.pimu.Pimu", "modulename": "stretch_body.pimu", "qualname": "Pimu", "kind": "class", "doc": "<p>API to the Stretch Power and IMU board (Pimu)</p>\n", "bases": "PimuBase"}, {"fullname": "stretch_body.pimu.Pimu.__init__", "modulename": "stretch_body.pimu", "qualname": "Pimu.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">event_reset</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">usb</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, {"fullname": "stretch_body.pimu.Pimu.supported_protocols", "modulename": "stretch_body.pimu", "qualname": "Pimu.supported_protocols", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.pimu.Pimu.startup", "modulename": "stretch_body.pimu", "qualname": "Pimu.startup", "kind": "function", "doc": "<p>First determine which protocol version the uC firmware is running.\nBased on that version, replaces PimuBase class inheritance with a inheritance to a child class of PimuBase that supports that protocol</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">threaded</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.prismatic_joint", "modulename": "stretch_body.prismatic_joint", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "stretch_body.prismatic_joint.PrismaticJoint", "modulename": "stretch_body.prismatic_joint", "qualname": "PrismaticJoint", "kind": "class", "doc": "<p>API to the Stretch Prismatic Joints</p>\n", "bases": "stretch_body.device.Device"}, {"fullname": "stretch_body.prismatic_joint.PrismaticJoint.__init__", "modulename": "stretch_body.prismatic_joint", "qualname": "PrismaticJoint.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span>, </span><span class=\"param\"><span class=\"n\">usb</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, {"fullname": "stretch_body.prismatic_joint.PrismaticJoint.motor", "modulename": "stretch_body.prismatic_joint", "qualname": "PrismaticJoint.motor", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.prismatic_joint.PrismaticJoint.status", "modulename": "stretch_body.prismatic_joint", "qualname": "PrismaticJoint.status", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.prismatic_joint.PrismaticJoint.trajectory", "modulename": "stretch_body.prismatic_joint", "qualname": "PrismaticJoint.trajectory", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.prismatic_joint.PrismaticJoint.thread_rate_hz", "modulename": "stretch_body.prismatic_joint", "qualname": "PrismaticJoint.thread_rate_hz", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.prismatic_joint.PrismaticJoint.stiffness", "modulename": "stretch_body.prismatic_joint", "qualname": "PrismaticJoint.stiffness", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.prismatic_joint.PrismaticJoint.i_feedforward", "modulename": "stretch_body.prismatic_joint", "qualname": "PrismaticJoint.i_feedforward", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.prismatic_joint.PrismaticJoint.vel_r", "modulename": "stretch_body.prismatic_joint", "qualname": "PrismaticJoint.vel_r", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.prismatic_joint.PrismaticJoint.accel_r", "modulename": "stretch_body.prismatic_joint", "qualname": "PrismaticJoint.accel_r", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.prismatic_joint.PrismaticJoint.soft_motion_limits", "modulename": "stretch_body.prismatic_joint", "qualname": "PrismaticJoint.soft_motion_limits", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.prismatic_joint.PrismaticJoint.in_vel_brake_zone", "modulename": "stretch_body.prismatic_joint", "qualname": "PrismaticJoint.in_vel_brake_zone", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.prismatic_joint.PrismaticJoint.in_vel_mode", "modulename": "stretch_body.prismatic_joint", "qualname": "PrismaticJoint.in_vel_mode", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.prismatic_joint.PrismaticJoint.dist_to_min_max", "modulename": "stretch_body.prismatic_joint", "qualname": "PrismaticJoint.dist_to_min_max", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.prismatic_joint.PrismaticJoint.vel_brake_zone_thresh", "modulename": "stretch_body.prismatic_joint", "qualname": "PrismaticJoint.vel_brake_zone_thresh", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.prismatic_joint.PrismaticJoint.watchdog_enabled", "modulename": "stretch_body.prismatic_joint", "qualname": "PrismaticJoint.watchdog_enabled", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.prismatic_joint.PrismaticJoint.total_range", "modulename": "stretch_body.prismatic_joint", "qualname": "PrismaticJoint.total_range", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.prismatic_joint.PrismaticJoint.startup", "modulename": "stretch_body.prismatic_joint", "qualname": "PrismaticJoint.startup", "kind": "function", "doc": "<p>Starts machinery required to interface with this device</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>threaded : bool\n    whether a thread manages hardware polling/pushing in the background</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>bool\n    whether the startup procedure succeeded</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">threaded</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.prismatic_joint.PrismaticJoint.stop", "modulename": "stretch_body.prismatic_joint", "qualname": "PrismaticJoint.stop", "kind": "function", "doc": "<p>Shuts down machinery started in <code>startup()</code></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.prismatic_joint.PrismaticJoint.pull_status", "modulename": "stretch_body.prismatic_joint", "qualname": "PrismaticJoint.pull_status", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.prismatic_joint.PrismaticJoint.pull_status_async", "modulename": "stretch_body.prismatic_joint", "qualname": "PrismaticJoint.pull_status_async", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "stretch_body.prismatic_joint.PrismaticJoint.push_command", "modulename": "stretch_body.prismatic_joint", "qualname": "PrismaticJoint.push_command", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.prismatic_joint.PrismaticJoint.push_command_async", "modulename": "stretch_body.prismatic_joint", "qualname": "PrismaticJoint.push_command_async", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "stretch_body.prismatic_joint.PrismaticJoint.pretty_print", "modulename": "stretch_body.prismatic_joint", "qualname": "PrismaticJoint.pretty_print", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.prismatic_joint.PrismaticJoint.get_soft_motion_limits", "modulename": "stretch_body.prismatic_joint", "qualname": "PrismaticJoint.get_soft_motion_limits", "kind": "function", "doc": "<p>Return the currently applied soft motion limits: [min, max]</p>\n\n<p>The soft motion limit restricts joint motion to be &lt;= its physical limits.</p>\n\n<p>There are three types of limits:\nHard: The physical limits\nCollision: Limits set by RobotCollision to avoid collisions\nUser: Limits set by the user software</p>\n\n<p>The joint is limited to the most restrictive range of the Hard / Collision/ User values.\nSpecifying a value of None for a limit indicates that no constraint exists for that limit type.\nThis allows a User limits and Collision limits to coexist.\nFor example, a user can temporarily restrict the range of motion beyond the current collision limits.\nThen, by commanding User limits of None, the joint limits will revert back to the collision settings.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.prismatic_joint.PrismaticJoint.set_soft_motion_limit_min", "modulename": "stretch_body.prismatic_joint", "qualname": "PrismaticJoint.set_soft_motion_limit_min", "kind": "function", "doc": "<p>x: value to set a joints limit to\nlimit_type: 'user' or 'collision'</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">limit_type</span><span class=\"o\">=</span><span class=\"s1\">&#39;user&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.prismatic_joint.PrismaticJoint.set_soft_motion_limit_max", "modulename": "stretch_body.prismatic_joint", "qualname": "PrismaticJoint.set_soft_motion_limit_max", "kind": "function", "doc": "<p>x: value to set a joints limit to\nlimit_type: 'user' or 'collision'</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">limit_type</span><span class=\"o\">=</span><span class=\"s1\">&#39;user&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.prismatic_joint.PrismaticJoint.contact_thresh_to_motor_current", "modulename": "stretch_body.prismatic_joint", "qualname": "PrismaticJoint.contact_thresh_to_motor_current", "kind": "function", "doc": "<p>This model converts from a specified percentage effort (-100 to 100) in the motor frame to motor currents</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">contact_thresh_pos</span>, </span><span class=\"param\"><span class=\"n\">contact_thresh_neg</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.prismatic_joint.PrismaticJoint.set_velocity", "modulename": "stretch_body.prismatic_joint", "qualname": "PrismaticJoint.set_velocity", "kind": "function", "doc": "<p>v_m: commanded joint velocity (m/s)\na_m: acceleration for trapezoidal motion profile (m/s^2)\nstiffness: stiffness of motion. Range 0.0 (min) to 1.0 (max)\ncontact_thresh_pos_N: Deprecated: positive threshold to stop motion (units: pseudo_N)\ncontact_thresh_neg_N: Deprecated: negative threshold to stop motion (units: pseudo_N)\nreq_calibration: Disallow motion prior to homing\ncontact_thresh_pos: positive threshold to stop motion (units: effort_pct -100:100)\ncontact_thresh_neg: negative threshold to stop motion (units: effort_pct -100:100)</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">v_m</span>,</span><span class=\"param\">\t<span class=\"n\">a_m</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">stiffness</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">contact_thresh_pos_N</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">contact_thresh_neg_N</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">req_calibration</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">contact_thresh_pos</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">contact_thresh_neg</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.prismatic_joint.PrismaticJoint.bound_value", "modulename": "stretch_body.prismatic_joint", "qualname": "PrismaticJoint.bound_value", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span>, </span><span class=\"param\"><span class=\"n\">lower_bound</span>, </span><span class=\"param\"><span class=\"n\">upper_bound</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.prismatic_joint.PrismaticJoint.move_to", "modulename": "stretch_body.prismatic_joint", "qualname": "PrismaticJoint.move_to", "kind": "function", "doc": "<p>x_m: commanded absolute position (meters). x_m=0 is down. x_m=~1.1 is up\nv_m: velocity for trapezoidal motion profile (m/s)\na_m: acceleration for trapezoidal motion profile (m/s^2)\nstiffness: stiffness of motion. Range 0.0 (min) to 1.0 (max)\ncontact_thresh_pos_N: Deprecated: positive threshold to stop motion (units: pseudo_N)\ncontact_thresh_neg_N: Deprecated: negative threshold to stop motion (units: pseudo_N)\nreq_calibration: Disallow motion prior to homing\ncontact_thresh_pos: positive threshold to stop motion (units: effort_pct -100:100)\ncontact_thresh_neg: negative threshold to stop motion (units: effort_pct -100:100)</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">x_m</span>,</span><span class=\"param\">\t<span class=\"n\">v_m</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">a_m</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">stiffness</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">contact_thresh_pos_N</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">contact_thresh_neg_N</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">req_calibration</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">contact_thresh_pos</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">contact_thresh_neg</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.prismatic_joint.PrismaticJoint.move_by", "modulename": "stretch_body.prismatic_joint", "qualname": "PrismaticJoint.move_by", "kind": "function", "doc": "<p>x_m: commanded incremental motion (meters).\nv_m: velocity for trapezoidal motion profile (m/s)\na_m: acceleration for trapezoidal motion profile (m/s^2)\nstiffness: stiffness of motion. Range 0.0 (min) to 1.0 (max)\ncontact_thresh_pos_N: Deprecated: positive threshold to stop motion (units: pseudo_N)\ncontact_thresh_neg_N: Deprecated: negative threshold to stop motion (units: pseudo_N)\nreq_calibration: Disallow motion prior to homing\ncontact_thresh_pos: positive threshold to stop motion (units: effort_pct -100:100)\ncontact_thresh_neg: negative threshold to stop motion (units: effort_pct -100:100)</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">x_m</span>,</span><span class=\"param\">\t<span class=\"n\">v_m</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">a_m</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">stiffness</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">contact_thresh_pos_N</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">contact_thresh_neg_N</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">req_calibration</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">contact_thresh_pos</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">contact_thresh_neg</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.prismatic_joint.PrismaticJoint.follow_trajectory", "modulename": "stretch_body.prismatic_joint", "qualname": "PrismaticJoint.follow_trajectory", "kind": "function", "doc": "<p>Starts executing a waypoint trajectory</p>\n\n<p><code>self.trajectory</code> must be populated with a valid trajectory before calling\nthis method.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>v_m : float\n    velocity limit for trajectory in meters per second\na_m : float\n    acceleration limit for trajectory in meters per second squared\nstiffness: stiffness of motion. Range 0.0 (min) to 1.0 (max)\ncontact_thresh_pos_N: Deprecated: positive threshold to stop motion (units: pseudo_N)\ncontact_thresh_neg_N: Deprecated: negative threshold to stop motion (units: pseudo_N)\ncontact_thresh_pos: positive threshold to stop motion (units: effort_pct -100:100)\ncontact_thresh_neg: negative threshold to stop motion (units: effort_pct -100:100)\nreq_calibration : bool\n    whether to allow motion prior to homing\nmove_to_start_point : bool\n    whether to move to the trajectory's start to avoid a jump, this\n    time to move doesn't count against the trajectory's timeline</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">v_m</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">a_m</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">stiffness</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">contact_thresh_pos_N</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">contact_thresh_neg_N</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">req_calibration</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">move_to_start_point</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">contact_thresh_pos</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">contact_thresh_neg</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.prismatic_joint.PrismaticJoint.is_trajectory_active", "modulename": "stretch_body.prismatic_joint", "qualname": "PrismaticJoint.is_trajectory_active", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.prismatic_joint.PrismaticJoint.get_trajectory_ts", "modulename": "stretch_body.prismatic_joint", "qualname": "PrismaticJoint.get_trajectory_ts", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.prismatic_joint.PrismaticJoint.get_trajectory_time_remaining", "modulename": "stretch_body.prismatic_joint", "qualname": "PrismaticJoint.get_trajectory_time_remaining", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.prismatic_joint.PrismaticJoint.update_trajectory", "modulename": "stretch_body.prismatic_joint", "qualname": "PrismaticJoint.update_trajectory", "kind": "function", "doc": "<p>Updates hardware with the next segment of <code>self.trajectory</code></p>\n\n<p>This method must be called frequently to enable complete trajectory execution\nand preemption of future segments. If used with <code>stretch_body.robot.Robot</code> or\nwith <code>self.startup(threaded=True)</code>, a background thread is launched for this.\nOtherwise, the user must handle calling this method.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.prismatic_joint.PrismaticJoint.stop_trajectory", "modulename": "stretch_body.prismatic_joint", "qualname": "PrismaticJoint.stop_trajectory", "kind": "function", "doc": "<p>Stop waypoint trajectory immediately and resets hardware</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.prismatic_joint.PrismaticJoint.motor_current_to_translate_force", "modulename": "stretch_body.prismatic_joint", "qualname": "PrismaticJoint.motor_current_to_translate_force", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">i</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.prismatic_joint.PrismaticJoint.translate_force_to_motor_current", "modulename": "stretch_body.prismatic_joint", "qualname": "PrismaticJoint.translate_force_to_motor_current", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">f</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.prismatic_joint.PrismaticJoint.motor_rad_to_translate_m", "modulename": "stretch_body.prismatic_joint", "qualname": "PrismaticJoint.motor_rad_to_translate_m", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ang</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.prismatic_joint.PrismaticJoint.translate_m_to_motor_rad", "modulename": "stretch_body.prismatic_joint", "qualname": "PrismaticJoint.translate_m_to_motor_rad", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.prismatic_joint.PrismaticJoint.wait_until_at_setpoint", "modulename": "stretch_body.prismatic_joint", "qualname": "PrismaticJoint.wait_until_at_setpoint", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mf\">15.0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.prismatic_joint.PrismaticJoint.wait_for_contact", "modulename": "stretch_body.prismatic_joint", "qualname": "PrismaticJoint.wait_for_contact", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mf\">5.0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.prismatic_joint.PrismaticJoint.step_sentry", "modulename": "stretch_body.prismatic_joint", "qualname": "PrismaticJoint.step_sentry", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">robot</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.prismatic_joint.PrismaticJoint.get_dist_to_limits", "modulename": "stretch_body.prismatic_joint", "qualname": "PrismaticJoint.get_dist_to_limits", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">threshold</span><span class=\"o\">=</span><span class=\"mf\">0.2</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.prismatic_joint.PrismaticJoint.home", "modulename": "stretch_body.prismatic_joint", "qualname": "PrismaticJoint.home", "kind": "function", "doc": "<p>end_pos: position to end on\nto_positive_stop:\n-- True: Move to the positive direction stop and mark to range_m[1]\n-- False: Move to the negative direction stop and mark to range_m[0]\nmeasuring: After homing to stop, move to opposite stop and report back measured distance\nreturn measured range-of-motion if measuring. Return None if not a valide measurement</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">end_pos</span>, </span><span class=\"param\"><span class=\"n\">to_positive_stop</span>, </span><span class=\"param\"><span class=\"n\">measuring</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot", "modulename": "stretch_body.robot", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot.DXLHeadStatusThread", "modulename": "stretch_body.robot", "qualname": "DXLHeadStatusThread", "kind": "class", "doc": "<p>This thread polls the status data of the Dynamixel devices\nat 15Hz</p>\n", "bases": "threading.Thread"}, {"fullname": "stretch_body.robot.DXLHeadStatusThread.__init__", "modulename": "stretch_body.robot", "qualname": "DXLHeadStatusThread.__init__", "kind": "function", "doc": "<p>This constructor should always be called with keyword arguments. Arguments are:</p>\n\n<p><em>group</em> should be None; reserved for future extension when a ThreadGroup\nclass is implemented.</p>\n\n<p><em>target</em> is the callable object to be invoked by the run()\nmethod. Defaults to None, meaning nothing is called.</p>\n\n<p><em>name</em> is the thread name. By default, a unique name is constructed of\nthe form \"Thread-N\" where N is a small decimal number.</p>\n\n<p><em>args</em> is the argument tuple for the target invocation. Defaults to ().</p>\n\n<p><em>kwargs</em> is a dictionary of keyword arguments for the target\ninvocation. Defaults to {}.</p>\n\n<p>If a subclass overrides the constructor, it must make sure to invoke\nthe base class constructor (Thread.__init__()) before doing anything\nelse to the thread.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">robot</span>, </span><span class=\"param\"><span class=\"n\">target_rate_hz</span><span class=\"o\">=</span><span class=\"mf\">15.0</span></span>)</span>"}, {"fullname": "stretch_body.robot.DXLHeadStatusThread.robot", "modulename": "stretch_body.robot", "qualname": "DXLHeadStatusThread.robot", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot.DXLHeadStatusThread.robot_update_rate_hz", "modulename": "stretch_body.robot", "qualname": "DXLHeadStatusThread.robot_update_rate_hz", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot.DXLHeadStatusThread.stats", "modulename": "stretch_body.robot", "qualname": "DXLHeadStatusThread.stats", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot.DXLHeadStatusThread.shutdown_flag", "modulename": "stretch_body.robot", "qualname": "DXLHeadStatusThread.shutdown_flag", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot.DXLHeadStatusThread.running", "modulename": "stretch_body.robot", "qualname": "DXLHeadStatusThread.running", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot.DXLHeadStatusThread.step", "modulename": "stretch_body.robot", "qualname": "DXLHeadStatusThread.step", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot.DXLHeadStatusThread.run", "modulename": "stretch_body.robot", "qualname": "DXLHeadStatusThread.run", "kind": "function", "doc": "<p>Method representing the thread's activity.</p>\n\n<p>You may override this method in a subclass. The standard run() method\ninvokes the callable object passed to the object's constructor as the\ntarget argument, if any, with sequential and keyword arguments taken\nfrom the args and kwargs arguments, respectively.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot.DXLEndOfArmStatusThread", "modulename": "stretch_body.robot", "qualname": "DXLEndOfArmStatusThread", "kind": "class", "doc": "<p>This thread polls the status data of the Dynamixel devices\nat 15Hz</p>\n", "bases": "threading.Thread"}, {"fullname": "stretch_body.robot.DXLEndOfArmStatusThread.__init__", "modulename": "stretch_body.robot", "qualname": "DXLEndOfArmStatusThread.__init__", "kind": "function", "doc": "<p>This constructor should always be called with keyword arguments. Arguments are:</p>\n\n<p><em>group</em> should be None; reserved for future extension when a ThreadGroup\nclass is implemented.</p>\n\n<p><em>target</em> is the callable object to be invoked by the run()\nmethod. Defaults to None, meaning nothing is called.</p>\n\n<p><em>name</em> is the thread name. By default, a unique name is constructed of\nthe form \"Thread-N\" where N is a small decimal number.</p>\n\n<p><em>args</em> is the argument tuple for the target invocation. Defaults to ().</p>\n\n<p><em>kwargs</em> is a dictionary of keyword arguments for the target\ninvocation. Defaults to {}.</p>\n\n<p>If a subclass overrides the constructor, it must make sure to invoke\nthe base class constructor (Thread.__init__()) before doing anything\nelse to the thread.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">robot</span>, </span><span class=\"param\"><span class=\"n\">target_rate_hz</span><span class=\"o\">=</span><span class=\"mf\">15.0</span></span>)</span>"}, {"fullname": "stretch_body.robot.DXLEndOfArmStatusThread.robot", "modulename": "stretch_body.robot", "qualname": "DXLEndOfArmStatusThread.robot", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot.DXLEndOfArmStatusThread.robot_update_rate_hz", "modulename": "stretch_body.robot", "qualname": "DXLEndOfArmStatusThread.robot_update_rate_hz", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot.DXLEndOfArmStatusThread.stats", "modulename": "stretch_body.robot", "qualname": "DXLEndOfArmStatusThread.stats", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot.DXLEndOfArmStatusThread.shutdown_flag", "modulename": "stretch_body.robot", "qualname": "DXLEndOfArmStatusThread.shutdown_flag", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot.DXLEndOfArmStatusThread.running", "modulename": "stretch_body.robot", "qualname": "DXLEndOfArmStatusThread.running", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot.DXLEndOfArmStatusThread.step", "modulename": "stretch_body.robot", "qualname": "DXLEndOfArmStatusThread.step", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot.DXLEndOfArmStatusThread.run", "modulename": "stretch_body.robot", "qualname": "DXLEndOfArmStatusThread.run", "kind": "function", "doc": "<p>Method representing the thread's activity.</p>\n\n<p>You may override this method in a subclass. The standard run() method\ninvokes the callable object passed to the object's constructor as the\ntarget argument, if any, with sequential and keyword arguments taken\nfrom the args and kwargs arguments, respectively.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot.NonDXLStatusThread", "modulename": "stretch_body.robot", "qualname": "NonDXLStatusThread", "kind": "class", "doc": "<p>This thread runs at 25Hz.\nIt updates the status data of the Devices.\nIt also steps the Sentry, Monitor, and Collision functions</p>\n", "bases": "threading.Thread"}, {"fullname": "stretch_body.robot.NonDXLStatusThread.__init__", "modulename": "stretch_body.robot", "qualname": "NonDXLStatusThread.__init__", "kind": "function", "doc": "<p>This constructor should always be called with keyword arguments. Arguments are:</p>\n\n<p><em>group</em> should be None; reserved for future extension when a ThreadGroup\nclass is implemented.</p>\n\n<p><em>target</em> is the callable object to be invoked by the run()\nmethod. Defaults to None, meaning nothing is called.</p>\n\n<p><em>name</em> is the thread name. By default, a unique name is constructed of\nthe form \"Thread-N\" where N is a small decimal number.</p>\n\n<p><em>args</em> is the argument tuple for the target invocation. Defaults to ().</p>\n\n<p><em>kwargs</em> is a dictionary of keyword arguments for the target\ninvocation. Defaults to {}.</p>\n\n<p>If a subclass overrides the constructor, it must make sure to invoke\nthe base class constructor (Thread.__init__()) before doing anything\nelse to the thread.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">robot</span>, </span><span class=\"param\"><span class=\"n\">target_rate_hz</span><span class=\"o\">=</span><span class=\"mf\">25.0</span></span>)</span>"}, {"fullname": "stretch_body.robot.NonDXLStatusThread.robot", "modulename": "stretch_body.robot", "qualname": "NonDXLStatusThread.robot", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot.NonDXLStatusThread.robot_update_rate_hz", "modulename": "stretch_body.robot", "qualname": "NonDXLStatusThread.robot_update_rate_hz", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot.NonDXLStatusThread.shutdown_flag", "modulename": "stretch_body.robot", "qualname": "NonDXLStatusThread.shutdown_flag", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot.NonDXLStatusThread.stats", "modulename": "stretch_body.robot", "qualname": "NonDXLStatusThread.stats", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot.NonDXLStatusThread.titr", "modulename": "stretch_body.robot", "qualname": "NonDXLStatusThread.titr", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot.NonDXLStatusThread.first_status", "modulename": "stretch_body.robot", "qualname": "NonDXLStatusThread.first_status", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot.NonDXLStatusThread.loop", "modulename": "stretch_body.robot", "qualname": "NonDXLStatusThread.loop", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot.NonDXLStatusThread.running", "modulename": "stretch_body.robot", "qualname": "NonDXLStatusThread.running", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot.NonDXLStatusThread.step", "modulename": "stretch_body.robot", "qualname": "NonDXLStatusThread.step", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot.NonDXLStatusThread.run", "modulename": "stretch_body.robot", "qualname": "NonDXLStatusThread.run", "kind": "function", "doc": "<p>Method representing the thread's activity.</p>\n\n<p>You may override this method in a subclass. The standard run() method\ninvokes the callable object passed to the object's constructor as the\ntarget argument, if any, with sequential and keyword arguments taken\nfrom the args and kwargs arguments, respectively.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot.SystemMonitorThread", "modulename": "stretch_body.robot", "qualname": "SystemMonitorThread", "kind": "class", "doc": "<p>This thread runs at 25Hz.\nIt updates the status data of the Devices.\nIt also steps the Sentry, Monitor, and Collision functions</p>\n", "bases": "threading.Thread"}, {"fullname": "stretch_body.robot.SystemMonitorThread.__init__", "modulename": "stretch_body.robot", "qualname": "SystemMonitorThread.__init__", "kind": "function", "doc": "<p>This constructor should always be called with keyword arguments. Arguments are:</p>\n\n<p><em>group</em> should be None; reserved for future extension when a ThreadGroup\nclass is implemented.</p>\n\n<p><em>target</em> is the callable object to be invoked by the run()\nmethod. Defaults to None, meaning nothing is called.</p>\n\n<p><em>name</em> is the thread name. By default, a unique name is constructed of\nthe form \"Thread-N\" where N is a small decimal number.</p>\n\n<p><em>args</em> is the argument tuple for the target invocation. Defaults to ().</p>\n\n<p><em>kwargs</em> is a dictionary of keyword arguments for the target\ninvocation. Defaults to {}.</p>\n\n<p>If a subclass overrides the constructor, it must make sure to invoke\nthe base class constructor (Thread.__init__()) before doing anything\nelse to the thread.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">robot</span>, </span><span class=\"param\"><span class=\"n\">target_rate_hz</span><span class=\"o\">=</span><span class=\"mf\">25.0</span></span>)</span>"}, {"fullname": "stretch_body.robot.SystemMonitorThread.robot", "modulename": "stretch_body.robot", "qualname": "SystemMonitorThread.robot", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot.SystemMonitorThread.robot_update_rate_hz", "modulename": "stretch_body.robot", "qualname": "SystemMonitorThread.robot_update_rate_hz", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot.SystemMonitorThread.monitor_downrate_int", "modulename": "stretch_body.robot", "qualname": "SystemMonitorThread.monitor_downrate_int", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot.SystemMonitorThread.trace_downrate_int", "modulename": "stretch_body.robot", "qualname": "SystemMonitorThread.trace_downrate_int", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot.SystemMonitorThread.sentry_downrate_int", "modulename": "stretch_body.robot", "qualname": "SystemMonitorThread.sentry_downrate_int", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot.SystemMonitorThread.collision_downrate_int", "modulename": "stretch_body.robot", "qualname": "SystemMonitorThread.collision_downrate_int", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot.SystemMonitorThread.trajectory_downrate_int", "modulename": "stretch_body.robot", "qualname": "SystemMonitorThread.trajectory_downrate_int", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot.SystemMonitorThread.shutdown_flag", "modulename": "stretch_body.robot", "qualname": "SystemMonitorThread.shutdown_flag", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot.SystemMonitorThread.stats", "modulename": "stretch_body.robot", "qualname": "SystemMonitorThread.stats", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot.SystemMonitorThread.titr", "modulename": "stretch_body.robot", "qualname": "SystemMonitorThread.titr", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot.SystemMonitorThread.running", "modulename": "stretch_body.robot", "qualname": "SystemMonitorThread.running", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot.SystemMonitorThread.step", "modulename": "stretch_body.robot", "qualname": "SystemMonitorThread.step", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot.SystemMonitorThread.run", "modulename": "stretch_body.robot", "qualname": "SystemMonitorThread.run", "kind": "function", "doc": "<p>Method representing the thread's activity.</p>\n\n<p>You may override this method in a subclass. The standard run() method\ninvokes the callable object passed to the object's constructor as the\ntarget argument, if any, with sequential and keyword arguments taken\nfrom the args and kwargs arguments, respectively.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot.Robot", "modulename": "stretch_body.robot", "qualname": "Robot", "kind": "class", "doc": "<p>API to the Stretch Robot</p>\n", "bases": "stretch_body.device.Device"}, {"fullname": "stretch_body.robot.Robot.monitor", "modulename": "stretch_body.robot", "qualname": "Robot.monitor", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot.Robot.trace", "modulename": "stretch_body.robot", "qualname": "Robot.trace", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot.Robot.collision", "modulename": "stretch_body.robot", "qualname": "Robot.collision", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot.Robot.dirty_push_command", "modulename": "stretch_body.robot", "qualname": "Robot.dirty_push_command", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot.Robot.lock", "modulename": "stretch_body.robot", "qualname": "Robot.lock", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot.Robot.status", "modulename": "stretch_body.robot", "qualname": "Robot.status", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot.Robot.async_event_loop", "modulename": "stretch_body.robot", "qualname": "Robot.async_event_loop", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot.Robot.pimu", "modulename": "stretch_body.robot", "qualname": "Robot.pimu", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot.Robot.base", "modulename": "stretch_body.robot", "qualname": "Robot.base", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot.Robot.lift", "modulename": "stretch_body.robot", "qualname": "Robot.lift", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot.Robot.arm", "modulename": "stretch_body.robot", "qualname": "Robot.arm", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot.Robot.head", "modulename": "stretch_body.robot", "qualname": "Robot.head", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot.Robot.end_of_arm", "modulename": "stretch_body.robot", "qualname": "Robot.end_of_arm", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot.Robot.devices", "modulename": "stretch_body.robot", "qualname": "Robot.devices", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot.Robot.startup", "modulename": "stretch_body.robot", "qualname": "Robot.startup", "kind": "function", "doc": "<p>To be called once after class instantiation.\nPrepares devices for communications and motion</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>bool\n    true if startup of robot succeeded</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">start_non_dxl_thread</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">start_dxl_thread</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">start_sys_mon_thread</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot.Robot.stop", "modulename": "stretch_body.robot", "qualname": "Robot.stop", "kind": "function", "doc": "<p>To be called once before exiting a program\nCleanly stops down motion and communication</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot.Robot.get_status", "modulename": "stretch_body.robot", "qualname": "Robot.get_status", "kind": "function", "doc": "<p>Thread safe and atomic read of current Robot status data\nReturns as a dict.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot.Robot.pretty_print", "modulename": "stretch_body.robot", "qualname": "Robot.pretty_print", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot.Robot.push_command_coro", "modulename": "stretch_body.robot", "qualname": "Robot.push_command_coro", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "stretch_body.robot.Robot.push_command", "modulename": "stretch_body.robot", "qualname": "Robot.push_command", "kind": "function", "doc": "<p>Cause all queued up RPC commands to be sent down to Devices</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot.Robot.is_trajectory_active", "modulename": "stretch_body.robot", "qualname": "Robot.is_trajectory_active", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot.Robot.follow_trajectory", "modulename": "stretch_body.robot", "qualname": "Robot.follow_trajectory", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot.Robot.stop_trajectory", "modulename": "stretch_body.robot", "qualname": "Robot.stop_trajectory", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot.Robot.is_calibrated", "modulename": "stretch_body.robot", "qualname": "Robot.is_calibrated", "kind": "function", "doc": "<p>Returns true if homing-calibration has been run all joints that require it</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot.Robot.get_stow_pos", "modulename": "stretch_body.robot", "qualname": "Robot.get_stow_pos", "kind": "function", "doc": "<p>Return the stow position of a joint.\nAllow the end_of_arm to override the defaults in order to accomodate stowing different tools</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">joint</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot.Robot.stow", "modulename": "stretch_body.robot", "qualname": "Robot.stow", "kind": "function", "doc": "<p>Cause the robot to move to its stow position\nBlocking.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot.Robot.home", "modulename": "stretch_body.robot", "qualname": "Robot.home", "kind": "function", "doc": "<p>Cause the robot to home its joints by moving to hardstops\nBlocking.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot.Robot.start_event_loop", "modulename": "stretch_body.robot", "qualname": "Robot.start_event_loop", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot.Robot.stop_event_loop", "modulename": "stretch_body.robot", "qualname": "Robot.stop_event_loop", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot_collision", "modulename": "stretch_body.robot_collision", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot_collision.RobotCollisionModel", "modulename": "stretch_body.robot_collision", "qualname": "RobotCollisionModel", "kind": "class", "doc": "<p>The RobotCollisionModel  is a base class to provide simple self-collision avoidance\nDerived (custom) classes should implement the collision logic\nIt works by defining acceptable joint ranges for the joints based on the current\nkinematic state of the robot.</p>\n\n<p>A joint soft limit of None denotes that no constraint is placed on motion in that direction</p>\n\n<p>A custom RobotCollisionModel can be instantiated by declaring the class name / Python module name\nin the User YAML file</p>\n", "bases": "stretch_body.device.Device"}, {"fullname": "stretch_body.robot_collision.RobotCollisionModel.__init__", "modulename": "stretch_body.robot_collision", "qualname": "RobotCollisionModel.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">collision_manager</span>, </span><span class=\"param\"><span class=\"n\">name</span></span>)</span>"}, {"fullname": "stretch_body.robot_collision.RobotCollisionModel.collision_manager", "modulename": "stretch_body.robot_collision", "qualname": "RobotCollisionModel.collision_manager", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot_collision.RobotCollisionModel.step", "modulename": "stretch_body.robot_collision", "qualname": "RobotCollisionModel.step", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">status</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot_collision.RobotCollisionModel.limit", "modulename": "stretch_body.robot_collision", "qualname": "RobotCollisionModel.limit", "kind": "function", "doc": "<p>Utility function. Return the more conservative union of the limits a and b\n, where a or b is of the form [lower_limit, upper_limit]</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">a</span>, </span><span class=\"param\"><span class=\"n\">b</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot_collision.RobotCollision", "modulename": "stretch_body.robot_collision", "qualname": "RobotCollision", "kind": "class", "doc": "<p>The RobotCollision class manages a set of collision models, as defined in YAML.\nIt is called periodically by the Robot thread.\nEach model computes the acceptable range of motion for a subset of joints given the current kinematic state of the robot.\nThe RobotCollision class then sets the joint limits for each joint to the most restrive set of ranges, given all models.</p>\n", "bases": "stretch_body.device.Device"}, {"fullname": "stretch_body.robot_collision.RobotCollision.__init__", "modulename": "stretch_body.robot_collision", "qualname": "RobotCollision.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">robot</span></span>)</span>"}, {"fullname": "stretch_body.robot_collision.RobotCollision.robot", "modulename": "stretch_body.robot_collision", "qualname": "RobotCollision.robot", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot_collision.RobotCollision.models", "modulename": "stretch_body.robot_collision", "qualname": "RobotCollision.models", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot_collision.RobotCollision.models_enabled", "modulename": "stretch_body.robot_collision", "qualname": "RobotCollision.models_enabled", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot_collision.RobotCollision.startup", "modulename": "stretch_body.robot_collision", "qualname": "RobotCollision.startup", "kind": "function", "doc": "<p>Starts machinery required to interface with this device</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>threaded : bool\n    whether a thread manages hardware polling/pushing in the background</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>bool\n    whether the startup procedure succeeded</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot_collision.RobotCollision.enable_model", "modulename": "stretch_body.robot_collision", "qualname": "RobotCollision.enable_model", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">name</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot_collision.RobotCollision.disable_model", "modulename": "stretch_body.robot_collision", "qualname": "RobotCollision.disable_model", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">name</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot_collision.RobotCollision.step", "modulename": "stretch_body.robot_collision", "qualname": "RobotCollision.step", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot_collision.EndOfArmForwardKinematics", "modulename": "stretch_body.robot_collision", "qualname": "EndOfArmForwardKinematics", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot_collision.EndOfArmForwardKinematics.robot_model", "modulename": "stretch_body.robot_collision", "qualname": "EndOfArmForwardKinematics.robot_model", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot_collision.EndOfArmForwardKinematics.tool_fk", "modulename": "stretch_body.robot_collision", "qualname": "EndOfArmForwardKinematics.tool_fk", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">cfg</span>, </span><span class=\"param\"><span class=\"n\">link</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot_collision_models", "modulename": "stretch_body.robot_collision_models", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot_collision_models.CollisionArmCamera", "modulename": "stretch_body.robot_collision_models", "qualname": "CollisionArmCamera", "kind": "class", "doc": "<p>NOTE: Experimental. You may want to turn this off in the params (enable=0)\nRE1/ RE2 camera can clip the arm when lift is all the way up\nand the camera is looking parallel to the ground.</p>\n", "bases": "stretch_body.robot_collision.RobotCollisionModel"}, {"fullname": "stretch_body.robot_collision_models.CollisionArmCamera.__init__", "modulename": "stretch_body.robot_collision_models", "qualname": "CollisionArmCamera.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">collision_manager</span></span>)</span>"}, {"fullname": "stretch_body.robot_collision_models.CollisionArmCamera.state", "modulename": "stretch_body.robot_collision_models", "qualname": "CollisionArmCamera.state", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot_collision_models.CollisionArmCamera.pan_in_danger_zone", "modulename": "stretch_body.robot_collision_models", "qualname": "CollisionArmCamera.pan_in_danger_zone", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x_pan</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot_collision_models.CollisionArmCamera.tilt_in_danger_zone", "modulename": "stretch_body.robot_collision_models", "qualname": "CollisionArmCamera.tilt_in_danger_zone", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x_tilt</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot_collision_models.CollisionArmCamera.lift_near_danger_zone", "modulename": "stretch_body.robot_collision_models", "qualname": "CollisionArmCamera.lift_near_danger_zone", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x_lift</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot_collision_models.CollisionArmCamera.lift_in_danger_zone", "modulename": "stretch_body.robot_collision_models", "qualname": "CollisionArmCamera.lift_in_danger_zone", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x_lift</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot_collision_models.CollisionArmCamera.prevent_lift_raise_into_camera", "modulename": "stretch_body.robot_collision_models", "qualname": "CollisionArmCamera.prevent_lift_raise_into_camera", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">status</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot_collision_models.CollisionArmCamera.prevent_pan_camera_into_arm", "modulename": "stretch_body.robot_collision_models", "qualname": "CollisionArmCamera.prevent_pan_camera_into_arm", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">status</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot_collision_models.CollisionArmCamera.prevent_tilt_camera_into_arm", "modulename": "stretch_body.robot_collision_models", "qualname": "CollisionArmCamera.prevent_tilt_camera_into_arm", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">status</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot_collision_models.CollisionArmCamera.step", "modulename": "stretch_body.robot_collision_models", "qualname": "CollisionArmCamera.step", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">status</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot_collision_models.CollisionStretchGripper", "modulename": "stretch_body.robot_collision_models", "qualname": "CollisionStretchGripper", "kind": "class", "doc": "<p>NOTE: Experimental. You may want to turn this off in the params (enable=0)\nManage collisions of the standard Stretch Gripper tool with the base</p>\n\n<p>Side Of (direction of drive)\n^\n|\n|\n---> Forward of (direction of reach)</p>\n", "bases": "stretch_body.robot_collision.RobotCollisionModel"}, {"fullname": "stretch_body.robot_collision_models.CollisionStretchGripper.__init__", "modulename": "stretch_body.robot_collision_models", "qualname": "CollisionStretchGripper.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">collision_manager</span></span>)</span>"}, {"fullname": "stretch_body.robot_collision_models.CollisionStretchGripper.dist_fingertips_forward_of_yaw", "modulename": "stretch_body.robot_collision_models", "qualname": "CollisionStretchGripper.dist_fingertips_forward_of_yaw", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x_yaw</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot_collision_models.CollisionStretchGripper.dist_fingertips_side_of_yaw", "modulename": "stretch_body.robot_collision_models", "qualname": "CollisionStretchGripper.dist_fingertips_side_of_yaw", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x_yaw</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot_collision_models.CollisionStretchGripper.dist_fingertips_forward_of_base", "modulename": "stretch_body.robot_collision_models", "qualname": "CollisionStretchGripper.dist_fingertips_forward_of_base", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x_arm</span>, </span><span class=\"param\"><span class=\"n\">x_yaw</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot_collision_models.CollisionStretchGripper.dist_fingertips_side_of_base", "modulename": "stretch_body.robot_collision_models", "qualname": "CollisionStretchGripper.dist_fingertips_side_of_base", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x_yaw</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot_collision_models.CollisionStretchGripper.prevent_fingertips_lower_into_base", "modulename": "stretch_body.robot_collision_models", "qualname": "CollisionStretchGripper.prevent_fingertips_lower_into_base", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x_lift</span>, </span><span class=\"param\"><span class=\"n\">x_arm</span>, </span><span class=\"param\"><span class=\"n\">x_yaw</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot_collision_models.CollisionStretchGripper.prevent_fingtips_yaw_into_base", "modulename": "stretch_body.robot_collision_models", "qualname": "CollisionStretchGripper.prevent_fingtips_yaw_into_base", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x_yaw</span>, </span><span class=\"param\"><span class=\"n\">x_lift</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot_collision_models.CollisionStretchGripper.dist_puller_forward_of_yaw", "modulename": "stretch_body.robot_collision_models", "qualname": "CollisionStretchGripper.dist_puller_forward_of_yaw", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x_yaw</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot_collision_models.CollisionStretchGripper.dist_yaw_forward_of_base", "modulename": "stretch_body.robot_collision_models", "qualname": "CollisionStretchGripper.dist_yaw_forward_of_base", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x_arm</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot_collision_models.CollisionStretchGripper.dist_yaw_side_of_base", "modulename": "stretch_body.robot_collision_models", "qualname": "CollisionStretchGripper.dist_yaw_side_of_base", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot_collision_models.CollisionStretchGripper.dist_puller_past_base", "modulename": "stretch_body.robot_collision_models", "qualname": "CollisionStretchGripper.dist_puller_past_base", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x_arm</span>, </span><span class=\"param\"><span class=\"n\">x_yaw</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot_collision_models.CollisionStretchGripper.dist_palm_past_base", "modulename": "stretch_body.robot_collision_models", "qualname": "CollisionStretchGripper.dist_palm_past_base", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x_arm</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot_collision_models.CollisionStretchGripper.prevent_palm_retract_into_base", "modulename": "stretch_body.robot_collision_models", "qualname": "CollisionStretchGripper.prevent_palm_retract_into_base", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x_lift</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot_collision_models.CollisionStretchGripper.prevent_palm_lower_into_base", "modulename": "stretch_body.robot_collision_models", "qualname": "CollisionStretchGripper.prevent_palm_lower_into_base", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x_arm</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot_collision_models.CollisionStretchGripper.prevent_puller_lower_into_base", "modulename": "stretch_body.robot_collision_models", "qualname": "CollisionStretchGripper.prevent_puller_lower_into_base", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x_arm</span>, </span><span class=\"param\"><span class=\"n\">x_yaw</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot_collision_models.CollisionStretchGripper.prevent_puller_retract_into_base", "modulename": "stretch_body.robot_collision_models", "qualname": "CollisionStretchGripper.prevent_puller_retract_into_base", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x_lift</span>, </span><span class=\"param\"><span class=\"n\">x_yaw</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot_collision_models.CollisionStretchGripper.step", "modulename": "stretch_body.robot_collision_models", "qualname": "CollisionStretchGripper.step", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">status</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot_monitor", "modulename": "stretch_body.robot_monitor", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot_monitor.RobotMonitor", "modulename": "stretch_body.robot_monitor", "qualname": "RobotMonitor", "kind": "class", "doc": "<p>The RobotMonitor class provide system level monitoring of Status data\nfor important events. These events are logged to file (and optionally console)\nThe events to be monitored may be turned on/off/configured via YAML\nThe RobotMonitor is managed by the Robot class\nIt runs at 5Hz</p>\n", "bases": "stretch_body.device.Device"}, {"fullname": "stretch_body.robot_monitor.RobotMonitor.__init__", "modulename": "stretch_body.robot_monitor", "qualname": "RobotMonitor.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">robot</span></span>)</span>"}, {"fullname": "stretch_body.robot_monitor.RobotMonitor.robot", "modulename": "stretch_body.robot_monitor", "qualname": "RobotMonitor.robot", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot_monitor.RobotMonitor.startup", "modulename": "stretch_body.robot_monitor", "qualname": "RobotMonitor.startup", "kind": "function", "doc": "<p>Starts machinery required to interface with this device</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>threaded : bool\n    whether a thread manages hardware polling/pushing in the background</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>bool\n    whether the startup procedure succeeded</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot_monitor.RobotMonitor.step", "modulename": "stretch_body.robot_monitor", "qualname": "RobotMonitor.step", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot_monitor.RobotMonitor.monitor_base_cliff_event", "modulename": "stretch_body.robot_monitor", "qualname": "RobotMonitor.monitor_base_cliff_event", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot_monitor.RobotMonitor.monitor_base_bump_event", "modulename": "stretch_body.robot_monitor", "qualname": "RobotMonitor.monitor_base_bump_event", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot_monitor.RobotMonitor.monitor_over_tilt_alert", "modulename": "stretch_body.robot_monitor", "qualname": "RobotMonitor.monitor_over_tilt_alert", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot_monitor.RobotMonitor.monitor_wrist_single_tap", "modulename": "stretch_body.robot_monitor", "qualname": "RobotMonitor.monitor_wrist_single_tap", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot_monitor.RobotMonitor.monitor_guarded_contact", "modulename": "stretch_body.robot_monitor", "qualname": "RobotMonitor.monitor_guarded_contact", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot_monitor.RobotMonitor.monitor_dynamixel_flags", "modulename": "stretch_body.robot_monitor", "qualname": "RobotMonitor.monitor_dynamixel_flags", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot_monitor.RobotMonitor.monitor_runstop", "modulename": "stretch_body.robot_monitor", "qualname": "RobotMonitor.monitor_runstop", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot_monitor.RobotMonitor.monitor_voltage", "modulename": "stretch_body.robot_monitor", "qualname": "RobotMonitor.monitor_voltage", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot_monitor.RobotMonitor.monitor_current", "modulename": "stretch_body.robot_monitor", "qualname": "RobotMonitor.monitor_current", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot_params", "modulename": "stretch_body.robot_params", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot_params.nominal_system_params", "modulename": "stretch_body.robot_params", "qualname": "nominal_system_params", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;logging&#x27;: {&#x27;version&#x27;: 1, &#x27;disable_existing_loggers&#x27;: True, &#x27;root&#x27;: {&#x27;level&#x27;: &#x27;DEBUG&#x27;, &#x27;handlers&#x27;: [&#x27;console_handler&#x27;, &#x27;file_handler&#x27;], &#x27;propagate&#x27;: False}, &#x27;handlers&#x27;: {&#x27;console_handler&#x27;: {&#x27;class&#x27;: &#x27;logging.StreamHandler&#x27;, &#x27;level&#x27;: &#x27;INFO&#x27;, &#x27;formatter&#x27;: &#x27;default_console_formatter&#x27;}, &#x27;file_handler&#x27;: {&#x27;class&#x27;: &#x27;logging.FileHandler&#x27;, &#x27;level&#x27;: &#x27;DEBUG&#x27;, &#x27;formatter&#x27;: &#x27;default_file_formatter&#x27;, &#x27;filename&#x27;: &#x27;/home/hello-robot/stretch_user/log/stretch_body_logger/stretchbody_20230825165220.log&#x27;}}, &#x27;formatters&#x27;: {&#x27;default_console_formatter&#x27;: {&#x27;format&#x27;: &#x27;[%(levelname)s] [%(name)s]: %(message)s&#x27;}, &#x27;brief_console_formatter&#x27;: {&#x27;format&#x27;: &#x27;%(message)s&#x27;}, &#x27;default_file_formatter&#x27;: {&#x27;format&#x27;: &#x27;[%(levelname)-8s] [%(asctime)s.%(msecs)03d] [%(name)s]: %(message)s&#x27;, &#x27;datefmt&#x27;: &#x27;%m/%d/%Y %H:%M:%S&#x27;}}}, &#x27;arm&#x27;: {&#x27;usb_name&#x27;: &#x27;/dev/hello-motor-arm&#x27;, &#x27;force_N_per_A&#x27;: 55.9, &#x27;chain_pitch&#x27;: 0.0167, &#x27;chain_sprocket_teeth&#x27;: 10, &#x27;gr_spur&#x27;: 3.875, &#x27;i_feedforward&#x27;: 0, &#x27;calibration_range_bounds&#x27;: [0.514, 0.525], &#x27;contact_models&#x27;: {&#x27;effort_pct&#x27;: {&#x27;contact_thresh_calibration_margin&#x27;: 10.0, &#x27;contact_thresh_max&#x27;: [-90.0, 90.0], &#x27;contact_thresh_default&#x27;: [-45.0, 45.0], &#x27;contact_thresh_homing&#x27;: [-45.0, 45.0]}}, &#x27;motion&#x27;: {&#x27;default&#x27;: {&#x27;accel_m&#x27;: 0.14, &#x27;vel_m&#x27;: 0.14}, &#x27;fast&#x27;: {&#x27;accel_m&#x27;: 0.3, &#x27;vel_m&#x27;: 0.3}, &#x27;max&#x27;: {&#x27;accel_m&#x27;: 0.4, &#x27;vel_m&#x27;: 0.4}, &#x27;slow&#x27;: {&#x27;accel_m&#x27;: 0.05, &#x27;vel_m&#x27;: 0.05}, &#x27;trajectory_max&#x27;: {&#x27;vel_m&#x27;: 0.4, &#x27;accel_m&#x27;: 0.4}, &#x27;vel_brakezone_factor&#x27;: 0.2}, &#x27;set_safe_velocity&#x27;: 1, &#x27;range_m&#x27;: [0.0, 0.52]}, &#x27;base&#x27;: {&#x27;usb_name_left_wheel&#x27;: &#x27;/dev/hello-motor-left-wheel&#x27;, &#x27;usb_name_right_wheel&#x27;: &#x27;/dev/hello-motor-right-wheel&#x27;, &#x27;force_N_per_A&#x27;: 21.18, &#x27;gr&#x27;: 3.8, &#x27;motion&#x27;: {&#x27;default&#x27;: {&#x27;accel_m&#x27;: 0.12, &#x27;vel_m&#x27;: 0.12}, &#x27;fast&#x27;: {&#x27;accel_m&#x27;: 0.25, &#x27;vel_m&#x27;: 0.25}, &#x27;max&#x27;: {&#x27;accel_m&#x27;: 0.3, &#x27;vel_m&#x27;: 0.3}, &#x27;slow&#x27;: {&#x27;accel_m&#x27;: 0.06, &#x27;vel_m&#x27;: 0.04}, &#x27;trajectory_max&#x27;: {&#x27;vel_r&#x27;: 50.0, &#x27;accel_r&#x27;: 30.0}}, &#x27;contact_models&#x27;: {&#x27;effort_pct&#x27;: {&#x27;contact_thresh_translate_default&#x27;: 60.0, &#x27;contact_thresh_rotate_default&#x27;: 60.0, &#x27;contact_thresh_translate_max&#x27;: 100.0, &#x27;contact_thresh_rotate_max&#x27;: 100.0}}, &#x27;sentry_max_velocity&#x27;: {&#x27;limit_accel_m&#x27;: 0.15, &#x27;limit_vel_m&#x27;: 0.1, &#x27;max_arm_extension_m&#x27;: 0.03, &#x27;max_lift_height_m&#x27;: 0.3, &#x27;min_wrist_yaw_rad&#x27;: 2.54}, &#x27;wheel_diameter_m&#x27;: 0.1016, &#x27;wheel_separation_m&#x27;: 0.3153}, &#x27;collision_arm_camera&#x27;: {&#x27;enabled&#x27;: 1, &#x27;py_class_name&#x27;: &#x27;CollisionArmCamera&#x27;, &#x27;py_module_name&#x27;: &#x27;stretch_body.robot_collision_models&#x27;}, &#x27;collision_stretch_gripper&#x27;: {&#x27;enabled&#x27;: 1, &#x27;py_class_name&#x27;: &#x27;CollisionStretchGripper&#x27;, &#x27;py_module_name&#x27;: &#x27;stretch_body.robot_collision_models&#x27;}, &#x27;dxl_comm_errors&#x27;: {&#x27;warn_every_s&#x27;: 1.0, &#x27;warn_above_rate&#x27;: 0.1, &#x27;verbose&#x27;: 0}, &#x27;end_of_arm&#x27;: {&#x27;usb_name&#x27;: &#x27;/dev/hello-dynamixel-wrist&#x27;, &#x27;devices&#x27;: {&#x27;wrist_yaw&#x27;: {&#x27;py_class_name&#x27;: &#x27;WristYaw&#x27;, &#x27;py_module_name&#x27;: &#x27;stretch_body.wrist_yaw&#x27;}}, &#x27;use_group_sync_read&#x27;: 1, &#x27;retry_on_comm_failure&#x27;: 1, &#x27;baud&#x27;: 115200, &#x27;dxl_latency_timer&#x27;: 64, &#x27;stow&#x27;: {&#x27;wrist_yaw&#x27;: 3.4}}, &#x27;head&#x27;: {&#x27;usb_name&#x27;: &#x27;/dev/hello-dynamixel-head&#x27;, &#x27;use_group_sync_read&#x27;: 1, &#x27;retry_on_comm_failure&#x27;: 1, &#x27;dxl_latency_timer&#x27;: 64, &#x27;baud&#x27;: 115200}, &#x27;head_pan&#x27;: {&#x27;flip_encoder_polarity&#x27;: 1, &#x27;gr&#x27;: 1.0, &#x27;id&#x27;: 11, &#x27;max_voltage_limit&#x27;: 15, &#x27;min_voltage_limit&#x27;: 11, &#x27;motion&#x27;: {&#x27;trajectory_vel_ctrl&#x27;: 1, &#x27;trajectory_vel_ctrl_kP&#x27;: 1.5, &#x27;default&#x27;: {&#x27;accel&#x27;: 8.0, &#x27;vel&#x27;: 3.0}, &#x27;fast&#x27;: {&#x27;accel&#x27;: 10.0, &#x27;vel&#x27;: 5.0}, &#x27;max&#x27;: {&#x27;accel&#x27;: 14.0, &#x27;vel&#x27;: 7.0}, &#x27;slow&#x27;: {&#x27;accel&#x27;: 4.0, &#x27;vel&#x27;: 1.0}, &#x27;trajectory_max&#x27;: {&#x27;vel_r&#x27;: 8.0, &#x27;accel_r&#x27;: 16.0}, &#x27;vel_brakezone_factor&#x27;: 1.5}, &#x27;set_safe_velocity&#x27;: 1, &#x27;pid&#x27;: [800, 200, 200], &#x27;pwm_homing&#x27;: [-300, 300], &#x27;pwm_limit&#x27;: 885, &#x27;req_calibration&#x27;: 0, &#x27;return_delay_time&#x27;: 0, &#x27;temperature_limit&#x27;: 72, &#x27;usb_name&#x27;: &#x27;/dev/hello-dynamixel-head&#x27;, &#x27;use_multiturn&#x27;: 0, &#x27;retry_on_comm_failure&#x27;: 1, &#x27;baud&#x27;: 115200, &#x27;enable_runstop&#x27;: 1, &#x27;disable_torque_on_stop&#x27;: 1, &#x27;stall_max_effort&#x27;: 20.0, &#x27;stall_backoff&#x27;: 0.017, &#x27;stall_max_time&#x27;: 1.0, &#x27;stall_min_vel&#x27;: 0.1, &#x27;range_pad_t&#x27;: [50.0, -50.0], &#x27;range_t&#x27;: [0, 3827], &#x27;zero_t&#x27;: 1250}, &#x27;head_tilt&#x27;: {&#x27;flip_encoder_polarity&#x27;: 1, &#x27;gr&#x27;: 1.0, &#x27;id&#x27;: 12, &#x27;max_voltage_limit&#x27;: 15, &#x27;min_voltage_limit&#x27;: 11, &#x27;motion&#x27;: {&#x27;trajectory_vel_ctrl&#x27;: 1, &#x27;trajectory_vel_ctrl_kP&#x27;: 1.5, &#x27;default&#x27;: {&#x27;accel&#x27;: 8.0, &#x27;vel&#x27;: 3.0}, &#x27;fast&#x27;: {&#x27;accel&#x27;: 10.0, &#x27;vel&#x27;: 5.0}, &#x27;max&#x27;: {&#x27;accel&#x27;: 14.0, &#x27;vel&#x27;: 6.0}, &#x27;slow&#x27;: {&#x27;accel&#x27;: 4.0, &#x27;vel&#x27;: 1.0}, &#x27;trajectory_max&#x27;: {&#x27;vel_r&#x27;: 8.0, &#x27;accel_r&#x27;: 16.0}, &#x27;vel_brakezone_factor&#x27;: 1.2}, &#x27;set_safe_velocity&#x27;: 1, &#x27;pid&#x27;: [800, 200, 200], &#x27;pwm_homing&#x27;: [-300, 300], &#x27;pwm_limit&#x27;: 885, &#x27;range_t&#x27;: [1775, 3150], &#x27;req_calibration&#x27;: 0, &#x27;return_delay_time&#x27;: 0, &#x27;temperature_limit&#x27;: 72, &#x27;usb_name&#x27;: &#x27;/dev/hello-dynamixel-head&#x27;, &#x27;use_multiturn&#x27;: 0, &#x27;zero_t&#x27;: 2048, &#x27;retry_on_comm_failure&#x27;: 1, &#x27;baud&#x27;: 115200, &#x27;enable_runstop&#x27;: 1, &#x27;disable_torque_on_stop&#x27;: 1, &#x27;stall_backoff&#x27;: 0.017, &#x27;stall_max_effort&#x27;: 20.0, &#x27;stall_max_time&#x27;: 1.0, &#x27;stall_min_vel&#x27;: 0.1, &#x27;range_pad_t&#x27;: [50.0, -50.0]}, &#x27;hello-motor-arm&#x27;: {&#x27;gains&#x27;: {&#x27;effort_LPF&#x27;: 10.0, &#x27;enable_guarded_mode&#x27;: 1, &#x27;enable_runstop&#x27;: 1, &#x27;enable_sync_mode&#x27;: 1, &#x27;enable_vel_watchdog&#x27;: 0, &#x27;flip_effort_polarity&#x27;: 0, &#x27;flip_encoder_polarity&#x27;: 0, &#x27;iMax_neg&#x27;: -4.35, &#x27;iMax_pos&#x27;: 4.35, &#x27;i_contact_neg&#x27;: -2.0, &#x27;i_contact_pos&#x27;: 2.0, &#x27;i_safety_feedforward&#x27;: 0.0, &#x27;pKd_d&#x27;: 60.0, &#x27;pKi_d&#x27;: 0.1, &#x27;pKi_limit&#x27;: 150, &#x27;pKp_d&#x27;: 8.0, &#x27;pLPF&#x27;: 60, &#x27;phase_advance_d&#x27;: 1.8, &#x27;pos_near_setpoint_d&#x27;: 2.0, &#x27;safety_hold&#x27;: 0, &#x27;safety_stiffness&#x27;: 1.0, &#x27;vKd_d&#x27;: 0, &#x27;vKi_d&#x27;: 0.005, &#x27;vKi_limit&#x27;: 200, &#x27;vKp_d&#x27;: 0.2, &#x27;vLPF&#x27;: 30, &#x27;vTe_d&#x27;: 50, &#x27;vel_near_setpoint_d&#x27;: 3.5, &#x27;vel_status_LPF&#x27;: 10.0}, &#x27;holding_torque&#x27;: 1.26, &#x27;motion&#x27;: {&#x27;accel&#x27;: 15, &#x27;vel&#x27;: 25}, &#x27;rated_current&#x27;: 2.8, &#x27;serial_no&#x27;: &#x27;20C35F0050555733352E3120FF0A2F22&#x27;}, &#x27;hello-motor-left-wheel&#x27;: {&#x27;gains&#x27;: {&#x27;effort_LPF&#x27;: 2.0, &#x27;enable_guarded_mode&#x27;: 0, &#x27;enable_runstop&#x27;: 1, &#x27;enable_sync_mode&#x27;: 1, &#x27;enable_vel_watchdog&#x27;: 1, &#x27;flip_effort_polarity&#x27;: 1, &#x27;flip_encoder_polarity&#x27;: 1, &#x27;iMax_neg&#x27;: -4.35, &#x27;iMax_pos&#x27;: 4.35, &#x27;i_contact_neg&#x27;: -3.0, &#x27;i_contact_pos&#x27;: 3.0, &#x27;i_safety_feedforward&#x27;: 0.0, &#x27;pKd_d&#x27;: 65.0, &#x27;pKi_d&#x27;: 0.1, &#x27;pKi_limit&#x27;: 200.0, &#x27;pKp_d&#x27;: 12.0, &#x27;pLPF&#x27;: 80.0, &#x27;phase_advance_d&#x27;: 1.8, &#x27;pos_near_setpoint_d&#x27;: 1.0, &#x27;safety_hold&#x27;: 0, &#x27;safety_stiffness&#x27;: 1.0, &#x27;vKd_d&#x27;: 0, &#x27;vKi_d&#x27;: 0.005, &#x27;vKi_limit&#x27;: 200, &#x27;vKp_d&#x27;: 0.2, &#x27;vLPF&#x27;: 30, &#x27;vTe_d&#x27;: 50, &#x27;vel_near_setpoint_d&#x27;: 3.5, &#x27;vel_status_LPF&#x27;: 10.0}, &#x27;holding_torque&#x27;: 1.26, &#x27;motion&#x27;: {&#x27;accel&#x27;: 15, &#x27;vel&#x27;: 25}, &#x27;rated_current&#x27;: 2.8, &#x27;serial_no&#x27;: &#x27;18DBCBE550555733352E3120FF0A3623&#x27;}, &#x27;hello-motor-lift&#x27;: {&#x27;gains&#x27;: {&#x27;effort_LPF&#x27;: 2.0, &#x27;enable_guarded_mode&#x27;: 1, &#x27;enable_runstop&#x27;: 1, &#x27;enable_sync_mode&#x27;: 1, &#x27;enable_vel_watchdog&#x27;: 0, &#x27;flip_effort_polarity&#x27;: 1, &#x27;flip_encoder_polarity&#x27;: 1, &#x27;iMax_neg&#x27;: -4.35, &#x27;iMax_pos&#x27;: 4.35, &#x27;i_contact_neg&#x27;: -3.0, &#x27;i_contact_pos&#x27;: 3.0, &#x27;i_safety_feedforward&#x27;: 1.2, &#x27;pKd_d&#x27;: 25.0, &#x27;pKi_d&#x27;: 0.05, &#x27;pKi_limit&#x27;: 100.0, &#x27;pKp_d&#x27;: 6.0, &#x27;pLPF&#x27;: 100, &#x27;phase_advance_d&#x27;: 1.8, &#x27;pos_near_setpoint_d&#x27;: 6.0, &#x27;safety_hold&#x27;: 1, &#x27;safety_stiffness&#x27;: 0.0, &#x27;vKd_d&#x27;: 0, &#x27;vKi_d&#x27;: 0.005, &#x27;vKi_limit&#x27;: 200, &#x27;vKp_d&#x27;: 0.2, &#x27;vLPF&#x27;: 30, &#x27;vTe_d&#x27;: 50, &#x27;vel_near_setpoint_d&#x27;: 3.5, &#x27;vel_status_LPF&#x27;: 10.0}, &#x27;holding_torque&#x27;: 1.9, &#x27;motion&#x27;: {&#x27;accel&#x27;: 15, &#x27;vel&#x27;: 12}, &#x27;rated_current&#x27;: 2.8, &#x27;serial_no&#x27;: &#x27;2DC886B750555733352E3120FF0HELLO&#x27;}, &#x27;hello-motor-right-wheel&#x27;: {&#x27;gains&#x27;: {&#x27;effort_LPF&#x27;: 2.0, &#x27;enable_guarded_mode&#x27;: 0, &#x27;enable_runstop&#x27;: 1, &#x27;enable_sync_mode&#x27;: 1, &#x27;enable_vel_watchdog&#x27;: 1, &#x27;flip_effort_polarity&#x27;: 0, &#x27;flip_encoder_polarity&#x27;: 0, &#x27;iMax_neg&#x27;: -4.35, &#x27;iMax_pos&#x27;: 4.35, &#x27;i_contact_neg&#x27;: -3.0, &#x27;i_contact_pos&#x27;: 3.0, &#x27;i_safety_feedforward&#x27;: 0.0, &#x27;pKd_d&#x27;: 65.0, &#x27;pKi_d&#x27;: 0.1, &#x27;pKi_limit&#x27;: 200.0, &#x27;pKp_d&#x27;: 12.0, &#x27;pLPF&#x27;: 80.0, &#x27;phase_advance_d&#x27;: 1.8, &#x27;pos_near_setpoint_d&#x27;: 1.0, &#x27;safety_hold&#x27;: 0, &#x27;safety_stiffness&#x27;: 1.0, &#x27;vKd_d&#x27;: 0, &#x27;vKi_d&#x27;: 0.005, &#x27;vKi_limit&#x27;: 200, &#x27;vKp_d&#x27;: 0.2, &#x27;vLPF&#x27;: 30, &#x27;vTe_d&#x27;: 50, &#x27;vel_near_setpoint_d&#x27;: 3.5, &#x27;vel_status_LPF&#x27;: 10.0}, &#x27;holding_torque&#x27;: 1.26, &#x27;motion&#x27;: {&#x27;accel&#x27;: 15, &#x27;vel&#x27;: 25}, &#x27;rated_current&#x27;: 2.8, &#x27;serial_no&#x27;: &#x27;4201994450555733352E3120FF0A3123&#x27;}, &#x27;lift&#x27;: {&#x27;usb_name&#x27;: &#x27;/dev/hello-motor-lift&#x27;, &#x27;force_N_per_A&#x27;: 75.0, &#x27;calibration_range_bounds&#x27;: [1.094, 1.106], &#x27;contact_models&#x27;: {&#x27;effort_pct&#x27;: {&#x27;contact_thresh_calibration_margin&#x27;: 10.0, &#x27;contact_thresh_max&#x27;: [-100, 100], &#x27;contact_thresh_default&#x27;: [-69.0, 69.0], &#x27;contact_thresh_homing&#x27;: [-69.0, 69.0]}}, &#x27;belt_pitch_m&#x27;: 0.005, &#x27;motion&#x27;: {&#x27;default&#x27;: {&#x27;accel_m&#x27;: 0.2, &#x27;vel_m&#x27;: 0.11}, &#x27;fast&#x27;: {&#x27;accel_m&#x27;: 0.25, &#x27;vel_m&#x27;: 0.13}, &#x27;max&#x27;: {&#x27;accel_m&#x27;: 0.3, &#x27;vel_m&#x27;: 0.15}, &#x27;slow&#x27;: {&#x27;accel_m&#x27;: 0.05, &#x27;vel_m&#x27;: 0.05}, &#x27;trajectory_max&#x27;: {&#x27;accel_m&#x27;: 0.3, &#x27;vel_m&#x27;: 0.15}, &#x27;vel_brakezone_factor&#x27;: 0.03}, &#x27;set_safe_velocity&#x27;: 1, &#x27;pinion_t&#x27;: 12, &#x27;i_feedforward&#x27;: 1.2, &#x27;range_m&#x27;: [0.0, 1.1]}, &#x27;pimu&#x27;: {&#x27;usb_name&#x27;: &#x27;/dev/hello-pimu&#x27;, &#x27;base_fan_off&#x27;: 70, &#x27;base_fan_on&#x27;: 82, &#x27;max_sync_rate_hz&#x27;: 80.0, &#x27;config&#x27;: {&#x27;accel_LPF&#x27;: 20.0, &#x27;bump_thresh&#x27;: 20.0, &#x27;cliff_LPF&#x27;: 10.0, &#x27;cliff_thresh&#x27;: -50, &#x27;current_LPF&#x27;: 10.0, &#x27;high_current_alert&#x27;: 7.0, &#x27;low_voltage_alert&#x27;: 10.5, &#x27;over_tilt_alert&#x27;: 0.17, &#x27;stop_at_cliff&#x27;: 0, &#x27;stop_at_high_current&#x27;: 0, &#x27;stop_at_low_voltage&#x27;: 1, &#x27;stop_at_runstop&#x27;: 1, &#x27;stop_at_tilt&#x27;: 0, &#x27;temp_LPF&#x27;: 1.0, &#x27;voltage_LPF&#x27;: 1.0, &#x27;cliff_zero&#x27;: [0.0, 0.0, 0.0, 0.0], &#x27;gravity_vector_scale&#x27;: 1.0, &#x27;gyro_zero_offsets&#x27;: [0.0, 0.0, 0.0], &#x27;mag_offsets&#x27;: [0.0, 0.0, 0.0], &#x27;mag_softiron_matrix&#x27;: [1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0], &#x27;rate_gyro_vector_scale&#x27;: 1.0}}, &#x27;robot&#x27;: {&#x27;rates&#x27;: {&#x27;DXLStatusThread_Hz&#x27;: 15.0, &#x27;NonDXLStatusThread_Hz&#x27;: 25.0, &#x27;SystemMonitorThread_Hz&#x27;: 15.0, &#x27;SystemMonitorThread_monitor_downrate_int&#x27;: 2, &#x27;SystemMonitorThread_trace_downrate_int&#x27;: 1, &#x27;SystemMonitorThread_collision_downrate_int&#x27;: 5, &#x27;SystemMonitorThread_sentry_downrate_int&#x27;: 1, &#x27;SystemMonitorThread_nondxl_trajectory_downrate_int&#x27;: 2}, &#x27;tool&#x27;: &#x27;tool_stretch_gripper&#x27;, &#x27;use_collision_manager&#x27;: 0, &#x27;stow&#x27;: {&#x27;arm&#x27;: 0.0, &#x27;head_pan&#x27;: 0.0, &#x27;head_tilt&#x27;: 0.0, &#x27;lift&#x27;: 0.23, &#x27;stretch_gripper&#x27;: 0, &#x27;wrist_yaw&#x27;: 3.4}, &#x27;use_monitor&#x27;: 1, &#x27;use_trace&#x27;: 0, &#x27;use_sentry&#x27;: 1, &#x27;use_asyncio&#x27;: 1, &#x27;batch_name&#x27;: &#x27;mitski&#x27;, &#x27;d435i&#x27;: {&#x27;serial_no&#x27;: &#x27;NA&#x27;}, &#x27;model_name&#x27;: &#x27;RE2V0&#x27;, &#x27;serial_no&#x27;: &#x27;stretch-re2-9994&#x27;, &#x27;foo&#x27;: &#x27;GTA CITY&#x27;, &#x27;log_to_console&#x27;: 0}, &#x27;robot_collision&#x27;: {&#x27;models&#x27;: [&#x27;collision_arm_camera&#x27;]}, &#x27;robot_monitor&#x27;: {&#x27;monitor_base_bump_event&#x27;: 1, &#x27;monitor_base_cliff_event&#x27;: 1, &#x27;monitor_current&#x27;: 1, &#x27;monitor_dynamixel_flags&#x27;: 1, &#x27;monitor_guarded_contact&#x27;: 1, &#x27;monitor_over_tilt_alert&#x27;: 1, &#x27;monitor_runstop&#x27;: 1, &#x27;monitor_voltage&#x27;: 1, &#x27;monitor_wrist_single_tap&#x27;: 1}, &#x27;robot_sentry&#x27;: {&#x27;base_fan_control&#x27;: 1, &#x27;base_max_velocity&#x27;: 1, &#x27;dynamixel_stop_on_runstop&#x27;: 1, &#x27;stretch_gripper_overload&#x27;: 1, &#x27;wrist_yaw_overload&#x27;: 1, &#x27;stepper_is_moving_filter&#x27;: 1}, &#x27;robot_trace&#x27;: {&#x27;n_samples_per_file&#x27;: 100, &#x27;duration_limit_minutes&#x27;: 10.0}, &#x27;stretch_gripper&#x27;: {&#x27;range_pad_t&#x27;: [100.0, -100.0], &#x27;flip_encoder_polarity&#x27;: 0, &#x27;gr&#x27;: 1.0, &#x27;id&#x27;: 14, &#x27;max_voltage_limit&#x27;: 15, &#x27;min_grip_strength&#x27;: -125, &#x27;min_voltage_limit&#x27;: 11, &#x27;motion&#x27;: {&#x27;trajectory_vel_ctrl&#x27;: 1, &#x27;trajectory_vel_ctrl_kP&#x27;: 1.5, &#x27;default&#x27;: {&#x27;accel&#x27;: 10.0, &#x27;vel&#x27;: 4.0}, &#x27;fast&#x27;: {&#x27;accel&#x27;: 10.0, &#x27;vel&#x27;: 6.0}, &#x27;max&#x27;: {&#x27;accel&#x27;: 12, &#x27;vel&#x27;: 8}, &#x27;slow&#x27;: {&#x27;accel&#x27;: 4.0, &#x27;vel&#x27;: 2.0}, &#x27;trajectory_max&#x27;: {&#x27;vel_r&#x27;: 50.0, &#x27;accel_r&#x27;: 100.0}, &#x27;vel_brakezone_factor&#x27;: 1}, &#x27;set_safe_velocity&#x27;: 1, &#x27;pid&#x27;: [640.0, 0, 0], &#x27;pwm_homing&#x27;: [-400, 0], &#x27;pwm_limit&#x27;: 885, &#x27;req_calibration&#x27;: 1, &#x27;return_delay_time&#x27;: 0, &#x27;stall_backoff&#x27;: 2.0, &#x27;stall_max_effort&#x27;: 20.0, &#x27;stall_max_time&#x27;: 0.5, &#x27;stall_min_vel&#x27;: 0.1, &#x27;temperature_limit&#x27;: 72, &#x27;usb_name&#x27;: &#x27;/dev/hello-dynamixel-wrist&#x27;, &#x27;use_multiturn&#x27;: 1, &#x27;retry_on_comm_failure&#x27;: 1, &#x27;baud&#x27;: 115200, &#x27;enable_runstop&#x27;: 1, &#x27;disable_torque_on_stop&#x27;: 1, &#x27;range_t&#x27;: [0, 8022], &#x27;zero_t&#x27;: 5212}, &#x27;tool_none&#x27;: {&#x27;use_group_sync_read&#x27;: 1, &#x27;retry_on_comm_failure&#x27;: 1, &#x27;baud&#x27;: 115200, &#x27;dxl_latency_timer&#x27;: 64, &#x27;py_class_name&#x27;: &#x27;ToolNone&#x27;, &#x27;py_module_name&#x27;: &#x27;stretch_body.end_of_arm_tools&#x27;, &#x27;stow&#x27;: {&#x27;wrist_yaw&#x27;: 3.4}, &#x27;devices&#x27;: {&#x27;wrist_yaw&#x27;: {&#x27;py_class_name&#x27;: &#x27;WristYaw&#x27;, &#x27;py_module_name&#x27;: &#x27;stretch_body.wrist_yaw&#x27;}}}, &#x27;tool_stretch_gripper&#x27;: {&#x27;use_group_sync_read&#x27;: 1, &#x27;retry_on_comm_failure&#x27;: 1, &#x27;baud&#x27;: 115200, &#x27;dxl_latency_timer&#x27;: 64, &#x27;py_class_name&#x27;: &#x27;ToolStretchGripper&#x27;, &#x27;py_module_name&#x27;: &#x27;stretch_body.end_of_arm_tools&#x27;, &#x27;stow&#x27;: {&#x27;stretch_gripper&#x27;: 0, &#x27;wrist_yaw&#x27;: 3.4}, &#x27;devices&#x27;: {&#x27;stretch_gripper&#x27;: {&#x27;py_class_name&#x27;: &#x27;StretchGripper&#x27;, &#x27;py_module_name&#x27;: &#x27;stretch_body.stretch_gripper&#x27;}, &#x27;wrist_yaw&#x27;: {&#x27;py_class_name&#x27;: &#x27;WristYaw&#x27;, &#x27;py_module_name&#x27;: &#x27;stretch_body.wrist_yaw&#x27;}}, &#x27;collision_models&#x27;: [&#x27;collision_stretch_gripper&#x27;]}, &#x27;wacc&#x27;: {&#x27;usb_name&#x27;: &#x27;/dev/hello-wacc&#x27;, &#x27;config&#x27;: {&#x27;accel_LPF&#x27;: 10.0, &#x27;accel_range_g&#x27;: 4, &#x27;accel_single_tap_dur&#x27;: 70, &#x27;accel_single_tap_thresh&#x27;: 50, &#x27;ana_LPF&#x27;: 10.0, &#x27;accel_gravity_scale&#x27;: 1.0}}, &#x27;wrist_yaw&#x27;: {&#x27;flip_encoder_polarity&#x27;: 1, &#x27;gr&#x27;: 2.4, &#x27;id&#x27;: 13, &#x27;max_voltage_limit&#x27;: 15, &#x27;min_voltage_limit&#x27;: 11, &#x27;motion&#x27;: {&#x27;trajectory_vel_ctrl&#x27;: 1, &#x27;trajectory_vel_ctrl_kP&#x27;: 1.5, &#x27;default&#x27;: {&#x27;accel&#x27;: 3.0, &#x27;vel&#x27;: 2.0}, &#x27;fast&#x27;: {&#x27;accel&#x27;: 5.0, &#x27;vel&#x27;: 2.5}, &#x27;max&#x27;: {&#x27;accel&#x27;: 10, &#x27;vel&#x27;: 3.0}, &#x27;slow&#x27;: {&#x27;accel&#x27;: 1.5, &#x27;vel&#x27;: 0.75}, &#x27;trajectory_max&#x27;: {&#x27;vel_r&#x27;: 3.0, &#x27;accel_r&#x27;: 3.0}, &#x27;vel_brakezone_factor&#x27;: 1}, &#x27;set_safe_velocity&#x27;: 1, &#x27;pid&#x27;: [640, 0, 0], &#x27;pwm_homing&#x27;: [-300, 300], &#x27;pwm_limit&#x27;: 885, &#x27;req_calibration&#x27;: 1, &#x27;return_delay_time&#x27;: 0, &#x27;stall_backoff&#x27;: 0.017, &#x27;stall_max_effort&#x27;: 20.0, &#x27;stall_max_time&#x27;: 1.0, &#x27;stall_min_vel&#x27;: 0.1, &#x27;temperature_limit&#x27;: 72, &#x27;usb_name&#x27;: &#x27;/dev/hello-dynamixel-wrist&#x27;, &#x27;use_multiturn&#x27;: 1, &#x27;retry_on_comm_failure&#x27;: 1, &#x27;baud&#x27;: 115200, &#x27;enable_runstop&#x27;: 1, &#x27;disable_torque_on_stop&#x27;: 1, &#x27;range_pad_t&#x27;: [100.0, -100.0], &#x27;range_t&#x27;: [0, 9340], &#x27;zero_t&#x27;: 7175}, &#x27;respeaker&#x27;: {&#x27;usb_name&#x27;: &#x27;/dev/hello-respeaker&#x27;}, &#x27;lidar&#x27;: {&#x27;usb_name&#x27;: &#x27;/dev/hello-lrf&#x27;}}"}, {"fullname": "stretch_body.robot_params.RobotParams", "modulename": "stretch_body.robot_params", "qualname": "RobotParams", "kind": "class", "doc": "<p>Build the parameter dictionary that is available as stretch_body.Device().robot_params.\nOverwrite dictionaries in order of ascending priority</p>\n\n<ol>\n<li>stretch_body.robot_params.nominal_system_params  | Generic systems settings (Common across all robot models. Factory may modify these via Pip updates)</li>\n<li>stretch_body.robot_params_XXXX.py                | Nominal robot paramters for this robot model (e.g., RE1V0) as defined in stretch_user_params.yaml. Factory may modify these via Pip updates</li>\n<li>Outside parameters                               | (eg, from stretch_tool_share.stretch_dex_wrist.params). Factory may modify these via Pip updates.</li>\n<li>stretch_configuration_params.yaml                | Robot specific data (eg, serial numbers and calibrations). Calibration tools may update these.</li>\n<li>stretch_user_params.yaml                         | User specific data (eg, contact thresholds, controller tunings, etc)</li>\n</ol>\n"}, {"fullname": "stretch_body.robot_params.RobotParams.get_user_params_header", "modulename": "stretch_body.robot_params", "qualname": "RobotParams.get_user_params_header", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot_params.RobotParams.get_configuration_params_header", "modulename": "stretch_body.robot_params", "qualname": "RobotParams.get_configuration_params_header", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot_params.RobotParams.are_params_valid", "modulename": "stretch_body.robot_params", "qualname": "RobotParams.are_params_valid", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot_params.RobotParams.get_params", "modulename": "stretch_body.robot_params", "qualname": "RobotParams.get_params", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot_params.RobotParams.add_params", "modulename": "stretch_body.robot_params", "qualname": "RobotParams.add_params", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">new_params</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot_params.RobotParams.set_logging_level", "modulename": "stretch_body.robot_params", "qualname": "RobotParams.set_logging_level", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">level</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"o\">=</span><span class=\"s1\">&#39;console_handler&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot_params.RobotParams.param_module_name", "modulename": "stretch_body.robot_params", "qualname": "RobotParams.param_module_name", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;stretch_body.robot_params_RE2V0&#x27;"}, {"fullname": "stretch_body.robot_params_RE1V0", "modulename": "stretch_body.robot_params_RE1V0", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot_params_RE1V0.user_params_header", "modulename": "stretch_body.robot_params_RE1V0", "qualname": "user_params_header", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;#User parameters\\n#You can override nominal settings here\\n#USE WITH CAUTION. IT IS POSSIBLE TO CAUSE UNSAFE BEHAVIOR OF THE ROBOT \\n&#x27;"}, {"fullname": "stretch_body.robot_params_RE1V0.user_params_template", "modulename": "stretch_body.robot_params_RE1V0", "qualname": "user_params_template", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;robot&#x27;: {&#x27;use_collision_manager&#x27;: 0}}"}, {"fullname": "stretch_body.robot_params_RE1V0.configuration_params_header", "modulename": "stretch_body.robot_params_RE1V0", "qualname": "configuration_params_header", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;#Parameters that are specific to this robot\\n#Do not edit, instead edit stretch_user_params.yaml\\n&#x27;"}, {"fullname": "stretch_body.robot_params_RE1V0.configuration_params_template", "modulename": "stretch_body.robot_params_RE1V0", "qualname": "configuration_params_template", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;arm&#x27;: {&#x27;contact_thresh_N&#x27;: [-70, 70], &#x27;contact_thresh_max_N&#x27;: [-100, 100], &#x27;homing_force_N&#x27;: [-60, 80], &#x27;i_feedforward&#x27;: 0, &#x27;range_m&#x27;: [0.0, 0.52]}, &#x27;lift&#x27;: {&#x27;contact_thresh_N&#x27;: [-70, 70], &#x27;contact_thresh_max_N&#x27;: [-100, 100], &#x27;homing_force_N&#x27;: [-70, 70], &#x27;i_feedforward&#x27;: 0.54, &#x27;range_m&#x27;: [0.0, 1.1]}, &#x27;base&#x27;: {&#x27;wheel_separation_m&#x27;: 0.3153}, &#x27;head_pan&#x27;: {&#x27;range_t&#x27;: [0, 3827], &#x27;zero_t&#x27;: 1165, &#x27;baud&#x27;: 115200, &#x27;use_multiturn&#x27;: 0}, &#x27;head_tilt&#x27;: {&#x27;range_t&#x27;: [1775, 3150], &#x27;zero_t&#x27;: 2048, &#x27;baud&#x27;: 115200}, &#x27;head&#x27;: {&#x27;baud&#x27;: 115200}, &#x27;end_of_arm&#x27;: {&#x27;baud&#x27;: 115200}, &#x27;hello-motor-arm&#x27;: {&#x27;serial_no&#x27;: &#x27;NA&#x27;}, &#x27;hello-motor-lift&#x27;: {&#x27;serial_no&#x27;: &#x27;NA&#x27;}, &#x27;hello-motor-left-wheel&#x27;: {&#x27;serial_no&#x27;: &#x27;NA&#x27;}, &#x27;hello-motor-right-wheel&#x27;: {&#x27;serial_no&#x27;: &#x27;NA&#x27;}, &#x27;pimu&#x27;: {&#x27;config&#x27;: {&#x27;cliff_zero&#x27;: [0.0, 0.0, 0.0, 0.0], &#x27;gyro_zero_offsets&#x27;: [0.0, 0.0, 0.0], &#x27;gravity_vector_scale&#x27;: 1.0, &#x27;mag_offsets&#x27;: [0.0, 0.0, 0.0], &#x27;mag_softiron_matrix&#x27;: [1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0], &#x27;rate_gyro_vector_scale&#x27;: 1.0}}, &#x27;robot&#x27;: {&#x27;batch_name&#x27;: &#x27;NA&#x27;, &#x27;serial_no&#x27;: &#x27;NA&#x27;, &#x27;d435i&#x27;: {&#x27;serial_no&#x27;: &#x27;NA&#x27;}, &#x27;model_name&#x27;: &#x27;RE1V0&#x27;}, &#x27;stretch_gripper&#x27;: {&#x27;range_t&#x27;: [0, 8022], &#x27;zero_t&#x27;: 5212, &#x27;baud&#x27;: 115200}, &#x27;tool_stretch_gripper&#x27;: {&#x27;baud&#x27;: 115200}, &#x27;tool_none&#x27;: {&#x27;baud&#x27;: 115200}, &#x27;wacc&#x27;: {&#x27;config&#x27;: {&#x27;accel_gravity_scale&#x27;: 1.0}}, &#x27;wrist_yaw&#x27;: {&#x27;range_t&#x27;: [0, 9340], &#x27;zero_t&#x27;: 7175, &#x27;baud&#x27;: 115200}}"}, {"fullname": "stretch_body.robot_params_RE1V0.nominal_params", "modulename": "stretch_body.robot_params_RE1V0", "qualname": "nominal_params", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;arm&#x27;: {&#x27;usb_name&#x27;: &#x27;/dev/hello-motor-arm&#x27;, &#x27;chain_pitch&#x27;: 0.0167, &#x27;chain_sprocket_teeth&#x27;: 10, &#x27;gr_spur&#x27;: 3.875, &#x27;i_feedforward&#x27;: 0, &#x27;force_N_per_A&#x27;: 55.9, &#x27;calibration_range_bounds&#x27;: [0.514, 0.525], &#x27;contact_models&#x27;: {&#x27;effort_pct&#x27;: {&#x27;contact_thresh_calibration_margin&#x27;: 10.0, &#x27;contact_thresh_max&#x27;: [-90.0, 90.0]}}, &#x27;motion&#x27;: {&#x27;default&#x27;: {&#x27;accel_m&#x27;: 0.14, &#x27;vel_m&#x27;: 0.14}, &#x27;fast&#x27;: {&#x27;accel_m&#x27;: 0.2, &#x27;vel_m&#x27;: 0.25}, &#x27;max&#x27;: {&#x27;accel_m&#x27;: 0.3, &#x27;vel_m&#x27;: 0.3}, &#x27;slow&#x27;: {&#x27;accel_m&#x27;: 0.07, &#x27;vel_m&#x27;: 0.06}, &#x27;trajectory_max&#x27;: {&#x27;vel_m&#x27;: 0.3, &#x27;accel_m&#x27;: 0.5}, &#x27;vel_brakezone_factor&#x27;: 1}, &#x27;set_safe_velocity&#x27;: 1}, &#x27;base&#x27;: {&#x27;usb_name_left_wheel&#x27;: &#x27;/dev/hello-motor-left-wheel&#x27;, &#x27;usb_name_right_wheel&#x27;: &#x27;/dev/hello-motor-right-wheel&#x27;, &#x27;force_N_per_A&#x27;: 21.18, &#x27;gr&#x27;: 3.4, &#x27;motion&#x27;: {&#x27;default&#x27;: {&#x27;accel_m&#x27;: 0.2, &#x27;vel_m&#x27;: 0.15}, &#x27;fast&#x27;: {&#x27;accel_m&#x27;: 0.25, &#x27;vel_m&#x27;: 0.2}, &#x27;max&#x27;: {&#x27;accel_m&#x27;: 0.4, &#x27;vel_m&#x27;: 0.3}, &#x27;slow&#x27;: {&#x27;accel_m&#x27;: 0.15, &#x27;vel_m&#x27;: 0.1}, &#x27;trajectory_max&#x27;: {&#x27;vel_r&#x27;: 50.0, &#x27;accel_r&#x27;: 30.0}}, &#x27;contact_models&#x27;: {&#x27;effort_pct&#x27;: {&#x27;contact_thresh_translate_default&#x27;: 60.0, &#x27;contact_thresh_rotate_default&#x27;: 60.0, &#x27;contact_thresh_translate_max&#x27;: 100.0, &#x27;contact_thresh_rotate_max&#x27;: 100.0}}, &#x27;sentry_max_velocity&#x27;: {&#x27;limit_accel_m&#x27;: 0.15, &#x27;limit_vel_m&#x27;: 0.1, &#x27;max_arm_extension_m&#x27;: 0.03, &#x27;max_lift_height_m&#x27;: 0.3, &#x27;min_wrist_yaw_rad&#x27;: 2.54}, &#x27;wheel_diameter_m&#x27;: 0.1016}, &#x27;collision_arm_camera&#x27;: {&#x27;enabled&#x27;: 1, &#x27;py_class_name&#x27;: &#x27;CollisionArmCamera&#x27;, &#x27;py_module_name&#x27;: &#x27;stretch_body.robot_collision_models&#x27;}, &#x27;collision_stretch_gripper&#x27;: {&#x27;enabled&#x27;: 1, &#x27;py_class_name&#x27;: &#x27;CollisionStretchGripper&#x27;, &#x27;py_module_name&#x27;: &#x27;stretch_body.robot_collision_models&#x27;}, &#x27;dxl_comm_errors&#x27;: {&#x27;warn_every_s&#x27;: 1.0, &#x27;warn_above_rate&#x27;: 0.1, &#x27;verbose&#x27;: 0}, &#x27;end_of_arm&#x27;: {&#x27;usb_name&#x27;: &#x27;/dev/hello-dynamixel-wrist&#x27;, &#x27;devices&#x27;: {&#x27;wrist_yaw&#x27;: {&#x27;py_class_name&#x27;: &#x27;WristYaw&#x27;, &#x27;py_module_name&#x27;: &#x27;stretch_body.wrist_yaw&#x27;}}, &#x27;use_group_sync_read&#x27;: 1, &#x27;retry_on_comm_failure&#x27;: 1, &#x27;dxl_latency_timer&#x27;: 64, &#x27;stow&#x27;: {&#x27;wrist_yaw&#x27;: 3.4}}, &#x27;head&#x27;: {&#x27;usb_name&#x27;: &#x27;/dev/hello-dynamixel-head&#x27;, &#x27;use_group_sync_read&#x27;: 1, &#x27;retry_on_comm_failure&#x27;: 1, &#x27;dxl_latency_timer&#x27;: 64}, &#x27;head_pan&#x27;: {&#x27;range_pad_t&#x27;: [50.0, -50.0], &#x27;flip_encoder_polarity&#x27;: 1, &#x27;gr&#x27;: 1.0, &#x27;id&#x27;: 11, &#x27;max_voltage_limit&#x27;: 15, &#x27;min_voltage_limit&#x27;: 11, &#x27;motion&#x27;: {&#x27;trajectory_vel_ctrl&#x27;: 1, &#x27;trajectory_vel_ctrl_kP&#x27;: 1.5, &#x27;default&#x27;: {&#x27;accel&#x27;: 8.0, &#x27;vel&#x27;: 3.0}, &#x27;fast&#x27;: {&#x27;accel&#x27;: 10.0, &#x27;vel&#x27;: 5.0}, &#x27;max&#x27;: {&#x27;accel&#x27;: 14.0, &#x27;vel&#x27;: 7.0}, &#x27;slow&#x27;: {&#x27;accel&#x27;: 4.0, &#x27;vel&#x27;: 1.0}, &#x27;trajectory_max&#x27;: {&#x27;vel_r&#x27;: 8.0, &#x27;accel_r&#x27;: 16.0}, &#x27;vel_brakezone_factor&#x27;: 1}, &#x27;set_safe_velocity&#x27;: 1, &#x27;pid&#x27;: [800, 200, 200], &#x27;pwm_homing&#x27;: [-300, 300], &#x27;pwm_limit&#x27;: 885, &#x27;req_calibration&#x27;: 0, &#x27;return_delay_time&#x27;: 0, &#x27;temperature_limit&#x27;: 72, &#x27;usb_name&#x27;: &#x27;/dev/hello-dynamixel-head&#x27;, &#x27;retry_on_comm_failure&#x27;: 1, &#x27;enable_runstop&#x27;: 1, &#x27;disable_torque_on_stop&#x27;: 1, &#x27;stall_max_effort&#x27;: 20.0, &#x27;stall_backoff&#x27;: 0.017, &#x27;stall_max_time&#x27;: 1.0, &#x27;stall_min_vel&#x27;: 0.1}, &#x27;head_tilt&#x27;: {&#x27;range_pad_t&#x27;: [50.0, -50.0], &#x27;flip_encoder_polarity&#x27;: 1, &#x27;gr&#x27;: 1.0, &#x27;id&#x27;: 12, &#x27;max_voltage_limit&#x27;: 15, &#x27;min_voltage_limit&#x27;: 11, &#x27;motion&#x27;: {&#x27;trajectory_vel_ctrl&#x27;: 1, &#x27;trajectory_vel_ctrl_kP&#x27;: 1.5, &#x27;default&#x27;: {&#x27;accel&#x27;: 8.0, &#x27;vel&#x27;: 3.0}, &#x27;fast&#x27;: {&#x27;accel&#x27;: 10.0, &#x27;vel&#x27;: 5.0}, &#x27;max&#x27;: {&#x27;accel&#x27;: 14.0, &#x27;vel&#x27;: 6.0}, &#x27;slow&#x27;: {&#x27;accel&#x27;: 4.0, &#x27;vel&#x27;: 1.0}, &#x27;trajectory_max&#x27;: {&#x27;vel_r&#x27;: 8.0, &#x27;accel_r&#x27;: 16.0}, &#x27;vel_brakezone_factor&#x27;: 1}, &#x27;set_safe_velocity&#x27;: 1, &#x27;pid&#x27;: [800, 200, 200], &#x27;pwm_homing&#x27;: [-300, 300], &#x27;pwm_limit&#x27;: 885, &#x27;range_t&#x27;: [1775, 3150], &#x27;req_calibration&#x27;: 0, &#x27;return_delay_time&#x27;: 0, &#x27;temperature_limit&#x27;: 72, &#x27;usb_name&#x27;: &#x27;/dev/hello-dynamixel-head&#x27;, &#x27;use_multiturn&#x27;: 0, &#x27;zero_t&#x27;: 2048, &#x27;retry_on_comm_failure&#x27;: 1, &#x27;enable_runstop&#x27;: 1, &#x27;disable_torque_on_stop&#x27;: 1, &#x27;stall_backoff&#x27;: 0.017, &#x27;stall_max_effort&#x27;: 20.0, &#x27;stall_max_time&#x27;: 1.0, &#x27;stall_min_vel&#x27;: 0.1}, &#x27;hello-motor-arm&#x27;: {&#x27;gains&#x27;: {&#x27;effort_LPF&#x27;: 10.0, &#x27;enable_guarded_mode&#x27;: 1, &#x27;enable_runstop&#x27;: 1, &#x27;enable_sync_mode&#x27;: 1, &#x27;enable_vel_watchdog&#x27;: 0, &#x27;flip_effort_polarity&#x27;: 0, &#x27;flip_encoder_polarity&#x27;: 0, &#x27;iMax_neg&#x27;: -3.2, &#x27;iMax_pos&#x27;: 3.2, &#x27;i_contact_neg&#x27;: -3.2, &#x27;i_contact_pos&#x27;: 3.2, &#x27;i_safety_feedforward&#x27;: 0.0, &#x27;pKd_d&#x27;: 60.0, &#x27;pKi_d&#x27;: 0.1, &#x27;pKi_limit&#x27;: 150, &#x27;pKp_d&#x27;: 8.0, &#x27;pLPF&#x27;: 60, &#x27;phase_advance_d&#x27;: 1.8, &#x27;pos_near_setpoint_d&#x27;: 2.0, &#x27;safety_hold&#x27;: 0, &#x27;safety_stiffness&#x27;: 1.0, &#x27;vKd_d&#x27;: 0, &#x27;vKi_d&#x27;: 0.005, &#x27;vKi_limit&#x27;: 200, &#x27;vKp_d&#x27;: 0.2, &#x27;vLPF&#x27;: 30, &#x27;vTe_d&#x27;: 50, &#x27;vel_near_setpoint_d&#x27;: 3.5, &#x27;vel_status_LPF&#x27;: 10.0}, &#x27;holding_torque&#x27;: 1.26, &#x27;motion&#x27;: {&#x27;accel&#x27;: 15, &#x27;vel&#x27;: 25}, &#x27;rated_current&#x27;: 2.8}, &#x27;hello-motor-left-wheel&#x27;: {&#x27;gains&#x27;: {&#x27;effort_LPF&#x27;: 2.0, &#x27;enable_guarded_mode&#x27;: 0, &#x27;enable_runstop&#x27;: 1, &#x27;enable_sync_mode&#x27;: 1, &#x27;enable_vel_watchdog&#x27;: 1, &#x27;flip_effort_polarity&#x27;: 1, &#x27;flip_encoder_polarity&#x27;: 1, &#x27;iMax_neg&#x27;: -2.8, &#x27;iMax_pos&#x27;: 2.8, &#x27;i_contact_neg&#x27;: -3.0, &#x27;i_contact_pos&#x27;: 3.0, &#x27;i_safety_feedforward&#x27;: 0.0, &#x27;pKd_d&#x27;: 40.0, &#x27;pKi_d&#x27;: 0.1, &#x27;pKi_limit&#x27;: 200, &#x27;pKp_d&#x27;: 8.0, &#x27;pLPF&#x27;: 200, &#x27;phase_advance_d&#x27;: 1.8, &#x27;pos_near_setpoint_d&#x27;: 1.0, &#x27;safety_hold&#x27;: 0, &#x27;safety_stiffness&#x27;: 1.0, &#x27;vKd_d&#x27;: 0, &#x27;vKi_d&#x27;: 0.005, &#x27;vKi_limit&#x27;: 200, &#x27;vKp_d&#x27;: 0.2, &#x27;vLPF&#x27;: 30, &#x27;vTe_d&#x27;: 50, &#x27;vel_near_setpoint_d&#x27;: 3.5, &#x27;vel_status_LPF&#x27;: 10.0}, &#x27;holding_torque&#x27;: 1.26, &#x27;motion&#x27;: {&#x27;accel&#x27;: 15, &#x27;vel&#x27;: 25}, &#x27;rated_current&#x27;: 2.8}, &#x27;hello-motor-lift&#x27;: {&#x27;gains&#x27;: {&#x27;effort_LPF&#x27;: 2.0, &#x27;enable_guarded_mode&#x27;: 1, &#x27;enable_runstop&#x27;: 1, &#x27;enable_sync_mode&#x27;: 1, &#x27;enable_vel_watchdog&#x27;: 0, &#x27;flip_effort_polarity&#x27;: 1, &#x27;flip_encoder_polarity&#x27;: 1, &#x27;iMax_neg&#x27;: -3.2, &#x27;iMax_pos&#x27;: 3.2, &#x27;i_contact_neg&#x27;: -1.5, &#x27;i_contact_pos&#x27;: 2.0, &#x27;i_safety_feedforward&#x27;: 0.4, &#x27;pKd_d&#x27;: 20.0, &#x27;pKi_d&#x27;: 0.05, &#x27;pKi_limit&#x27;: 100.0, &#x27;pKp_d&#x27;: 10.0, &#x27;pLPF&#x27;: 60, &#x27;phase_advance_d&#x27;: 1.8, &#x27;pos_near_setpoint_d&#x27;: 6.0, &#x27;safety_hold&#x27;: 1, &#x27;safety_stiffness&#x27;: 0.0, &#x27;vKd_d&#x27;: 0, &#x27;vKi_d&#x27;: 0.005, &#x27;vKi_limit&#x27;: 200, &#x27;vKp_d&#x27;: 0.2, &#x27;vLPF&#x27;: 30, &#x27;vTe_d&#x27;: 50, &#x27;vel_near_setpoint_d&#x27;: 3.5, &#x27;vel_status_LPF&#x27;: 10.0}, &#x27;holding_torque&#x27;: 1.9, &#x27;motion&#x27;: {&#x27;accel&#x27;: 15, &#x27;vel&#x27;: 12}, &#x27;rated_current&#x27;: 2.8}, &#x27;hello-motor-right-wheel&#x27;: {&#x27;gains&#x27;: {&#x27;effort_LPF&#x27;: 2.0, &#x27;enable_guarded_mode&#x27;: 0, &#x27;enable_runstop&#x27;: 1, &#x27;enable_sync_mode&#x27;: 1, &#x27;enable_vel_watchdog&#x27;: 1, &#x27;flip_effort_polarity&#x27;: 0, &#x27;flip_encoder_polarity&#x27;: 0, &#x27;iMax_neg&#x27;: -2.8, &#x27;iMax_pos&#x27;: 2.8, &#x27;i_contact_neg&#x27;: -3.0, &#x27;i_contact_pos&#x27;: 3.0, &#x27;i_safety_feedforward&#x27;: 0.0, &#x27;pKd_d&#x27;: 40.0, &#x27;pKi_d&#x27;: 0.1, &#x27;pKi_limit&#x27;: 200, &#x27;pKp_d&#x27;: 8.0, &#x27;pLPF&#x27;: 200, &#x27;phase_advance_d&#x27;: 1.8, &#x27;pos_near_setpoint_d&#x27;: 1.0, &#x27;safety_hold&#x27;: 0, &#x27;safety_stiffness&#x27;: 1.0, &#x27;vKd_d&#x27;: 0, &#x27;vKi_d&#x27;: 0.005, &#x27;vKi_limit&#x27;: 200, &#x27;vKp_d&#x27;: 0.2, &#x27;vLPF&#x27;: 30, &#x27;vTe_d&#x27;: 50, &#x27;vel_near_setpoint_d&#x27;: 3.5, &#x27;vel_status_LPF&#x27;: 10.0}, &#x27;holding_torque&#x27;: 1.26, &#x27;motion&#x27;: {&#x27;accel&#x27;: 15, &#x27;vel&#x27;: 25}, &#x27;rated_current&#x27;: 2.8}, &#x27;lift&#x27;: {&#x27;usb_name&#x27;: &#x27;/dev/hello-motor-lift&#x27;, &#x27;belt_pitch_m&#x27;: 0.005, &#x27;contact_models&#x27;: {&#x27;effort_pct&#x27;: {&#x27;contact_thresh_calibration_margin&#x27;: 10.0, &#x27;contact_thresh_max&#x27;: [-100, 100]}}, &#x27;calibration_range_bounds&#x27;: [1.094, 1.106], &#x27;force_N_per_A&#x27;: 75.0, &#x27;motion&#x27;: {&#x27;default&#x27;: {&#x27;accel_m&#x27;: 0.15, &#x27;vel_m&#x27;: 0.095}, &#x27;fast&#x27;: {&#x27;accel_m&#x27;: 0.2, &#x27;vel_m&#x27;: 0.12}, &#x27;max&#x27;: {&#x27;accel_m&#x27;: 0.3, &#x27;vel_m&#x27;: 0.15}, &#x27;slow&#x27;: {&#x27;accel_m&#x27;: 0.05, &#x27;vel_m&#x27;: 0.05}, &#x27;trajectory_max&#x27;: {&#x27;vel_m&#x27;: 0.2, &#x27;accel_m&#x27;: 0.3}, &#x27;vel_brakezone_factor&#x27;: 1}, &#x27;set_safe_velocity&#x27;: 1, &#x27;pinion_t&#x27;: 12}, &#x27;pimu&#x27;: {&#x27;usb_name&#x27;: &#x27;/dev/hello-pimu&#x27;, &#x27;base_fan_off&#x27;: 70, &#x27;base_fan_on&#x27;: 82, &#x27;max_sync_rate_hz&#x27;: 80.0, &#x27;config&#x27;: {&#x27;accel_LPF&#x27;: 20.0, &#x27;bump_thresh&#x27;: 20.0, &#x27;cliff_LPF&#x27;: 10.0, &#x27;cliff_thresh&#x27;: -50, &#x27;current_LPF&#x27;: 10.0, &#x27;high_current_alert&#x27;: 7.0, &#x27;low_voltage_alert&#x27;: 10.5, &#x27;over_tilt_alert&#x27;: 0.17, &#x27;stop_at_cliff&#x27;: 0, &#x27;stop_at_high_current&#x27;: 0, &#x27;stop_at_low_voltage&#x27;: 1, &#x27;stop_at_runstop&#x27;: 1, &#x27;stop_at_tilt&#x27;: 0, &#x27;temp_LPF&#x27;: 1.0, &#x27;voltage_LPF&#x27;: 1.0}}, &#x27;robot&#x27;: {&#x27;rates&#x27;: {&#x27;DXLStatusThread_Hz&#x27;: 15.0, &#x27;NonDXLStatusThread_Hz&#x27;: 25.0, &#x27;SystemMonitorThread_Hz&#x27;: 15.0, &#x27;SystemMonitorThread_monitor_downrate_int&#x27;: 2, &#x27;SystemMonitorThread_trace_downrate_int&#x27;: 1, &#x27;SystemMonitorThread_collision_downrate_int&#x27;: 5, &#x27;SystemMonitorThread_sentry_downrate_int&#x27;: 1, &#x27;SystemMonitorThread_nondxl_trajectory_downrate_int&#x27;: 2}, &#x27;tool&#x27;: &#x27;tool_stretch_gripper&#x27;, &#x27;use_collision_manager&#x27;: 0, &#x27;stow&#x27;: {&#x27;arm&#x27;: 0.0, &#x27;head_pan&#x27;: 0.0, &#x27;head_tilt&#x27;: 0.0, &#x27;lift&#x27;: 0.2, &#x27;stretch_gripper&#x27;: 0, &#x27;wrist_yaw&#x27;: 3.4}, &#x27;use_monitor&#x27;: 1, &#x27;use_trace&#x27;: 0, &#x27;use_sentry&#x27;: 1, &#x27;use_asyncio&#x27;: 1}, &#x27;robot_collision&#x27;: {&#x27;models&#x27;: [&#x27;collision_arm_camera&#x27;]}, &#x27;robot_monitor&#x27;: {&#x27;monitor_base_bump_event&#x27;: 1, &#x27;monitor_base_cliff_event&#x27;: 1, &#x27;monitor_current&#x27;: 1, &#x27;monitor_dynamixel_flags&#x27;: 1, &#x27;monitor_guarded_contact&#x27;: 1, &#x27;monitor_over_tilt_alert&#x27;: 1, &#x27;monitor_runstop&#x27;: 1, &#x27;monitor_voltage&#x27;: 1, &#x27;monitor_wrist_single_tap&#x27;: 1}, &#x27;robot_trace&#x27;: {&#x27;n_samples_per_file&#x27;: 100, &#x27;duration_limit_minutes&#x27;: 10.0}, &#x27;robot_sentry&#x27;: {&#x27;base_fan_control&#x27;: 1, &#x27;base_max_velocity&#x27;: 1, &#x27;dynamixel_stop_on_runstop&#x27;: 1, &#x27;stretch_gripper_overload&#x27;: 1, &#x27;wrist_yaw_overload&#x27;: 1, &#x27;stepper_is_moving_filter&#x27;: 1}, &#x27;stretch_gripper&#x27;: {&#x27;range_pad_t&#x27;: [0.0, -0.0], &#x27;flip_encoder_polarity&#x27;: 0, &#x27;gr&#x27;: 1.0, &#x27;id&#x27;: 14, &#x27;max_voltage_limit&#x27;: 15, &#x27;min_grip_strength&#x27;: -125, &#x27;min_voltage_limit&#x27;: 11, &#x27;motion&#x27;: {&#x27;trajectory_vel_ctrl&#x27;: 1, &#x27;trajectory_vel_ctrl_kP&#x27;: 1.5, &#x27;default&#x27;: {&#x27;accel&#x27;: 10.0, &#x27;vel&#x27;: 4.0}, &#x27;fast&#x27;: {&#x27;accel&#x27;: 10.0, &#x27;vel&#x27;: 6.0}, &#x27;max&#x27;: {&#x27;accel&#x27;: 12, &#x27;vel&#x27;: 8}, &#x27;slow&#x27;: {&#x27;accel&#x27;: 4.0, &#x27;vel&#x27;: 2.0}, &#x27;trajectory_max&#x27;: {&#x27;vel_r&#x27;: 50.0, &#x27;accel_r&#x27;: 100.0}, &#x27;vel_brakezone_factor&#x27;: 1}, &#x27;set_safe_velocity&#x27;: 1, &#x27;pid&#x27;: [640.0, 0, 0], &#x27;pwm_homing&#x27;: [-400, 0], &#x27;pwm_limit&#x27;: 885, &#x27;req_calibration&#x27;: 1, &#x27;return_delay_time&#x27;: 0, &#x27;stall_backoff&#x27;: 2.0, &#x27;stall_max_effort&#x27;: 20.0, &#x27;stall_max_time&#x27;: 0.5, &#x27;stall_min_vel&#x27;: 0.1, &#x27;temperature_limit&#x27;: 72, &#x27;usb_name&#x27;: &#x27;/dev/hello-dynamixel-wrist&#x27;, &#x27;use_multiturn&#x27;: 1, &#x27;retry_on_comm_failure&#x27;: 1, &#x27;enable_runstop&#x27;: 1, &#x27;disable_torque_on_stop&#x27;: 1}, &#x27;tool_none&#x27;: {&#x27;use_group_sync_read&#x27;: 1, &#x27;retry_on_comm_failure&#x27;: 1, &#x27;dxl_latency_timer&#x27;: 64, &#x27;py_class_name&#x27;: &#x27;ToolNone&#x27;, &#x27;py_module_name&#x27;: &#x27;stretch_body.end_of_arm_tools&#x27;, &#x27;stow&#x27;: {&#x27;wrist_yaw&#x27;: 3.4}, &#x27;devices&#x27;: {&#x27;wrist_yaw&#x27;: {&#x27;py_class_name&#x27;: &#x27;WristYaw&#x27;, &#x27;py_module_name&#x27;: &#x27;stretch_body.wrist_yaw&#x27;}}}, &#x27;tool_stretch_gripper&#x27;: {&#x27;use_group_sync_read&#x27;: 1, &#x27;retry_on_comm_failure&#x27;: 1, &#x27;dxl_latency_timer&#x27;: 64, &#x27;py_class_name&#x27;: &#x27;ToolStretchGripper&#x27;, &#x27;py_module_name&#x27;: &#x27;stretch_body.end_of_arm_tools&#x27;, &#x27;stow&#x27;: {&#x27;stretch_gripper&#x27;: 0, &#x27;wrist_yaw&#x27;: 3.4}, &#x27;devices&#x27;: {&#x27;stretch_gripper&#x27;: {&#x27;py_class_name&#x27;: &#x27;StretchGripper&#x27;, &#x27;py_module_name&#x27;: &#x27;stretch_body.stretch_gripper&#x27;}, &#x27;wrist_yaw&#x27;: {&#x27;py_class_name&#x27;: &#x27;WristYaw&#x27;, &#x27;py_module_name&#x27;: &#x27;stretch_body.wrist_yaw&#x27;}}, &#x27;collision_models&#x27;: [&#x27;collision_stretch_gripper&#x27;]}, &#x27;wacc&#x27;: {&#x27;usb_name&#x27;: &#x27;/dev/hello-wacc&#x27;, &#x27;config&#x27;: {&#x27;accel_LPF&#x27;: 10.0, &#x27;accel_range_g&#x27;: 4, &#x27;accel_single_tap_dur&#x27;: 70, &#x27;accel_single_tap_thresh&#x27;: 50, &#x27;ana_LPF&#x27;: 10.0}}, &#x27;wrist_yaw&#x27;: {&#x27;range_pad_t&#x27;: [100.0, -100.0], &#x27;flip_encoder_polarity&#x27;: 1, &#x27;gr&#x27;: 2.4, &#x27;id&#x27;: 13, &#x27;max_voltage_limit&#x27;: 15, &#x27;min_voltage_limit&#x27;: 11, &#x27;motion&#x27;: {&#x27;trajectory_vel_ctrl&#x27;: 1, &#x27;trajectory_vel_ctrl_kP&#x27;: 1.5, &#x27;default&#x27;: {&#x27;accel&#x27;: 3.0, &#x27;vel&#x27;: 2.0}, &#x27;fast&#x27;: {&#x27;accel&#x27;: 5.0, &#x27;vel&#x27;: 2.5}, &#x27;max&#x27;: {&#x27;accel&#x27;: 10, &#x27;vel&#x27;: 3.0}, &#x27;slow&#x27;: {&#x27;accel&#x27;: 1.5, &#x27;vel&#x27;: 0.75}, &#x27;trajectory_max&#x27;: {&#x27;vel_r&#x27;: 3.0, &#x27;accel_r&#x27;: 3.0}, &#x27;vel_brakezone_factor&#x27;: 1}, &#x27;set_safe_velocity&#x27;: 1, &#x27;pid&#x27;: [640, 0, 0], &#x27;pwm_homing&#x27;: [-300, 300], &#x27;pwm_limit&#x27;: 885, &#x27;req_calibration&#x27;: 1, &#x27;return_delay_time&#x27;: 0, &#x27;stall_backoff&#x27;: 0.017, &#x27;stall_max_effort&#x27;: 20.0, &#x27;stall_max_time&#x27;: 1.0, &#x27;stall_min_vel&#x27;: 0.1, &#x27;temperature_limit&#x27;: 72, &#x27;usb_name&#x27;: &#x27;/dev/hello-dynamixel-wrist&#x27;, &#x27;use_multiturn&#x27;: 1, &#x27;retry_on_comm_failure&#x27;: 1, &#x27;enable_runstop&#x27;: 1, &#x27;disable_torque_on_stop&#x27;: 1}, &#x27;respeaker&#x27;: {&#x27;usb_name&#x27;: &#x27;/dev/hello-respeaker&#x27;}, &#x27;lidar&#x27;: {&#x27;usb_name&#x27;: &#x27;/dev/hello-lrf&#x27;}}"}, {"fullname": "stretch_body.robot_params_RE1V0.factory_params_deprecated", "modulename": "stretch_body.robot_params_RE1V0", "qualname": "factory_params_deprecated", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;dxl_comm_errors&#x27;: {&#x27;warn_every_s&#x27;: 1.0, &#x27;warn_above_rate&#x27;: 0.1, &#x27;verbose&#x27;: 0}, &#x27;robot&#x27;: {&#x27;tool&#x27;: &#x27;tool_stretch_gripper&#x27;, &#x27;use_collision_manager&#x27;: 0}, &#x27;robot_sentry&#x27;: {&#x27;dynamixel_stop_on_runstop&#x27;: 1, &#x27;base_fan_control&#x27;: 1, &#x27;base_max_velocity&#x27;: 1, &#x27;stretch_gripper_overload&#x27;: 1, &#x27;wrist_yaw_overload&#x27;: 1, &#x27;stepper_is_moving_filter&#x27;: 1}, &#x27;robot_collision&#x27;: {&#x27;models&#x27;: [&#x27;collision_arm_camera&#x27;]}, &#x27;pimu&#x27;: {&#x27;max_sync_rate_hz&#x27;: 20.0}, &#x27;arm&#x27;: {&#x27;motion&#x27;: {&#x27;trajectory_max&#x27;: {&#x27;vel_m&#x27;: 0.3, &#x27;accel_m&#x27;: 0.5}}}, &#x27;lift&#x27;: {&#x27;motion&#x27;: {&#x27;trajectory_max&#x27;: {&#x27;vel_m&#x27;: 0.2, &#x27;accel_m&#x27;: 0.3}}}, &#x27;base&#x27;: {&#x27;sentry_max_velocity&#x27;: {&#x27;limit_accel_m&#x27;: 0.15, &#x27;limit_vel_m&#x27;: 0.1, &#x27;max_arm_extension_m&#x27;: 0.03, &#x27;max_lift_height_m&#x27;: 0.3, &#x27;min_wrist_yaw_rad&#x27;: 2.54}, &#x27;motion&#x27;: {&#x27;trajectory_max&#x27;: {&#x27;vel_r&#x27;: 50.0, &#x27;accel_r&#x27;: 30.0}}}, &#x27;hello-motor-arm&#x27;: {&#x27;gains&#x27;: {&#x27;vel_near_setpoint_d&#x27;: 3.5}}, &#x27;hello-motor-lift&#x27;: {&#x27;gains&#x27;: {&#x27;vel_near_setpoint_d&#x27;: 3.5}}, &#x27;hello-motor-right-wheel&#x27;: {&#x27;gains&#x27;: {&#x27;vel_near_setpoint_d&#x27;: 3.5, &#x27;pKd_d&#x27;: 40.0}}, &#x27;hello-motor-left-wheel&#x27;: {&#x27;gains&#x27;: {&#x27;vel_near_setpoint_d&#x27;: 3.5, &#x27;pKd_d&#x27;: 40.0}}, &#x27;head&#x27;: {&#x27;use_group_sync_read&#x27;: 1, &#x27;retry_on_comm_failure&#x27;: 1, &#x27;baud&#x27;: 57600, &#x27;dxl_latency_timer&#x27;: 64}, &#x27;end_of_arm&#x27;: {&#x27;use_group_sync_read&#x27;: 1, &#x27;retry_on_comm_failure&#x27;: 1, &#x27;baud&#x27;: 57600, &#x27;dxl_latency_timer&#x27;: 64, &#x27;stow&#x27;: {&#x27;wrist_yaw&#x27;: 3.4}, &#x27;devices&#x27;: {&#x27;wrist_yaw&#x27;: {&#x27;py_class_name&#x27;: &#x27;WristYaw&#x27;, &#x27;py_module_name&#x27;: &#x27;stretch_body.wrist_yaw&#x27;}}}, &#x27;head_pan&#x27;: {&#x27;retry_on_comm_failure&#x27;: 1, &#x27;baud&#x27;: 57600, &#x27;enable_runstop&#x27;: 1, &#x27;pwm_homing&#x27;: [-300, 300], &#x27;motion&#x27;: {&#x27;trajectory_max&#x27;: {&#x27;vel_r&#x27;: 8.0, &#x27;accel_r&#x27;: 16.0}}, &#x27;disable_torque_on_stop&#x27;: 1, &#x27;pid&#x27;: [800, 200, 200]}, &#x27;head_tilt&#x27;: {&#x27;retry_on_comm_failure&#x27;: 1, &#x27;baud&#x27;: 57600, &#x27;enable_runstop&#x27;: 1, &#x27;pwm_homing&#x27;: [-300, 300], &#x27;motion&#x27;: {&#x27;trajectory_max&#x27;: {&#x27;vel_r&#x27;: 8.0, &#x27;accel_r&#x27;: 16.0}}, &#x27;disable_torque_on_stop&#x27;: 1}, &#x27;wrist_yaw&#x27;: {&#x27;retry_on_comm_failure&#x27;: 1, &#x27;baud&#x27;: 57600, &#x27;enable_runstop&#x27;: 1, &#x27;motion&#x27;: {&#x27;trajectory_max&#x27;: {&#x27;vel_r&#x27;: 8.0, &#x27;accel_r&#x27;: 16.0}}, &#x27;disable_torque_on_stop&#x27;: 1}, &#x27;stretch_gripper&#x27;: {&#x27;retry_on_comm_failure&#x27;: 1, &#x27;baud&#x27;: 57600, &#x27;enable_runstop&#x27;: 1, &#x27;motion&#x27;: {&#x27;trajectory_max&#x27;: {&#x27;vel_r&#x27;: 50.0, &#x27;accel_r&#x27;: 100.0}}, &#x27;disable_torque_on_stop&#x27;: 1}, &#x27;tool_none&#x27;: {&#x27;use_group_sync_read&#x27;: 1, &#x27;retry_on_comm_failure&#x27;: 1, &#x27;baud&#x27;: 57600, &#x27;dxl_latency_timer&#x27;: 64, &#x27;py_class_name&#x27;: &#x27;ToolNone&#x27;, &#x27;py_module_name&#x27;: &#x27;stretch_body.end_of_arm_tools&#x27;, &#x27;stow&#x27;: {&#x27;wrist_yaw&#x27;: 3.4}, &#x27;devices&#x27;: {&#x27;wrist_yaw&#x27;: {&#x27;py_class_name&#x27;: &#x27;WristYaw&#x27;, &#x27;py_module_name&#x27;: &#x27;stretch_body.wrist_yaw&#x27;}}}, &#x27;tool_stretch_gripper&#x27;: {&#x27;use_group_sync_read&#x27;: 1, &#x27;retry_on_comm_failure&#x27;: 1, &#x27;baud&#x27;: 57600, &#x27;dxl_latency_timer&#x27;: 64, &#x27;py_class_name&#x27;: &#x27;ToolStretchGripper&#x27;, &#x27;py_module_name&#x27;: &#x27;stretch_body.end_of_arm_tools&#x27;, &#x27;stow&#x27;: {&#x27;stretch_gripper&#x27;: 0, &#x27;wrist_yaw&#x27;: 3.4}, &#x27;devices&#x27;: {&#x27;stretch_gripper&#x27;: {&#x27;py_class_name&#x27;: &#x27;StretchGripper&#x27;, &#x27;py_module_name&#x27;: &#x27;stretch_body.stretch_gripper&#x27;}, &#x27;wrist_yaw&#x27;: {&#x27;py_class_name&#x27;: &#x27;WristYaw&#x27;, &#x27;py_module_name&#x27;: &#x27;stretch_body.wrist_yaw&#x27;}}, &#x27;collision_models&#x27;: [&#x27;collision_stretch_gripper&#x27;]}, &#x27;collision_arm_camera&#x27;: {&#x27;enabled&#x27;: 1, &#x27;py_class_name&#x27;: &#x27;CollisionArmCamera&#x27;, &#x27;py_module_name&#x27;: &#x27;stretch_body.robot_collision_models&#x27;}, &#x27;collision_stretch_gripper&#x27;: {&#x27;enabled&#x27;: 1, &#x27;py_class_name&#x27;: &#x27;CollisionStretchGripper&#x27;, &#x27;py_module_name&#x27;: &#x27;stretch_body.robot_collision_models&#x27;}, &#x27;logging&#x27;: {&#x27;version&#x27;: 1, &#x27;disable_existing_loggers&#x27;: True, &#x27;root&#x27;: {&#x27;level&#x27;: &#x27;DEBUG&#x27;, &#x27;handlers&#x27;: [&#x27;console_handler&#x27;, &#x27;file_handler&#x27;], &#x27;propagate&#x27;: False}, &#x27;handlers&#x27;: {&#x27;console_handler&#x27;: {&#x27;class&#x27;: &#x27;logging.StreamHandler&#x27;, &#x27;level&#x27;: &#x27;INFO&#x27;, &#x27;formatter&#x27;: &#x27;default_console_formatter&#x27;}, &#x27;file_handler&#x27;: {&#x27;class&#x27;: &#x27;logging.FileHandler&#x27;, &#x27;level&#x27;: &#x27;DEBUG&#x27;, &#x27;formatter&#x27;: &#x27;default_file_formatter&#x27;, &#x27;filename&#x27;: &#x27;/home/hello-robot/stretch_user/log/stretchbody_20230825165221.log&#x27;}}, &#x27;formatters&#x27;: {&#x27;default_console_formatter&#x27;: {&#x27;format&#x27;: &#x27;[%(levelname)s] [%(name)s]: %(message)s&#x27;}, &#x27;brief_console_formatter&#x27;: {&#x27;format&#x27;: &#x27;%(message)s&#x27;}, &#x27;default_file_formatter&#x27;: {&#x27;format&#x27;: &#x27;[%(levelname)-8s] [%(asctime)s.%(msecs)03d] [%(name)s]: %(message)s&#x27;, &#x27;datefmt&#x27;: &#x27;%m/%d/%Y %H:%M:%S&#x27;}}}}"}, {"fullname": "stretch_body.robot_params_RE2V0", "modulename": "stretch_body.robot_params_RE2V0", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot_params_RE2V0.user_params_header", "modulename": "stretch_body.robot_params_RE2V0", "qualname": "user_params_header", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;#User parameters\\n#You can override nominal settings here\\n#USE WITH CAUTION. IT IS POSSIBLE TO CAUSE UNSAFE BEHAVIOR OF THE ROBOT \\n&#x27;"}, {"fullname": "stretch_body.robot_params_RE2V0.user_params_template", "modulename": "stretch_body.robot_params_RE2V0", "qualname": "user_params_template", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;robot&#x27;: {&#x27;use_collision_manager&#x27;: 0}}"}, {"fullname": "stretch_body.robot_params_RE2V0.configuration_params_header", "modulename": "stretch_body.robot_params_RE2V0", "qualname": "configuration_params_header", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;#Parameters that are specific to this robot\\n#Do not edit, instead edit stretch_user_params.yaml\\n&#x27;"}, {"fullname": "stretch_body.robot_params_RE2V0.configuration_params_template", "modulename": "stretch_body.robot_params_RE2V0", "qualname": "configuration_params_template", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;arm&#x27;: {&#x27;contact_models&#x27;: {&#x27;effort_pct&#x27;: {&#x27;contact_thresh_default&#x27;: [-55.0, 55.0], &#x27;contact_thresh_homing&#x27;: [-55.0, 55.0]}}, &#x27;range_m&#x27;: [0.0, 0.52]}, &#x27;lift&#x27;: {&#x27;contact_models&#x27;: {&#x27;effort_pct&#x27;: {&#x27;contact_thresh_default&#x27;: [-10.0, 69.0], &#x27;contact_thresh_homing&#x27;: [-10.0, 69.0]}}, &#x27;i_feedforward&#x27;: 1.2, &#x27;range_m&#x27;: [0.0, 1.1]}, &#x27;base&#x27;: {&#x27;wheel_separation_m&#x27;: 0.3153}, &#x27;head_pan&#x27;: {&#x27;range_t&#x27;: [0, 3827], &#x27;zero_t&#x27;: 1250}, &#x27;head_tilt&#x27;: {&#x27;range_t&#x27;: [1775, 3150], &#x27;zero_t&#x27;: 2048}, &#x27;hello-motor-arm&#x27;: {&#x27;serial_no&#x27;: &#x27;NA&#x27;}, &#x27;hello-motor-lift&#x27;: {&#x27;serial_no&#x27;: &#x27;NA&#x27;, &#x27;gains&#x27;: {&#x27;i_safety_feedforward&#x27;: 1.2}}, &#x27;hello-motor-left-wheel&#x27;: {&#x27;serial_no&#x27;: &#x27;NA&#x27;}, &#x27;hello-motor-right-wheel&#x27;: {&#x27;serial_no&#x27;: &#x27;NA&#x27;}, &#x27;pimu&#x27;: {&#x27;config&#x27;: {&#x27;cliff_zero&#x27;: [0.0, 0.0, 0.0, 0.0], &#x27;gyro_zero_offsets&#x27;: [0.0, 0.0, 0.0], &#x27;gravity_vector_scale&#x27;: 1.0, &#x27;mag_offsets&#x27;: [0.0, 0.0, 0.0], &#x27;mag_softiron_matrix&#x27;: [1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0], &#x27;rate_gyro_vector_scale&#x27;: 1.0}}, &#x27;robot&#x27;: {&#x27;batch_name&#x27;: &#x27;NA&#x27;, &#x27;serial_no&#x27;: &#x27;NA&#x27;, &#x27;d435i&#x27;: {&#x27;serial_no&#x27;: &#x27;NA&#x27;}, &#x27;model_name&#x27;: &#x27;RE2V0&#x27;}, &#x27;stretch_gripper&#x27;: {&#x27;range_t&#x27;: [0, 8022], &#x27;zero_t&#x27;: 5212}, &#x27;wacc&#x27;: {&#x27;config&#x27;: {&#x27;accel_gravity_scale&#x27;: 1.0}}, &#x27;wrist_yaw&#x27;: {&#x27;range_t&#x27;: [0, 9340], &#x27;zero_t&#x27;: 7005}}"}, {"fullname": "stretch_body.robot_params_RE2V0.nominal_params", "modulename": "stretch_body.robot_params_RE2V0", "qualname": "nominal_params", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;arm&#x27;: {&#x27;usb_name&#x27;: &#x27;/dev/hello-motor-arm&#x27;, &#x27;force_N_per_A&#x27;: 55.9, &#x27;chain_pitch&#x27;: 0.0167, &#x27;chain_sprocket_teeth&#x27;: 10, &#x27;gr_spur&#x27;: 3.875, &#x27;i_feedforward&#x27;: 0, &#x27;calibration_range_bounds&#x27;: [0.514, 0.525], &#x27;contact_models&#x27;: {&#x27;effort_pct&#x27;: {&#x27;contact_thresh_calibration_margin&#x27;: 10.0, &#x27;contact_thresh_max&#x27;: [-90.0, 90.0], &#x27;contact_thresh_default&#x27;: [-45.0, 45.0], &#x27;contact_thresh_homing&#x27;: [-45.0, 45.0]}}, &#x27;motion&#x27;: {&#x27;default&#x27;: {&#x27;accel_m&#x27;: 0.14, &#x27;vel_m&#x27;: 0.14}, &#x27;fast&#x27;: {&#x27;accel_m&#x27;: 0.3, &#x27;vel_m&#x27;: 0.3}, &#x27;max&#x27;: {&#x27;accel_m&#x27;: 0.4, &#x27;vel_m&#x27;: 0.4}, &#x27;slow&#x27;: {&#x27;accel_m&#x27;: 0.05, &#x27;vel_m&#x27;: 0.05}, &#x27;trajectory_max&#x27;: {&#x27;vel_m&#x27;: 0.4, &#x27;accel_m&#x27;: 0.4}, &#x27;vel_brakezone_factor&#x27;: 0.2}, &#x27;set_safe_velocity&#x27;: 1, &#x27;range_m&#x27;: [0.0, 0.52]}, &#x27;base&#x27;: {&#x27;usb_name_left_wheel&#x27;: &#x27;/dev/hello-motor-left-wheel&#x27;, &#x27;usb_name_right_wheel&#x27;: &#x27;/dev/hello-motor-right-wheel&#x27;, &#x27;force_N_per_A&#x27;: 21.18, &#x27;gr&#x27;: 3.8, &#x27;motion&#x27;: {&#x27;default&#x27;: {&#x27;accel_m&#x27;: 0.12, &#x27;vel_m&#x27;: 0.12}, &#x27;fast&#x27;: {&#x27;accel_m&#x27;: 0.25, &#x27;vel_m&#x27;: 0.25}, &#x27;max&#x27;: {&#x27;accel_m&#x27;: 0.3, &#x27;vel_m&#x27;: 0.3}, &#x27;slow&#x27;: {&#x27;accel_m&#x27;: 0.06, &#x27;vel_m&#x27;: 0.04}, &#x27;trajectory_max&#x27;: {&#x27;vel_r&#x27;: 50.0, &#x27;accel_r&#x27;: 30.0}}, &#x27;contact_models&#x27;: {&#x27;effort_pct&#x27;: {&#x27;contact_thresh_translate_default&#x27;: 60.0, &#x27;contact_thresh_rotate_default&#x27;: 60.0, &#x27;contact_thresh_translate_max&#x27;: 100.0, &#x27;contact_thresh_rotate_max&#x27;: 100.0}}, &#x27;sentry_max_velocity&#x27;: {&#x27;limit_accel_m&#x27;: 0.15, &#x27;limit_vel_m&#x27;: 0.1, &#x27;max_arm_extension_m&#x27;: 0.03, &#x27;max_lift_height_m&#x27;: 0.3, &#x27;min_wrist_yaw_rad&#x27;: 2.54}, &#x27;wheel_diameter_m&#x27;: 0.1016, &#x27;wheel_separation_m&#x27;: 0.3153}, &#x27;collision_arm_camera&#x27;: {&#x27;enabled&#x27;: 1, &#x27;py_class_name&#x27;: &#x27;CollisionArmCamera&#x27;, &#x27;py_module_name&#x27;: &#x27;stretch_body.robot_collision_models&#x27;}, &#x27;collision_stretch_gripper&#x27;: {&#x27;enabled&#x27;: 1, &#x27;py_class_name&#x27;: &#x27;CollisionStretchGripper&#x27;, &#x27;py_module_name&#x27;: &#x27;stretch_body.robot_collision_models&#x27;}, &#x27;dxl_comm_errors&#x27;: {&#x27;warn_every_s&#x27;: 1.0, &#x27;warn_above_rate&#x27;: 0.1, &#x27;verbose&#x27;: 0}, &#x27;end_of_arm&#x27;: {&#x27;usb_name&#x27;: &#x27;/dev/hello-dynamixel-wrist&#x27;, &#x27;devices&#x27;: {&#x27;wrist_yaw&#x27;: {&#x27;py_class_name&#x27;: &#x27;WristYaw&#x27;, &#x27;py_module_name&#x27;: &#x27;stretch_body.wrist_yaw&#x27;}}, &#x27;use_group_sync_read&#x27;: 1, &#x27;retry_on_comm_failure&#x27;: 1, &#x27;baud&#x27;: 115200, &#x27;dxl_latency_timer&#x27;: 64, &#x27;stow&#x27;: {&#x27;wrist_yaw&#x27;: 3.4}}, &#x27;head&#x27;: {&#x27;usb_name&#x27;: &#x27;/dev/hello-dynamixel-head&#x27;, &#x27;use_group_sync_read&#x27;: 1, &#x27;retry_on_comm_failure&#x27;: 1, &#x27;dxl_latency_timer&#x27;: 64, &#x27;baud&#x27;: 115200}, &#x27;head_pan&#x27;: {&#x27;flip_encoder_polarity&#x27;: 1, &#x27;gr&#x27;: 1.0, &#x27;id&#x27;: 11, &#x27;max_voltage_limit&#x27;: 15, &#x27;min_voltage_limit&#x27;: 11, &#x27;motion&#x27;: {&#x27;trajectory_vel_ctrl&#x27;: 1, &#x27;trajectory_vel_ctrl_kP&#x27;: 1.5, &#x27;default&#x27;: {&#x27;accel&#x27;: 8.0, &#x27;vel&#x27;: 3.0}, &#x27;fast&#x27;: {&#x27;accel&#x27;: 10.0, &#x27;vel&#x27;: 5.0}, &#x27;max&#x27;: {&#x27;accel&#x27;: 14.0, &#x27;vel&#x27;: 7.0}, &#x27;slow&#x27;: {&#x27;accel&#x27;: 4.0, &#x27;vel&#x27;: 1.0}, &#x27;trajectory_max&#x27;: {&#x27;vel_r&#x27;: 8.0, &#x27;accel_r&#x27;: 16.0}, &#x27;vel_brakezone_factor&#x27;: 1.5}, &#x27;set_safe_velocity&#x27;: 1, &#x27;pid&#x27;: [800, 200, 200], &#x27;pwm_homing&#x27;: [-300, 300], &#x27;pwm_limit&#x27;: 885, &#x27;req_calibration&#x27;: 0, &#x27;return_delay_time&#x27;: 0, &#x27;temperature_limit&#x27;: 72, &#x27;usb_name&#x27;: &#x27;/dev/hello-dynamixel-head&#x27;, &#x27;use_multiturn&#x27;: 0, &#x27;retry_on_comm_failure&#x27;: 1, &#x27;baud&#x27;: 115200, &#x27;enable_runstop&#x27;: 1, &#x27;disable_torque_on_stop&#x27;: 1, &#x27;stall_max_effort&#x27;: 20.0, &#x27;stall_backoff&#x27;: 0.017, &#x27;stall_max_time&#x27;: 1.0, &#x27;stall_min_vel&#x27;: 0.1, &#x27;range_pad_t&#x27;: [50.0, -50.0], &#x27;range_t&#x27;: [0, 3827], &#x27;zero_t&#x27;: 1250}, &#x27;head_tilt&#x27;: {&#x27;flip_encoder_polarity&#x27;: 1, &#x27;gr&#x27;: 1.0, &#x27;id&#x27;: 12, &#x27;max_voltage_limit&#x27;: 15, &#x27;min_voltage_limit&#x27;: 11, &#x27;motion&#x27;: {&#x27;trajectory_vel_ctrl&#x27;: 1, &#x27;trajectory_vel_ctrl_kP&#x27;: 1.5, &#x27;default&#x27;: {&#x27;accel&#x27;: 8.0, &#x27;vel&#x27;: 3.0}, &#x27;fast&#x27;: {&#x27;accel&#x27;: 10.0, &#x27;vel&#x27;: 5.0}, &#x27;max&#x27;: {&#x27;accel&#x27;: 14.0, &#x27;vel&#x27;: 6.0}, &#x27;slow&#x27;: {&#x27;accel&#x27;: 4.0, &#x27;vel&#x27;: 1.0}, &#x27;trajectory_max&#x27;: {&#x27;vel_r&#x27;: 8.0, &#x27;accel_r&#x27;: 16.0}, &#x27;vel_brakezone_factor&#x27;: 1.2}, &#x27;set_safe_velocity&#x27;: 1, &#x27;pid&#x27;: [800, 200, 200], &#x27;pwm_homing&#x27;: [-300, 300], &#x27;pwm_limit&#x27;: 885, &#x27;range_t&#x27;: [1775, 3150], &#x27;req_calibration&#x27;: 0, &#x27;return_delay_time&#x27;: 0, &#x27;temperature_limit&#x27;: 72, &#x27;usb_name&#x27;: &#x27;/dev/hello-dynamixel-head&#x27;, &#x27;use_multiturn&#x27;: 0, &#x27;zero_t&#x27;: 2048, &#x27;retry_on_comm_failure&#x27;: 1, &#x27;baud&#x27;: 115200, &#x27;enable_runstop&#x27;: 1, &#x27;disable_torque_on_stop&#x27;: 1, &#x27;stall_backoff&#x27;: 0.017, &#x27;stall_max_effort&#x27;: 20.0, &#x27;stall_max_time&#x27;: 1.0, &#x27;stall_min_vel&#x27;: 0.1, &#x27;range_pad_t&#x27;: [50.0, -50.0]}, &#x27;hello-motor-arm&#x27;: {&#x27;gains&#x27;: {&#x27;effort_LPF&#x27;: 10.0, &#x27;enable_guarded_mode&#x27;: 1, &#x27;enable_runstop&#x27;: 1, &#x27;enable_sync_mode&#x27;: 1, &#x27;enable_vel_watchdog&#x27;: 0, &#x27;flip_effort_polarity&#x27;: 0, &#x27;flip_encoder_polarity&#x27;: 0, &#x27;iMax_neg&#x27;: -4.35, &#x27;iMax_pos&#x27;: 4.35, &#x27;i_contact_neg&#x27;: -2.0, &#x27;i_contact_pos&#x27;: 2.0, &#x27;i_safety_feedforward&#x27;: 0.0, &#x27;pKd_d&#x27;: 60.0, &#x27;pKi_d&#x27;: 0.1, &#x27;pKi_limit&#x27;: 150, &#x27;pKp_d&#x27;: 8.0, &#x27;pLPF&#x27;: 60, &#x27;phase_advance_d&#x27;: 1.8, &#x27;pos_near_setpoint_d&#x27;: 2.0, &#x27;safety_hold&#x27;: 0, &#x27;safety_stiffness&#x27;: 1.0, &#x27;vKd_d&#x27;: 0, &#x27;vKi_d&#x27;: 0.005, &#x27;vKi_limit&#x27;: 200, &#x27;vKp_d&#x27;: 0.2, &#x27;vLPF&#x27;: 30, &#x27;vTe_d&#x27;: 50, &#x27;vel_near_setpoint_d&#x27;: 3.5, &#x27;vel_status_LPF&#x27;: 10.0}, &#x27;holding_torque&#x27;: 1.26, &#x27;motion&#x27;: {&#x27;accel&#x27;: 15, &#x27;vel&#x27;: 25}, &#x27;rated_current&#x27;: 2.8, &#x27;serial_no&#x27;: &#x27;20C35F0050555733352E3120FF0A2F22&#x27;}, &#x27;hello-motor-left-wheel&#x27;: {&#x27;gains&#x27;: {&#x27;effort_LPF&#x27;: 2.0, &#x27;enable_guarded_mode&#x27;: 0, &#x27;enable_runstop&#x27;: 1, &#x27;enable_sync_mode&#x27;: 1, &#x27;enable_vel_watchdog&#x27;: 1, &#x27;flip_effort_polarity&#x27;: 1, &#x27;flip_encoder_polarity&#x27;: 1, &#x27;iMax_neg&#x27;: -4.35, &#x27;iMax_pos&#x27;: 4.35, &#x27;i_contact_neg&#x27;: -3.0, &#x27;i_contact_pos&#x27;: 3.0, &#x27;i_safety_feedforward&#x27;: 0.0, &#x27;pKd_d&#x27;: 65.0, &#x27;pKi_d&#x27;: 0.1, &#x27;pKi_limit&#x27;: 200.0, &#x27;pKp_d&#x27;: 12.0, &#x27;pLPF&#x27;: 80.0, &#x27;phase_advance_d&#x27;: 1.8, &#x27;pos_near_setpoint_d&#x27;: 1.0, &#x27;safety_hold&#x27;: 0, &#x27;safety_stiffness&#x27;: 1.0, &#x27;vKd_d&#x27;: 0, &#x27;vKi_d&#x27;: 0.005, &#x27;vKi_limit&#x27;: 200, &#x27;vKp_d&#x27;: 0.2, &#x27;vLPF&#x27;: 30, &#x27;vTe_d&#x27;: 50, &#x27;vel_near_setpoint_d&#x27;: 3.5, &#x27;vel_status_LPF&#x27;: 10.0}, &#x27;holding_torque&#x27;: 1.26, &#x27;motion&#x27;: {&#x27;accel&#x27;: 15, &#x27;vel&#x27;: 25}, &#x27;rated_current&#x27;: 2.8, &#x27;serial_no&#x27;: &#x27;18DBCBE550555733352E3120FF0A3623&#x27;}, &#x27;hello-motor-lift&#x27;: {&#x27;gains&#x27;: {&#x27;effort_LPF&#x27;: 2.0, &#x27;enable_guarded_mode&#x27;: 1, &#x27;enable_runstop&#x27;: 1, &#x27;enable_sync_mode&#x27;: 1, &#x27;enable_vel_watchdog&#x27;: 0, &#x27;flip_effort_polarity&#x27;: 1, &#x27;flip_encoder_polarity&#x27;: 1, &#x27;iMax_neg&#x27;: -4.35, &#x27;iMax_pos&#x27;: 4.35, &#x27;i_contact_neg&#x27;: -3.0, &#x27;i_contact_pos&#x27;: 3.0, &#x27;i_safety_feedforward&#x27;: 1.2, &#x27;pKd_d&#x27;: 25.0, &#x27;pKi_d&#x27;: 0.05, &#x27;pKi_limit&#x27;: 100.0, &#x27;pKp_d&#x27;: 6.0, &#x27;pLPF&#x27;: 100, &#x27;phase_advance_d&#x27;: 1.8, &#x27;pos_near_setpoint_d&#x27;: 6.0, &#x27;safety_hold&#x27;: 1, &#x27;safety_stiffness&#x27;: 0.0, &#x27;vKd_d&#x27;: 0, &#x27;vKi_d&#x27;: 0.005, &#x27;vKi_limit&#x27;: 200, &#x27;vKp_d&#x27;: 0.2, &#x27;vLPF&#x27;: 30, &#x27;vTe_d&#x27;: 50, &#x27;vel_near_setpoint_d&#x27;: 3.5, &#x27;vel_status_LPF&#x27;: 10.0}, &#x27;holding_torque&#x27;: 1.9, &#x27;motion&#x27;: {&#x27;accel&#x27;: 15, &#x27;vel&#x27;: 12}, &#x27;rated_current&#x27;: 2.8, &#x27;serial_no&#x27;: &#x27;2DC886B750555733352E3120FF0HELLO&#x27;}, &#x27;hello-motor-right-wheel&#x27;: {&#x27;gains&#x27;: {&#x27;effort_LPF&#x27;: 2.0, &#x27;enable_guarded_mode&#x27;: 0, &#x27;enable_runstop&#x27;: 1, &#x27;enable_sync_mode&#x27;: 1, &#x27;enable_vel_watchdog&#x27;: 1, &#x27;flip_effort_polarity&#x27;: 0, &#x27;flip_encoder_polarity&#x27;: 0, &#x27;iMax_neg&#x27;: -4.35, &#x27;iMax_pos&#x27;: 4.35, &#x27;i_contact_neg&#x27;: -3.0, &#x27;i_contact_pos&#x27;: 3.0, &#x27;i_safety_feedforward&#x27;: 0.0, &#x27;pKd_d&#x27;: 65.0, &#x27;pKi_d&#x27;: 0.1, &#x27;pKi_limit&#x27;: 200.0, &#x27;pKp_d&#x27;: 12.0, &#x27;pLPF&#x27;: 80.0, &#x27;phase_advance_d&#x27;: 1.8, &#x27;pos_near_setpoint_d&#x27;: 1.0, &#x27;safety_hold&#x27;: 0, &#x27;safety_stiffness&#x27;: 1.0, &#x27;vKd_d&#x27;: 0, &#x27;vKi_d&#x27;: 0.005, &#x27;vKi_limit&#x27;: 200, &#x27;vKp_d&#x27;: 0.2, &#x27;vLPF&#x27;: 30, &#x27;vTe_d&#x27;: 50, &#x27;vel_near_setpoint_d&#x27;: 3.5, &#x27;vel_status_LPF&#x27;: 10.0}, &#x27;holding_torque&#x27;: 1.26, &#x27;motion&#x27;: {&#x27;accel&#x27;: 15, &#x27;vel&#x27;: 25}, &#x27;rated_current&#x27;: 2.8, &#x27;serial_no&#x27;: &#x27;4201994450555733352E3120FF0A3123&#x27;}, &#x27;lift&#x27;: {&#x27;usb_name&#x27;: &#x27;/dev/hello-motor-lift&#x27;, &#x27;force_N_per_A&#x27;: 75.0, &#x27;calibration_range_bounds&#x27;: [1.094, 1.106], &#x27;contact_models&#x27;: {&#x27;effort_pct&#x27;: {&#x27;contact_thresh_calibration_margin&#x27;: 10.0, &#x27;contact_thresh_max&#x27;: [-100, 100], &#x27;contact_thresh_default&#x27;: [-69.0, 69.0], &#x27;contact_thresh_homing&#x27;: [-69.0, 69.0]}}, &#x27;belt_pitch_m&#x27;: 0.005, &#x27;motion&#x27;: {&#x27;default&#x27;: {&#x27;accel_m&#x27;: 0.2, &#x27;vel_m&#x27;: 0.11}, &#x27;fast&#x27;: {&#x27;accel_m&#x27;: 0.25, &#x27;vel_m&#x27;: 0.13}, &#x27;max&#x27;: {&#x27;accel_m&#x27;: 0.3, &#x27;vel_m&#x27;: 0.15}, &#x27;slow&#x27;: {&#x27;accel_m&#x27;: 0.05, &#x27;vel_m&#x27;: 0.05}, &#x27;trajectory_max&#x27;: {&#x27;accel_m&#x27;: 0.3, &#x27;vel_m&#x27;: 0.15}, &#x27;vel_brakezone_factor&#x27;: 0.03}, &#x27;set_safe_velocity&#x27;: 1, &#x27;pinion_t&#x27;: 12, &#x27;i_feedforward&#x27;: 1.2, &#x27;range_m&#x27;: [0.0, 1.1]}, &#x27;pimu&#x27;: {&#x27;usb_name&#x27;: &#x27;/dev/hello-pimu&#x27;, &#x27;base_fan_off&#x27;: 70, &#x27;base_fan_on&#x27;: 82, &#x27;max_sync_rate_hz&#x27;: 80.0, &#x27;config&#x27;: {&#x27;accel_LPF&#x27;: 20.0, &#x27;bump_thresh&#x27;: 20.0, &#x27;cliff_LPF&#x27;: 10.0, &#x27;cliff_thresh&#x27;: -50, &#x27;current_LPF&#x27;: 10.0, &#x27;high_current_alert&#x27;: 7.0, &#x27;low_voltage_alert&#x27;: 10.5, &#x27;over_tilt_alert&#x27;: 0.17, &#x27;stop_at_cliff&#x27;: 0, &#x27;stop_at_high_current&#x27;: 0, &#x27;stop_at_low_voltage&#x27;: 1, &#x27;stop_at_runstop&#x27;: 1, &#x27;stop_at_tilt&#x27;: 0, &#x27;temp_LPF&#x27;: 1.0, &#x27;voltage_LPF&#x27;: 1.0, &#x27;cliff_zero&#x27;: [0.0, 0.0, 0.0, 0.0], &#x27;gravity_vector_scale&#x27;: 1.0, &#x27;gyro_zero_offsets&#x27;: [0.0, 0.0, 0.0], &#x27;mag_offsets&#x27;: [0.0, 0.0, 0.0], &#x27;mag_softiron_matrix&#x27;: [1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0], &#x27;rate_gyro_vector_scale&#x27;: 1.0}}, &#x27;robot&#x27;: {&#x27;rates&#x27;: {&#x27;DXLStatusThread_Hz&#x27;: 15.0, &#x27;NonDXLStatusThread_Hz&#x27;: 25.0, &#x27;SystemMonitorThread_Hz&#x27;: 15.0, &#x27;SystemMonitorThread_monitor_downrate_int&#x27;: 2, &#x27;SystemMonitorThread_trace_downrate_int&#x27;: 1, &#x27;SystemMonitorThread_collision_downrate_int&#x27;: 5, &#x27;SystemMonitorThread_sentry_downrate_int&#x27;: 1, &#x27;SystemMonitorThread_nondxl_trajectory_downrate_int&#x27;: 2}, &#x27;tool&#x27;: &#x27;tool_stretch_gripper&#x27;, &#x27;use_collision_manager&#x27;: 0, &#x27;stow&#x27;: {&#x27;arm&#x27;: 0.0, &#x27;head_pan&#x27;: 0.0, &#x27;head_tilt&#x27;: 0.0, &#x27;lift&#x27;: 0.23, &#x27;stretch_gripper&#x27;: 0, &#x27;wrist_yaw&#x27;: 3.4}, &#x27;use_monitor&#x27;: 1, &#x27;use_trace&#x27;: 0, &#x27;use_sentry&#x27;: 1, &#x27;use_asyncio&#x27;: 1, &#x27;batch_name&#x27;: &#x27;mitski&#x27;, &#x27;d435i&#x27;: {&#x27;serial_no&#x27;: &#x27;NA&#x27;}, &#x27;model_name&#x27;: &#x27;RE2V0&#x27;, &#x27;serial_no&#x27;: &#x27;stretch-re2-9994&#x27;, &#x27;foo&#x27;: &#x27;GTA CITY&#x27;, &#x27;log_to_console&#x27;: 0}, &#x27;robot_collision&#x27;: {&#x27;models&#x27;: [&#x27;collision_arm_camera&#x27;]}, &#x27;robot_monitor&#x27;: {&#x27;monitor_base_bump_event&#x27;: 1, &#x27;monitor_base_cliff_event&#x27;: 1, &#x27;monitor_current&#x27;: 1, &#x27;monitor_dynamixel_flags&#x27;: 1, &#x27;monitor_guarded_contact&#x27;: 1, &#x27;monitor_over_tilt_alert&#x27;: 1, &#x27;monitor_runstop&#x27;: 1, &#x27;monitor_voltage&#x27;: 1, &#x27;monitor_wrist_single_tap&#x27;: 1}, &#x27;robot_sentry&#x27;: {&#x27;base_fan_control&#x27;: 1, &#x27;base_max_velocity&#x27;: 1, &#x27;dynamixel_stop_on_runstop&#x27;: 1, &#x27;stretch_gripper_overload&#x27;: 1, &#x27;wrist_yaw_overload&#x27;: 1, &#x27;stepper_is_moving_filter&#x27;: 1}, &#x27;robot_trace&#x27;: {&#x27;n_samples_per_file&#x27;: 100, &#x27;duration_limit_minutes&#x27;: 10.0}, &#x27;stretch_gripper&#x27;: {&#x27;range_pad_t&#x27;: [100.0, -100.0], &#x27;flip_encoder_polarity&#x27;: 0, &#x27;gr&#x27;: 1.0, &#x27;id&#x27;: 14, &#x27;max_voltage_limit&#x27;: 15, &#x27;min_grip_strength&#x27;: -125, &#x27;min_voltage_limit&#x27;: 11, &#x27;motion&#x27;: {&#x27;trajectory_vel_ctrl&#x27;: 1, &#x27;trajectory_vel_ctrl_kP&#x27;: 1.5, &#x27;default&#x27;: {&#x27;accel&#x27;: 10.0, &#x27;vel&#x27;: 4.0}, &#x27;fast&#x27;: {&#x27;accel&#x27;: 10.0, &#x27;vel&#x27;: 6.0}, &#x27;max&#x27;: {&#x27;accel&#x27;: 12, &#x27;vel&#x27;: 8}, &#x27;slow&#x27;: {&#x27;accel&#x27;: 4.0, &#x27;vel&#x27;: 2.0}, &#x27;trajectory_max&#x27;: {&#x27;vel_r&#x27;: 50.0, &#x27;accel_r&#x27;: 100.0}, &#x27;vel_brakezone_factor&#x27;: 1}, &#x27;set_safe_velocity&#x27;: 1, &#x27;pid&#x27;: [640.0, 0, 0], &#x27;pwm_homing&#x27;: [-400, 0], &#x27;pwm_limit&#x27;: 885, &#x27;req_calibration&#x27;: 1, &#x27;return_delay_time&#x27;: 0, &#x27;stall_backoff&#x27;: 2.0, &#x27;stall_max_effort&#x27;: 20.0, &#x27;stall_max_time&#x27;: 0.5, &#x27;stall_min_vel&#x27;: 0.1, &#x27;temperature_limit&#x27;: 72, &#x27;usb_name&#x27;: &#x27;/dev/hello-dynamixel-wrist&#x27;, &#x27;use_multiturn&#x27;: 1, &#x27;retry_on_comm_failure&#x27;: 1, &#x27;baud&#x27;: 115200, &#x27;enable_runstop&#x27;: 1, &#x27;disable_torque_on_stop&#x27;: 1, &#x27;range_t&#x27;: [0, 8022], &#x27;zero_t&#x27;: 5212}, &#x27;tool_none&#x27;: {&#x27;use_group_sync_read&#x27;: 1, &#x27;retry_on_comm_failure&#x27;: 1, &#x27;baud&#x27;: 115200, &#x27;dxl_latency_timer&#x27;: 64, &#x27;py_class_name&#x27;: &#x27;ToolNone&#x27;, &#x27;py_module_name&#x27;: &#x27;stretch_body.end_of_arm_tools&#x27;, &#x27;stow&#x27;: {&#x27;wrist_yaw&#x27;: 3.4}, &#x27;devices&#x27;: {&#x27;wrist_yaw&#x27;: {&#x27;py_class_name&#x27;: &#x27;WristYaw&#x27;, &#x27;py_module_name&#x27;: &#x27;stretch_body.wrist_yaw&#x27;}}}, &#x27;tool_stretch_gripper&#x27;: {&#x27;use_group_sync_read&#x27;: 1, &#x27;retry_on_comm_failure&#x27;: 1, &#x27;baud&#x27;: 115200, &#x27;dxl_latency_timer&#x27;: 64, &#x27;py_class_name&#x27;: &#x27;ToolStretchGripper&#x27;, &#x27;py_module_name&#x27;: &#x27;stretch_body.end_of_arm_tools&#x27;, &#x27;stow&#x27;: {&#x27;stretch_gripper&#x27;: 0, &#x27;wrist_yaw&#x27;: 3.4}, &#x27;devices&#x27;: {&#x27;stretch_gripper&#x27;: {&#x27;py_class_name&#x27;: &#x27;StretchGripper&#x27;, &#x27;py_module_name&#x27;: &#x27;stretch_body.stretch_gripper&#x27;}, &#x27;wrist_yaw&#x27;: {&#x27;py_class_name&#x27;: &#x27;WristYaw&#x27;, &#x27;py_module_name&#x27;: &#x27;stretch_body.wrist_yaw&#x27;}}, &#x27;collision_models&#x27;: [&#x27;collision_stretch_gripper&#x27;]}, &#x27;wacc&#x27;: {&#x27;usb_name&#x27;: &#x27;/dev/hello-wacc&#x27;, &#x27;config&#x27;: {&#x27;accel_LPF&#x27;: 10.0, &#x27;accel_range_g&#x27;: 4, &#x27;accel_single_tap_dur&#x27;: 70, &#x27;accel_single_tap_thresh&#x27;: 50, &#x27;ana_LPF&#x27;: 10.0, &#x27;accel_gravity_scale&#x27;: 1.0}}, &#x27;wrist_yaw&#x27;: {&#x27;flip_encoder_polarity&#x27;: 1, &#x27;gr&#x27;: 2.4, &#x27;id&#x27;: 13, &#x27;max_voltage_limit&#x27;: 15, &#x27;min_voltage_limit&#x27;: 11, &#x27;motion&#x27;: {&#x27;trajectory_vel_ctrl&#x27;: 1, &#x27;trajectory_vel_ctrl_kP&#x27;: 1.5, &#x27;default&#x27;: {&#x27;accel&#x27;: 3.0, &#x27;vel&#x27;: 2.0}, &#x27;fast&#x27;: {&#x27;accel&#x27;: 5.0, &#x27;vel&#x27;: 2.5}, &#x27;max&#x27;: {&#x27;accel&#x27;: 10, &#x27;vel&#x27;: 3.0}, &#x27;slow&#x27;: {&#x27;accel&#x27;: 1.5, &#x27;vel&#x27;: 0.75}, &#x27;trajectory_max&#x27;: {&#x27;vel_r&#x27;: 3.0, &#x27;accel_r&#x27;: 3.0}, &#x27;vel_brakezone_factor&#x27;: 1}, &#x27;set_safe_velocity&#x27;: 1, &#x27;pid&#x27;: [640, 0, 0], &#x27;pwm_homing&#x27;: [-300, 300], &#x27;pwm_limit&#x27;: 885, &#x27;req_calibration&#x27;: 1, &#x27;return_delay_time&#x27;: 0, &#x27;stall_backoff&#x27;: 0.017, &#x27;stall_max_effort&#x27;: 20.0, &#x27;stall_max_time&#x27;: 1.0, &#x27;stall_min_vel&#x27;: 0.1, &#x27;temperature_limit&#x27;: 72, &#x27;usb_name&#x27;: &#x27;/dev/hello-dynamixel-wrist&#x27;, &#x27;use_multiturn&#x27;: 1, &#x27;retry_on_comm_failure&#x27;: 1, &#x27;baud&#x27;: 115200, &#x27;enable_runstop&#x27;: 1, &#x27;disable_torque_on_stop&#x27;: 1, &#x27;range_pad_t&#x27;: [100.0, -100.0], &#x27;range_t&#x27;: [0, 9340], &#x27;zero_t&#x27;: 7175}, &#x27;respeaker&#x27;: {&#x27;usb_name&#x27;: &#x27;/dev/hello-respeaker&#x27;}, &#x27;lidar&#x27;: {&#x27;usb_name&#x27;: &#x27;/dev/hello-lrf&#x27;}}"}, {"fullname": "stretch_body.robot_trace", "modulename": "stretch_body.robot_trace", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot_trace.RobotTrace", "modulename": "stretch_body.robot_trace", "qualname": "RobotTrace", "kind": "class", "doc": "<p>The RobotTrace class logs a trace of key robot values to disk periodically</p>\n", "bases": "stretch_body.device.Device"}, {"fullname": "stretch_body.robot_trace.RobotTrace.__init__", "modulename": "stretch_body.robot_trace", "qualname": "RobotTrace.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">robot</span></span>)</span>"}, {"fullname": "stretch_body.robot_trace.RobotTrace.robot", "modulename": "stretch_body.robot_trace", "qualname": "RobotTrace.robot", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot_trace.RobotTrace.write_time", "modulename": "stretch_body.robot_trace", "qualname": "RobotTrace.write_time", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot_trace.RobotTrace.path", "modulename": "stretch_body.robot_trace", "qualname": "RobotTrace.path", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot_trace.RobotTrace.fh", "modulename": "stretch_body.robot_trace", "qualname": "RobotTrace.fh", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot_trace.RobotTrace.time_string", "modulename": "stretch_body.robot_trace", "qualname": "RobotTrace.time_string", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot_trace.RobotTrace.file_cnt", "modulename": "stretch_body.robot_trace", "qualname": "RobotTrace.file_cnt", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot_trace.RobotTrace.n_samples", "modulename": "stretch_body.robot_trace", "qualname": "RobotTrace.n_samples", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot_trace.RobotTrace.trace_files_max", "modulename": "stretch_body.robot_trace", "qualname": "RobotTrace.trace_files_max", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot_trace.RobotTrace.trace_cbs", "modulename": "stretch_body.robot_trace", "qualname": "RobotTrace.trace_cbs", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.robot_trace.RobotTrace.add_trace_callback", "modulename": "stretch_body.robot_trace", "qualname": "RobotTrace.add_trace_callback", "kind": "function", "doc": "<p>Allow user to add additional sensor fields to the trace logger\nCallback should take the form:</p>\n\n<p>def my_trace_cb(robot,data):\n    data['wacc.ax']=robot.wacc.status['ax']\n    ...\n    return data</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">cb</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot_trace.RobotTrace.default_trace", "modulename": "stretch_body.robot_trace", "qualname": "RobotTrace.default_trace", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">robot</span>, </span><span class=\"param\"><span class=\"n\">data</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot_trace.RobotTrace.get_trace", "modulename": "stretch_body.robot_trace", "qualname": "RobotTrace.get_trace", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot_trace.RobotTrace.step", "modulename": "stretch_body.robot_trace", "qualname": "RobotTrace.step", "kind": "function", "doc": "<p>Write trace of sensor values to YAML file</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.robot_trace.RobotTrace.cleanup", "modulename": "stretch_body.robot_trace", "qualname": "RobotTrace.cleanup", "kind": "function", "doc": "<p>Limit the total number of trace files to approximately self.trace_files_max\nTo avoid filling up disk</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.scope", "modulename": "stretch_body.scope", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "stretch_body.scope.Scope", "modulename": "stretch_body.scope", "qualname": "Scope", "kind": "class", "doc": "<p>Simple oscilloscope visualization of a data stream</p>\n"}, {"fullname": "stretch_body.scope.Scope.__init__", "modulename": "stretch_body.scope", "qualname": "Scope.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">num_points</span><span class=\"o\">=</span><span class=\"mi\">100</span>, </span><span class=\"param\"><span class=\"n\">yrange</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s1\">&#39;Scope&#39;</span></span>)</span>"}, {"fullname": "stretch_body.scope.Scope.y", "modulename": "stretch_body.scope", "qualname": "Scope.y", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.scope.Scope.num_points", "modulename": "stretch_body.scope", "qualname": "Scope.num_points", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.scope.Scope.fig", "modulename": "stretch_body.scope", "qualname": "Scope.fig", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.scope.Scope.yrange", "modulename": "stretch_body.scope", "qualname": "Scope.yrange", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.scope.Scope.step_display", "modulename": "stretch_body.scope", "qualname": "Scope.step_display", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">new_val</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.scope.Scope.draw_array", "modulename": "stretch_body.scope", "qualname": "Scope.draw_array", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">v</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.scope.Scope.make_fig", "modulename": "stretch_body.scope", "qualname": "Scope.make_fig", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.scope.Scope.close", "modulename": "stretch_body.scope", "qualname": "Scope.close", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.scope.Scope.savefig", "modulename": "stretch_body.scope", "qualname": "Scope.savefig", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">filename</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.scope.TrajectoryScope", "modulename": "stretch_body.scope", "qualname": "TrajectoryScope", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "stretch_body.scope.TrajectoryScope.__init__", "modulename": "stretch_body.scope", "qualname": "TrajectoryScope.__init__", "kind": "function", "doc": "<p>Interactive scope for cubic trajectory planning and visualization.</p>\n\n<p>Allows interactive cubic trajectory planning using waypoints and sliders.\nExecution and reset buttons start and stop trajectory tracking.\nWhile trajectory executes, joint position stream is plotted over the\nplanned stream. Trajectory can be modified while being executed.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>x : list(float)\n    Starting x axis waypoints. Generally is time (seconds)\ny : list(float)\n    Starting y axis waypoints. Generally is joint position (unitless)\nv : list(float)\n    Starting velocity waypoints for the trajectory\nyrange : tuple(float, float)\n    Two tuple representing joint limits\nvrange : tuple(float, float)\n    Two tuple representing joint velocity limits\nsense_frequency : int\n    Frequency (hz) at which scope measures joint position\ntitle : str\n    Title of the scope window\nxlabel: str\n    Label for the x axis\nylable: str\n    Label for the y axis</p>\n\n<h2 id=\"attributes\">Attributes</h2>\n\n<p>initx, inity, initv : list(float)\n    initial waypoints for resetting graph\nsensex, sensey : list(float)\n    used to plot measured joint position over time\nepsilon : int\n    clicking radius for waypoint</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x</span>,</span><span class=\"param\">\t<span class=\"n\">y</span>,</span><span class=\"param\">\t<span class=\"n\">v</span>,</span><span class=\"param\">\t<span class=\"n\">yrange</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">vrange</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">sense_frequency</span><span class=\"o\">=</span><span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s1\">&#39;Interactive Scope&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">xlabel</span><span class=\"o\">=</span><span class=\"s1\">&#39;Time (s)&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">ylabel</span><span class=\"o\">=</span><span class=\"s1\">&#39;Data&#39;</span></span>)</span>"}, {"fullname": "stretch_body.scope.TrajectoryScope.sensex", "modulename": "stretch_body.scope", "qualname": "TrajectoryScope.sensex", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.scope.TrajectoryScope.sensey", "modulename": "stretch_body.scope", "qualname": "TrajectoryScope.sensey", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.scope.TrajectoryScope.num_points", "modulename": "stretch_body.scope", "qualname": "TrajectoryScope.num_points", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.scope.TrajectoryScope.yrange", "modulename": "stretch_body.scope", "qualname": "TrajectoryScope.yrange", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.scope.TrajectoryScope.vrange", "modulename": "stretch_body.scope", "qualname": "TrajectoryScope.vrange", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.scope.TrajectoryScope.epsilon", "modulename": "stretch_body.scope", "qualname": "TrajectoryScope.epsilon", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.scope.TrajectoryScope.pind", "modulename": "stretch_body.scope", "qualname": "TrajectoryScope.pind", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.scope.TrajectoryScope.reset_button", "modulename": "stretch_body.scope", "qualname": "TrajectoryScope.reset_button", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.scope.TrajectoryScope.exec_button", "modulename": "stretch_body.scope", "qualname": "TrajectoryScope.exec_button", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.scope.TrajectoryScope.sliders", "modulename": "stretch_body.scope", "qualname": "TrajectoryScope.sliders", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.scope.TrajectoryScope.anim", "modulename": "stretch_body.scope", "qualname": "TrajectoryScope.anim", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.scope.TrajectoryScope.executing", "modulename": "stretch_body.scope", "qualname": "TrajectoryScope.executing", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.scope.TrajectoryScope.start", "modulename": "stretch_body.scope", "qualname": "TrajectoryScope.start", "kind": "function", "doc": "<p>Starts the scope with four callback functions</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>exec_func : func\n    Called when execute button in scope is pressed\nsense_func : func\n    Called at <code>sense_frequency</code> to plot joint position\nwaypoints_change_func : func\n    Called with updated waypoints when user changes them\nstop_func : func\n    Called when stop button in scope is pressed</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">exec_func</span>, </span><span class=\"param\"><span class=\"n\">sense_func</span>, </span><span class=\"param\"><span class=\"n\">waypoints_change_func</span>, </span><span class=\"param\"><span class=\"n\">stop_func</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.scope.Scope4", "modulename": "stretch_body.scope", "qualname": "Scope4", "kind": "class", "doc": "<p>Simple 4ch oscilloscope visualization of a data stream</p>\n"}, {"fullname": "stretch_body.scope.Scope4.__init__", "modulename": "stretch_body.scope", "qualname": "Scope4.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">num_points</span><span class=\"o\">=</span><span class=\"mi\">100</span>, </span><span class=\"param\"><span class=\"n\">yrange</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s1\">&#39;Scope&#39;</span></span>)</span>"}, {"fullname": "stretch_body.scope.Scope4.y1", "modulename": "stretch_body.scope", "qualname": "Scope4.y1", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.scope.Scope4.y2", "modulename": "stretch_body.scope", "qualname": "Scope4.y2", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.scope.Scope4.y3", "modulename": "stretch_body.scope", "qualname": "Scope4.y3", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.scope.Scope4.y4", "modulename": "stretch_body.scope", "qualname": "Scope4.y4", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.scope.Scope4.num_points", "modulename": "stretch_body.scope", "qualname": "Scope4.num_points", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.scope.Scope4.fig", "modulename": "stretch_body.scope", "qualname": "Scope4.fig", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.scope.Scope4.yrange", "modulename": "stretch_body.scope", "qualname": "Scope4.yrange", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.scope.Scope4.savefig", "modulename": "stretch_body.scope", "qualname": "Scope4.savefig", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">filename</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.scope.Scope4.step_display", "modulename": "stretch_body.scope", "qualname": "Scope4.step_display", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">y1</span>, </span><span class=\"param\"><span class=\"n\">y2</span>, </span><span class=\"param\"><span class=\"n\">y3</span>, </span><span class=\"param\"><span class=\"n\">y4</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.scope.Scope4.draw_array", "modulename": "stretch_body.scope", "qualname": "Scope4.draw_array", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">y1</span>, </span><span class=\"param\"><span class=\"n\">y2</span>, </span><span class=\"param\"><span class=\"n\">y3</span>, </span><span class=\"param\"><span class=\"n\">y4</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.scope.Scope4.draw_array_xy", "modulename": "stretch_body.scope", "qualname": "Scope4.draw_array_xy", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x1</span>, </span><span class=\"param\"><span class=\"n\">x2</span>, </span><span class=\"param\"><span class=\"n\">x3</span>, </span><span class=\"param\"><span class=\"n\">x4</span>, </span><span class=\"param\"><span class=\"n\">y1</span>, </span><span class=\"param\"><span class=\"n\">y2</span>, </span><span class=\"param\"><span class=\"n\">y3</span>, </span><span class=\"param\"><span class=\"n\">y4</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.scope.Scope4.make_fig_xy", "modulename": "stretch_body.scope", "qualname": "Scope4.make_fig_xy", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.scope.Scope4.make_fig", "modulename": "stretch_body.scope", "qualname": "Scope4.make_fig", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.scope.Scope4.close", "modulename": "stretch_body.scope", "qualname": "Scope4.close", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper", "modulename": "stretch_body.stepper", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "stretch_body.stepper.StepperBase", "modulename": "stretch_body.stepper", "qualname": "StepperBase", "kind": "class", "doc": "<p>API to the Stretch Stepper Board</p>\n", "bases": "stretch_body.device.Device"}, {"fullname": "stretch_body.stepper.StepperBase.__init__", "modulename": "stretch_body.stepper", "qualname": "StepperBase.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">usb</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, {"fullname": "stretch_body.stepper.StepperBase.RPC_SET_COMMAND", "modulename": "stretch_body.stepper", "qualname": "StepperBase.RPC_SET_COMMAND", "kind": "variable", "doc": "<p></p>\n", "default_value": "1"}, {"fullname": "stretch_body.stepper.StepperBase.RPC_REPLY_COMMAND", "modulename": "stretch_body.stepper", "qualname": "StepperBase.RPC_REPLY_COMMAND", "kind": "variable", "doc": "<p></p>\n", "default_value": "2"}, {"fullname": "stretch_body.stepper.StepperBase.RPC_GET_STATUS", "modulename": "stretch_body.stepper", "qualname": "StepperBase.RPC_GET_STATUS", "kind": "variable", "doc": "<p></p>\n", "default_value": "3"}, {"fullname": "stretch_body.stepper.StepperBase.RPC_REPLY_STATUS", "modulename": "stretch_body.stepper", "qualname": "StepperBase.RPC_REPLY_STATUS", "kind": "variable", "doc": "<p></p>\n", "default_value": "4"}, {"fullname": "stretch_body.stepper.StepperBase.RPC_SET_GAINS", "modulename": "stretch_body.stepper", "qualname": "StepperBase.RPC_SET_GAINS", "kind": "variable", "doc": "<p></p>\n", "default_value": "5"}, {"fullname": "stretch_body.stepper.StepperBase.RPC_REPLY_GAINS", "modulename": "stretch_body.stepper", "qualname": "StepperBase.RPC_REPLY_GAINS", "kind": "variable", "doc": "<p></p>\n", "default_value": "6"}, {"fullname": "stretch_body.stepper.StepperBase.RPC_LOAD_TEST_PUSH", "modulename": "stretch_body.stepper", "qualname": "StepperBase.RPC_LOAD_TEST_PUSH", "kind": "variable", "doc": "<p></p>\n", "default_value": "7"}, {"fullname": "stretch_body.stepper.StepperBase.RPC_REPLY_LOAD_TEST_PUSH", "modulename": "stretch_body.stepper", "qualname": "StepperBase.RPC_REPLY_LOAD_TEST_PUSH", "kind": "variable", "doc": "<p></p>\n", "default_value": "8"}, {"fullname": "stretch_body.stepper.StepperBase.RPC_SET_TRIGGER", "modulename": "stretch_body.stepper", "qualname": "StepperBase.RPC_SET_TRIGGER", "kind": "variable", "doc": "<p></p>\n", "default_value": "9"}, {"fullname": "stretch_body.stepper.StepperBase.RPC_REPLY_SET_TRIGGER", "modulename": "stretch_body.stepper", "qualname": "StepperBase.RPC_REPLY_SET_TRIGGER", "kind": "variable", "doc": "<p></p>\n", "default_value": "10"}, {"fullname": "stretch_body.stepper.StepperBase.RPC_SET_ENC_CALIB", "modulename": "stretch_body.stepper", "qualname": "StepperBase.RPC_SET_ENC_CALIB", "kind": "variable", "doc": "<p></p>\n", "default_value": "11"}, {"fullname": "stretch_body.stepper.StepperBase.RPC_REPLY_ENC_CALIB", "modulename": "stretch_body.stepper", "qualname": "StepperBase.RPC_REPLY_ENC_CALIB", "kind": "variable", "doc": "<p></p>\n", "default_value": "12"}, {"fullname": "stretch_body.stepper.StepperBase.RPC_READ_GAINS_FROM_FLASH", "modulename": "stretch_body.stepper", "qualname": "StepperBase.RPC_READ_GAINS_FROM_FLASH", "kind": "variable", "doc": "<p></p>\n", "default_value": "13"}, {"fullname": "stretch_body.stepper.StepperBase.RPC_REPLY_READ_GAINS_FROM_FLASH", "modulename": "stretch_body.stepper", "qualname": "StepperBase.RPC_REPLY_READ_GAINS_FROM_FLASH", "kind": "variable", "doc": "<p></p>\n", "default_value": "14"}, {"fullname": "stretch_body.stepper.StepperBase.RPC_SET_MENU_ON", "modulename": "stretch_body.stepper", "qualname": "StepperBase.RPC_SET_MENU_ON", "kind": "variable", "doc": "<p></p>\n", "default_value": "15"}, {"fullname": "stretch_body.stepper.StepperBase.RPC_REPLY_MENU_ON", "modulename": "stretch_body.stepper", "qualname": "StepperBase.RPC_REPLY_MENU_ON", "kind": "variable", "doc": "<p></p>\n", "default_value": "16"}, {"fullname": "stretch_body.stepper.StepperBase.RPC_GET_STEPPER_BOARD_INFO", "modulename": "stretch_body.stepper", "qualname": "StepperBase.RPC_GET_STEPPER_BOARD_INFO", "kind": "variable", "doc": "<p></p>\n", "default_value": "17"}, {"fullname": "stretch_body.stepper.StepperBase.RPC_REPLY_STEPPER_BOARD_INFO", "modulename": "stretch_body.stepper", "qualname": "StepperBase.RPC_REPLY_STEPPER_BOARD_INFO", "kind": "variable", "doc": "<p></p>\n", "default_value": "18"}, {"fullname": "stretch_body.stepper.StepperBase.RPC_SET_MOTION_LIMITS", "modulename": "stretch_body.stepper", "qualname": "StepperBase.RPC_SET_MOTION_LIMITS", "kind": "variable", "doc": "<p></p>\n", "default_value": "19"}, {"fullname": "stretch_body.stepper.StepperBase.RPC_REPLY_MOTION_LIMITS", "modulename": "stretch_body.stepper", "qualname": "StepperBase.RPC_REPLY_MOTION_LIMITS", "kind": "variable", "doc": "<p></p>\n", "default_value": "20"}, {"fullname": "stretch_body.stepper.StepperBase.RPC_SET_NEXT_TRAJECTORY_SEG", "modulename": "stretch_body.stepper", "qualname": "StepperBase.RPC_SET_NEXT_TRAJECTORY_SEG", "kind": "variable", "doc": "<p></p>\n", "default_value": "21"}, {"fullname": "stretch_body.stepper.StepperBase.RPC_REPLY_SET_NEXT_TRAJECTORY_SEG", "modulename": "stretch_body.stepper", "qualname": "StepperBase.RPC_REPLY_SET_NEXT_TRAJECTORY_SEG", "kind": "variable", "doc": "<p></p>\n", "default_value": "22"}, {"fullname": "stretch_body.stepper.StepperBase.RPC_START_NEW_TRAJECTORY", "modulename": "stretch_body.stepper", "qualname": "StepperBase.RPC_START_NEW_TRAJECTORY", "kind": "variable", "doc": "<p></p>\n", "default_value": "23"}, {"fullname": "stretch_body.stepper.StepperBase.RPC_REPLY_START_NEW_TRAJECTORY", "modulename": "stretch_body.stepper", "qualname": "StepperBase.RPC_REPLY_START_NEW_TRAJECTORY", "kind": "variable", "doc": "<p></p>\n", "default_value": "24"}, {"fullname": "stretch_body.stepper.StepperBase.RPC_RESET_TRAJECTORY", "modulename": "stretch_body.stepper", "qualname": "StepperBase.RPC_RESET_TRAJECTORY", "kind": "variable", "doc": "<p></p>\n", "default_value": "25"}, {"fullname": "stretch_body.stepper.StepperBase.RPC_REPLY_RESET_TRAJECTORY", "modulename": "stretch_body.stepper", "qualname": "StepperBase.RPC_REPLY_RESET_TRAJECTORY", "kind": "variable", "doc": "<p></p>\n", "default_value": "26"}, {"fullname": "stretch_body.stepper.StepperBase.RPC_READ_TRACE", "modulename": "stretch_body.stepper", "qualname": "StepperBase.RPC_READ_TRACE", "kind": "variable", "doc": "<p></p>\n", "default_value": "27"}, {"fullname": "stretch_body.stepper.StepperBase.RPC_REPLY_READ_TRACE", "modulename": "stretch_body.stepper", "qualname": "StepperBase.RPC_REPLY_READ_TRACE", "kind": "variable", "doc": "<p></p>\n", "default_value": "28"}, {"fullname": "stretch_body.stepper.StepperBase.RPC_GET_STATUS_AUX", "modulename": "stretch_body.stepper", "qualname": "StepperBase.RPC_GET_STATUS_AUX", "kind": "variable", "doc": "<p></p>\n", "default_value": "29"}, {"fullname": "stretch_body.stepper.StepperBase.RPC_REPLY_STATUS_AUX", "modulename": "stretch_body.stepper", "qualname": "StepperBase.RPC_REPLY_STATUS_AUX", "kind": "variable", "doc": "<p></p>\n", "default_value": "30"}, {"fullname": "stretch_body.stepper.StepperBase.RPC_LOAD_TEST_PULL", "modulename": "stretch_body.stepper", "qualname": "StepperBase.RPC_LOAD_TEST_PULL", "kind": "variable", "doc": "<p></p>\n", "default_value": "31"}, {"fullname": "stretch_body.stepper.StepperBase.RPC_REPLY_LOAD_TEST_PULL", "modulename": "stretch_body.stepper", "qualname": "StepperBase.RPC_REPLY_LOAD_TEST_PULL", "kind": "variable", "doc": "<p></p>\n", "default_value": "32"}, {"fullname": "stretch_body.stepper.StepperBase.MODE_SAFETY", "modulename": "stretch_body.stepper", "qualname": "StepperBase.MODE_SAFETY", "kind": "variable", "doc": "<p></p>\n", "default_value": "0"}, {"fullname": "stretch_body.stepper.StepperBase.MODE_FREEWHEEL", "modulename": "stretch_body.stepper", "qualname": "StepperBase.MODE_FREEWHEEL", "kind": "variable", "doc": "<p></p>\n", "default_value": "1"}, {"fullname": "stretch_body.stepper.StepperBase.MODE_HOLD", "modulename": "stretch_body.stepper", "qualname": "StepperBase.MODE_HOLD", "kind": "variable", "doc": "<p></p>\n", "default_value": "2"}, {"fullname": "stretch_body.stepper.StepperBase.MODE_POS_PID", "modulename": "stretch_body.stepper", "qualname": "StepperBase.MODE_POS_PID", "kind": "variable", "doc": "<p></p>\n", "default_value": "3"}, {"fullname": "stretch_body.stepper.StepperBase.MODE_VEL_PID", "modulename": "stretch_body.stepper", "qualname": "StepperBase.MODE_VEL_PID", "kind": "variable", "doc": "<p></p>\n", "default_value": "4"}, {"fullname": "stretch_body.stepper.StepperBase.MODE_POS_TRAJ", "modulename": "stretch_body.stepper", "qualname": "StepperBase.MODE_POS_TRAJ", "kind": "variable", "doc": "<p></p>\n", "default_value": "5"}, {"fullname": "stretch_body.stepper.StepperBase.MODE_VEL_TRAJ", "modulename": "stretch_body.stepper", "qualname": "StepperBase.MODE_VEL_TRAJ", "kind": "variable", "doc": "<p></p>\n", "default_value": "6"}, {"fullname": "stretch_body.stepper.StepperBase.MODE_CURRENT", "modulename": "stretch_body.stepper", "qualname": "StepperBase.MODE_CURRENT", "kind": "variable", "doc": "<p></p>\n", "default_value": "7"}, {"fullname": "stretch_body.stepper.StepperBase.MODE_POS_TRAJ_INCR", "modulename": "stretch_body.stepper", "qualname": "StepperBase.MODE_POS_TRAJ_INCR", "kind": "variable", "doc": "<p></p>\n", "default_value": "8"}, {"fullname": "stretch_body.stepper.StepperBase.MODE_POS_TRAJ_WAYPOINT", "modulename": "stretch_body.stepper", "qualname": "StepperBase.MODE_POS_TRAJ_WAYPOINT", "kind": "variable", "doc": "<p></p>\n", "default_value": "9"}, {"fullname": "stretch_body.stepper.StepperBase.MODE_NAMES", "modulename": "stretch_body.stepper", "qualname": "StepperBase.MODE_NAMES", "kind": "variable", "doc": "<p></p>\n", "default_value": "{0: &#x27;MODE_SAFETY&#x27;, 1: &#x27;MODE_FREEWHEEL&#x27;, 2: &#x27;MODE_HOLD&#x27;, 3: &#x27;MODE_POS_PID&#x27;, 4: &#x27;MODE_VEL_PID&#x27;, 5: &#x27;MODE_POS_TRAJ&#x27;, 6: &#x27;MODE_VEL_TRAJ&#x27;, 7: &#x27;MODE_CURRENT&#x27;, 8: &#x27;MODE_POS_TRAJ_INCR&#x27;, 9: &#x27;MODE_POS_TRAJ_WAYPOINT&#x27;}"}, {"fullname": "stretch_body.stepper.StepperBase.DIAG_POS_CALIBRATED", "modulename": "stretch_body.stepper", "qualname": "StepperBase.DIAG_POS_CALIBRATED", "kind": "variable", "doc": "<p></p>\n", "default_value": "1"}, {"fullname": "stretch_body.stepper.StepperBase.DIAG_RUNSTOP_ON", "modulename": "stretch_body.stepper", "qualname": "StepperBase.DIAG_RUNSTOP_ON", "kind": "variable", "doc": "<p></p>\n", "default_value": "2"}, {"fullname": "stretch_body.stepper.StepperBase.DIAG_NEAR_POS_SETPOINT", "modulename": "stretch_body.stepper", "qualname": "StepperBase.DIAG_NEAR_POS_SETPOINT", "kind": "variable", "doc": "<p></p>\n", "default_value": "4"}, {"fullname": "stretch_body.stepper.StepperBase.DIAG_NEAR_VEL_SETPOINT", "modulename": "stretch_body.stepper", "qualname": "StepperBase.DIAG_NEAR_VEL_SETPOINT", "kind": "variable", "doc": "<p></p>\n", "default_value": "8"}, {"fullname": "stretch_body.stepper.StepperBase.DIAG_IS_MOVING", "modulename": "stretch_body.stepper", "qualname": "StepperBase.DIAG_IS_MOVING", "kind": "variable", "doc": "<p></p>\n", "default_value": "16"}, {"fullname": "stretch_body.stepper.StepperBase.DIAG_AT_CURRENT_LIMIT", "modulename": "stretch_body.stepper", "qualname": "StepperBase.DIAG_AT_CURRENT_LIMIT", "kind": "variable", "doc": "<p></p>\n", "default_value": "32"}, {"fullname": "stretch_body.stepper.StepperBase.DIAG_IS_MG_ACCELERATING", "modulename": "stretch_body.stepper", "qualname": "StepperBase.DIAG_IS_MG_ACCELERATING", "kind": "variable", "doc": "<p></p>\n", "default_value": "64"}, {"fullname": "stretch_body.stepper.StepperBase.DIAG_IS_MG_MOVING", "modulename": "stretch_body.stepper", "qualname": "StepperBase.DIAG_IS_MG_MOVING", "kind": "variable", "doc": "<p></p>\n", "default_value": "128"}, {"fullname": "stretch_body.stepper.StepperBase.DIAG_CALIBRATION_RCVD", "modulename": "stretch_body.stepper", "qualname": "StepperBase.DIAG_CALIBRATION_RCVD", "kind": "variable", "doc": "<p></p>\n", "default_value": "256"}, {"fullname": "stretch_body.stepper.StepperBase.DIAG_IN_GUARDED_EVENT", "modulename": "stretch_body.stepper", "qualname": "StepperBase.DIAG_IN_GUARDED_EVENT", "kind": "variable", "doc": "<p></p>\n", "default_value": "512"}, {"fullname": "stretch_body.stepper.StepperBase.DIAG_IN_SAFETY_EVENT", "modulename": "stretch_body.stepper", "qualname": "StepperBase.DIAG_IN_SAFETY_EVENT", "kind": "variable", "doc": "<p></p>\n", "default_value": "1024"}, {"fullname": "stretch_body.stepper.StepperBase.DIAG_WAITING_ON_SYNC", "modulename": "stretch_body.stepper", "qualname": "StepperBase.DIAG_WAITING_ON_SYNC", "kind": "variable", "doc": "<p></p>\n", "default_value": "2048"}, {"fullname": "stretch_body.stepper.StepperBase.DIAG_TRAJ_ACTIVE", "modulename": "stretch_body.stepper", "qualname": "StepperBase.DIAG_TRAJ_ACTIVE", "kind": "variable", "doc": "<p></p>\n", "default_value": "4096"}, {"fullname": "stretch_body.stepper.StepperBase.DIAG_TRAJ_WAITING_ON_SYNC", "modulename": "stretch_body.stepper", "qualname": "StepperBase.DIAG_TRAJ_WAITING_ON_SYNC", "kind": "variable", "doc": "<p></p>\n", "default_value": "8192"}, {"fullname": "stretch_body.stepper.StepperBase.DIAG_IN_SYNC_MODE", "modulename": "stretch_body.stepper", "qualname": "StepperBase.DIAG_IN_SYNC_MODE", "kind": "variable", "doc": "<p></p>\n", "default_value": "16384"}, {"fullname": "stretch_body.stepper.StepperBase.DIAG_IS_TRACE_ON", "modulename": "stretch_body.stepper", "qualname": "StepperBase.DIAG_IS_TRACE_ON", "kind": "variable", "doc": "<p></p>\n", "default_value": "32768"}, {"fullname": "stretch_body.stepper.StepperBase.CONFIG_SAFETY_HOLD", "modulename": "stretch_body.stepper", "qualname": "StepperBase.CONFIG_SAFETY_HOLD", "kind": "variable", "doc": "<p></p>\n", "default_value": "1"}, {"fullname": "stretch_body.stepper.StepperBase.CONFIG_ENABLE_RUNSTOP", "modulename": "stretch_body.stepper", "qualname": "StepperBase.CONFIG_ENABLE_RUNSTOP", "kind": "variable", "doc": "<p></p>\n", "default_value": "2"}, {"fullname": "stretch_body.stepper.StepperBase.CONFIG_ENABLE_SYNC_MODE", "modulename": "stretch_body.stepper", "qualname": "StepperBase.CONFIG_ENABLE_SYNC_MODE", "kind": "variable", "doc": "<p></p>\n", "default_value": "4"}, {"fullname": "stretch_body.stepper.StepperBase.CONFIG_ENABLE_GUARDED_MODE", "modulename": "stretch_body.stepper", "qualname": "StepperBase.CONFIG_ENABLE_GUARDED_MODE", "kind": "variable", "doc": "<p></p>\n", "default_value": "8"}, {"fullname": "stretch_body.stepper.StepperBase.CONFIG_FLIP_ENCODER_POLARITY", "modulename": "stretch_body.stepper", "qualname": "StepperBase.CONFIG_FLIP_ENCODER_POLARITY", "kind": "variable", "doc": "<p></p>\n", "default_value": "16"}, {"fullname": "stretch_body.stepper.StepperBase.CONFIG_FLIP_EFFORT_POLARITY", "modulename": "stretch_body.stepper", "qualname": "StepperBase.CONFIG_FLIP_EFFORT_POLARITY", "kind": "variable", "doc": "<p></p>\n", "default_value": "32"}, {"fullname": "stretch_body.stepper.StepperBase.CONFIG_ENABLE_VEL_WATCHDOG", "modulename": "stretch_body.stepper", "qualname": "StepperBase.CONFIG_ENABLE_VEL_WATCHDOG", "kind": "variable", "doc": "<p></p>\n", "default_value": "64"}, {"fullname": "stretch_body.stepper.StepperBase.TRIGGER_MARK_POS", "modulename": "stretch_body.stepper", "qualname": "StepperBase.TRIGGER_MARK_POS", "kind": "variable", "doc": "<p></p>\n", "default_value": "1"}, {"fullname": "stretch_body.stepper.StepperBase.TRIGGER_RESET_MOTION_GEN", "modulename": "stretch_body.stepper", "qualname": "StepperBase.TRIGGER_RESET_MOTION_GEN", "kind": "variable", "doc": "<p></p>\n", "default_value": "2"}, {"fullname": "stretch_body.stepper.StepperBase.TRIGGER_BOARD_RESET", "modulename": "stretch_body.stepper", "qualname": "StepperBase.TRIGGER_BOARD_RESET", "kind": "variable", "doc": "<p></p>\n", "default_value": "4"}, {"fullname": "stretch_body.stepper.StepperBase.TRIGGER_WRITE_GAINS_TO_FLASH", "modulename": "stretch_body.stepper", "qualname": "StepperBase.TRIGGER_WRITE_GAINS_TO_FLASH", "kind": "variable", "doc": "<p></p>\n", "default_value": "8"}, {"fullname": "stretch_body.stepper.StepperBase.TRIGGER_RESET_POS_CALIBRATED", "modulename": "stretch_body.stepper", "qualname": "StepperBase.TRIGGER_RESET_POS_CALIBRATED", "kind": "variable", "doc": "<p></p>\n", "default_value": "16"}, {"fullname": "stretch_body.stepper.StepperBase.TRIGGER_POS_CALIBRATED", "modulename": "stretch_body.stepper", "qualname": "StepperBase.TRIGGER_POS_CALIBRATED", "kind": "variable", "doc": "<p></p>\n", "default_value": "32"}, {"fullname": "stretch_body.stepper.StepperBase.TRIGGER_MARK_POS_ON_CONTACT", "modulename": "stretch_body.stepper", "qualname": "StepperBase.TRIGGER_MARK_POS_ON_CONTACT", "kind": "variable", "doc": "<p></p>\n", "default_value": "64"}, {"fullname": "stretch_body.stepper.StepperBase.TRIGGER_ENABLE_TRACE", "modulename": "stretch_body.stepper", "qualname": "StepperBase.TRIGGER_ENABLE_TRACE", "kind": "variable", "doc": "<p></p>\n", "default_value": "128"}, {"fullname": "stretch_body.stepper.StepperBase.TRIGGER_DISABLE_TRACE", "modulename": "stretch_body.stepper", "qualname": "StepperBase.TRIGGER_DISABLE_TRACE", "kind": "variable", "doc": "<p></p>\n", "default_value": "256"}, {"fullname": "stretch_body.stepper.StepperBase.TRACE_TYPE_STATUS", "modulename": "stretch_body.stepper", "qualname": "StepperBase.TRACE_TYPE_STATUS", "kind": "variable", "doc": "<p></p>\n", "default_value": "0"}, {"fullname": "stretch_body.stepper.StepperBase.TRACE_TYPE_DEBUG", "modulename": "stretch_body.stepper", "qualname": "StepperBase.TRACE_TYPE_DEBUG", "kind": "variable", "doc": "<p></p>\n", "default_value": "1"}, {"fullname": "stretch_body.stepper.StepperBase.TRACE_TYPE_PRINT", "modulename": "stretch_body.stepper", "qualname": "StepperBase.TRACE_TYPE_PRINT", "kind": "variable", "doc": "<p></p>\n", "default_value": "2"}, {"fullname": "stretch_body.stepper.StepperBase.usb", "modulename": "stretch_body.stepper", "qualname": "StepperBase.usb", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.stepper.StepperBase.transport", "modulename": "stretch_body.stepper", "qualname": "StepperBase.transport", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.stepper.StepperBase.status", "modulename": "stretch_body.stepper", "qualname": "StepperBase.status", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.stepper.StepperBase.status_aux", "modulename": "stretch_body.stepper", "qualname": "StepperBase.status_aux", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.stepper.StepperBase.status_zero", "modulename": "stretch_body.stepper", "qualname": "StepperBase.status_zero", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.stepper.StepperBase.board_info", "modulename": "stretch_body.stepper", "qualname": "StepperBase.board_info", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.stepper.StepperBase.motion_limits", "modulename": "stretch_body.stepper", "qualname": "StepperBase.motion_limits", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.stepper.StepperBase.is_moving_history", "modulename": "stretch_body.stepper", "qualname": "StepperBase.is_moving_history", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.stepper.StepperBase.ts_last_syncd_motion", "modulename": "stretch_body.stepper", "qualname": "StepperBase.ts_last_syncd_motion", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.stepper.StepperBase.load_test_payload", "modulename": "stretch_body.stepper", "qualname": "StepperBase.load_test_payload", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.stepper.StepperBase.hw_valid", "modulename": "stretch_body.stepper", "qualname": "StepperBase.hw_valid", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.stepper.StepperBase.gains", "modulename": "stretch_body.stepper", "qualname": "StepperBase.gains", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.stepper.StepperBase.gains_flash", "modulename": "stretch_body.stepper", "qualname": "StepperBase.gains_flash", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.stepper.StepperBase.startup", "modulename": "stretch_body.stepper", "qualname": "StepperBase.startup", "kind": "function", "doc": "<p>Starts machinery required to interface with this device</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>threaded : bool\n    whether a thread manages hardware polling/pushing in the background</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>bool\n    whether the startup procedure succeeded</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">threaded</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.stop", "modulename": "stretch_body.stepper", "qualname": "StepperBase.stop", "kind": "function", "doc": "<p>Shuts down machinery started in <code>startup()</code></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.is_sync_required", "modulename": "stretch_body.stepper", "qualname": "StepperBase.is_sync_required", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ts_last_sync</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.push_command", "modulename": "stretch_body.stepper", "qualname": "StepperBase.push_command", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">exiting</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.push_command_async", "modulename": "stretch_body.stepper", "qualname": "StepperBase.push_command_async", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">exiting</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "stretch_body.stepper.StepperBase.pull_status", "modulename": "stretch_body.stepper", "qualname": "StepperBase.pull_status", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">exiting</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.pull_status_async", "modulename": "stretch_body.stepper", "qualname": "StepperBase.pull_status_async", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">exiting</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "stretch_body.stepper.StepperBase.push_load_test", "modulename": "stretch_body.stepper", "qualname": "StepperBase.push_load_test", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.pull_load_test", "modulename": "stretch_body.stepper", "qualname": "StepperBase.pull_load_test", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.pretty_print", "modulename": "stretch_body.stepper", "qualname": "StepperBase.pretty_print", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.step_sentry", "modulename": "stretch_body.stepper", "qualname": "StepperBase.step_sentry", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">robot</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.set_motion_limits", "modulename": "stretch_body.stepper", "qualname": "StepperBase.set_motion_limits", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">limit_neg</span>, </span><span class=\"param\"><span class=\"n\">limit_pos</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.set_gains", "modulename": "stretch_body.stepper", "qualname": "StepperBase.set_gains", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">g</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.write_gains_to_YAML", "modulename": "stretch_body.stepper", "qualname": "StepperBase.write_gains_to_YAML", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.write_gains_to_flash", "modulename": "stretch_body.stepper", "qualname": "StepperBase.write_gains_to_flash", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.read_gains_from_flash", "modulename": "stretch_body.stepper", "qualname": "StepperBase.read_gains_from_flash", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.board_reset", "modulename": "stretch_body.stepper", "qualname": "StepperBase.board_reset", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.mark_position_on_contact", "modulename": "stretch_body.stepper", "qualname": "StepperBase.mark_position_on_contact", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.mark_position", "modulename": "stretch_body.stepper", "qualname": "StepperBase.mark_position", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.reset_motion_gen", "modulename": "stretch_body.stepper", "qualname": "StepperBase.reset_motion_gen", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.reset_pos_calibrated", "modulename": "stretch_body.stepper", "qualname": "StepperBase.reset_pos_calibrated", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.set_pos_calibrated", "modulename": "stretch_body.stepper", "qualname": "StepperBase.set_pos_calibrated", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.enable_safety", "modulename": "stretch_body.stepper", "qualname": "StepperBase.enable_safety", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.enable_freewheel", "modulename": "stretch_body.stepper", "qualname": "StepperBase.enable_freewheel", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.enable_hold", "modulename": "stretch_body.stepper", "qualname": "StepperBase.enable_hold", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.enable_vel_pid", "modulename": "stretch_body.stepper", "qualname": "StepperBase.enable_vel_pid", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.enable_pos_pid", "modulename": "stretch_body.stepper", "qualname": "StepperBase.enable_pos_pid", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.enable_vel_traj", "modulename": "stretch_body.stepper", "qualname": "StepperBase.enable_vel_traj", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.enable_pos_traj", "modulename": "stretch_body.stepper", "qualname": "StepperBase.enable_pos_traj", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.enable_pos_traj_waypoint", "modulename": "stretch_body.stepper", "qualname": "StepperBase.enable_pos_traj_waypoint", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.enable_pos_traj_incr", "modulename": "stretch_body.stepper", "qualname": "StepperBase.enable_pos_traj_incr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.enable_current", "modulename": "stretch_body.stepper", "qualname": "StepperBase.enable_current", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.enable_sync_mode", "modulename": "stretch_body.stepper", "qualname": "StepperBase.enable_sync_mode", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.disable_sync_mode", "modulename": "stretch_body.stepper", "qualname": "StepperBase.disable_sync_mode", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.enable_runstop", "modulename": "stretch_body.stepper", "qualname": "StepperBase.enable_runstop", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.disable_runstop", "modulename": "stretch_body.stepper", "qualname": "StepperBase.disable_runstop", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.enable_guarded_mode", "modulename": "stretch_body.stepper", "qualname": "StepperBase.enable_guarded_mode", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.disable_guarded_mode", "modulename": "stretch_body.stepper", "qualname": "StepperBase.disable_guarded_mode", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.set_command", "modulename": "stretch_body.stepper", "qualname": "StepperBase.set_command", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">x_des</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">v_des</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">a_des</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">i_des</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">stiffness</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">i_feedforward</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">i_contact_pos</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">i_contact_neg</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.wait_while_is_moving", "modulename": "stretch_body.stepper", "qualname": "StepperBase.wait_while_is_moving", "kind": "function", "doc": "<p>Poll until is moving flag is false\nReturn True if success\nReturn False if timeout</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mf\">15.0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.wait_until_at_setpoint", "modulename": "stretch_body.stepper", "qualname": "StepperBase.wait_until_at_setpoint", "kind": "function", "doc": "<p>Poll until near setpoint\nReturn True if success\nReturn False if timeout</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mf\">15.0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.current_to_effort_ticks", "modulename": "stretch_body.stepper", "qualname": "StepperBase.current_to_effort_ticks", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">i_A</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.effort_ticks_to_current", "modulename": "stretch_body.stepper", "qualname": "StepperBase.effort_ticks_to_current", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">e</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.current_to_effort_pct", "modulename": "stretch_body.stepper", "qualname": "StepperBase.current_to_effort_pct", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">i_A</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.effort_pct_to_current", "modulename": "stretch_body.stepper", "qualname": "StepperBase.effort_pct_to_current", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">e_pct</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.current_to_torque", "modulename": "stretch_body.stepper", "qualname": "StepperBase.current_to_torque", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">i</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.torque_to_current", "modulename": "stretch_body.stepper", "qualname": "StepperBase.torque_to_current", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">tq</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.get_chip_id", "modulename": "stretch_body.stepper", "qualname": "StepperBase.get_chip_id", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.read_encoder_calibration_from_YAML", "modulename": "stretch_body.stepper", "qualname": "StepperBase.read_encoder_calibration_from_YAML", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.write_encoder_calibration_to_YAML", "modulename": "stretch_body.stepper", "qualname": "StepperBase.write_encoder_calibration_to_YAML", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">data</span>, </span><span class=\"param\"><span class=\"n\">filename</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">fleet_dir</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.read_encoder_calibration_from_flash", "modulename": "stretch_body.stepper", "qualname": "StepperBase.read_encoder_calibration_from_flash", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.write_encoder_calibration_to_flash", "modulename": "stretch_body.stepper", "qualname": "StepperBase.write_encoder_calibration_to_flash", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">data</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.rpc_enc_calib_reply", "modulename": "stretch_body.stepper", "qualname": "StepperBase.rpc_enc_calib_reply", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">reply</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.turn_rpc_interface_on", "modulename": "stretch_body.stepper", "qualname": "StepperBase.turn_rpc_interface_on", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.turn_menu_interface_on", "modulename": "stretch_body.stepper", "qualname": "StepperBase.turn_menu_interface_on", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.print_menu", "modulename": "stretch_body.stepper", "qualname": "StepperBase.print_menu", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.menu_transaction", "modulename": "stretch_body.stepper", "qualname": "StepperBase.menu_transaction", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">do_print</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.start_waypoint_trajectory", "modulename": "stretch_body.stepper", "qualname": "StepperBase.start_waypoint_trajectory", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">first_segment</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.set_next_trajectory_segment", "modulename": "stretch_body.stepper", "qualname": "StepperBase.set_next_trajectory_segment", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">next_segment</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.stop_waypoint_trajectory", "modulename": "stretch_body.stepper", "qualname": "StepperBase.stop_waypoint_trajectory", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.unpack_board_info", "modulename": "stretch_body.stepper", "qualname": "StepperBase.unpack_board_info", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">s</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.unpack_status", "modulename": "stretch_body.stepper", "qualname": "StepperBase.unpack_status", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">s</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.unpack_gains", "modulename": "stretch_body.stepper", "qualname": "StepperBase.unpack_gains", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">s</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.pack_motion_limits", "modulename": "stretch_body.stepper", "qualname": "StepperBase.pack_motion_limits", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">s</span>, </span><span class=\"param\"><span class=\"n\">sidx</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.pack_command", "modulename": "stretch_body.stepper", "qualname": "StepperBase.pack_command", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">s</span>, </span><span class=\"param\"><span class=\"n\">sidx</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.pack_gains", "modulename": "stretch_body.stepper", "qualname": "StepperBase.pack_gains", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">s</span>, </span><span class=\"param\"><span class=\"n\">sidx</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.pack_trigger", "modulename": "stretch_body.stepper", "qualname": "StepperBase.pack_trigger", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">s</span>, </span><span class=\"param\"><span class=\"n\">sidx</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.pack_trajectory_segment", "modulename": "stretch_body.stepper", "qualname": "StepperBase.pack_trajectory_segment", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">s</span>, </span><span class=\"param\"><span class=\"n\">sidx</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.rpc_board_info_reply", "modulename": "stretch_body.stepper", "qualname": "StepperBase.rpc_board_info_reply", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">reply</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.rpc_gains_reply", "modulename": "stretch_body.stepper", "qualname": "StepperBase.rpc_gains_reply", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">reply</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.rpc_trigger_reply", "modulename": "stretch_body.stepper", "qualname": "StepperBase.rpc_trigger_reply", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">reply</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.rpc_command_reply", "modulename": "stretch_body.stepper", "qualname": "StepperBase.rpc_command_reply", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">reply</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.rpc_motion_limits_reply", "modulename": "stretch_body.stepper", "qualname": "StepperBase.rpc_motion_limits_reply", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">reply</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.rpc_menu_on_reply", "modulename": "stretch_body.stepper", "qualname": "StepperBase.rpc_menu_on_reply", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">reply</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.rpc_status_reply", "modulename": "stretch_body.stepper", "qualname": "StepperBase.rpc_status_reply", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">reply</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.rpc_read_gains_from_flash_reply", "modulename": "stretch_body.stepper", "qualname": "StepperBase.rpc_read_gains_from_flash_reply", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">reply</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.rpc_start_new_traj_reply", "modulename": "stretch_body.stepper", "qualname": "StepperBase.rpc_start_new_traj_reply", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">reply</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.rpc_set_next_traj_seg_reply", "modulename": "stretch_body.stepper", "qualname": "StepperBase.rpc_set_next_traj_seg_reply", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">reply</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.rpc_reset_traj_reply", "modulename": "stretch_body.stepper", "qualname": "StepperBase.rpc_reset_traj_reply", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">reply</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.rpc_read_firmware_trace_reply", "modulename": "stretch_body.stepper", "qualname": "StepperBase.rpc_read_firmware_trace_reply", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">reply</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.enable_firmware_trace", "modulename": "stretch_body.stepper", "qualname": "StepperBase.enable_firmware_trace", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.disable_firmware_trace", "modulename": "stretch_body.stepper", "qualname": "StepperBase.disable_firmware_trace", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.StepperBase.pull_status_aux", "modulename": "stretch_body.stepper", "qualname": "StepperBase.pull_status_aux", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.Stepper_Protocol_P0", "modulename": "stretch_body.stepper", "qualname": "Stepper_Protocol_P0", "kind": "class", "doc": "<p>API to the Stretch Stepper Board</p>\n", "bases": "StepperBase"}, {"fullname": "stretch_body.stepper.Stepper_Protocol_P0.unpack_status", "modulename": "stretch_body.stepper", "qualname": "Stepper_Protocol_P0.unpack_status", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">s</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.Stepper_Protocol_P0.pretty_print", "modulename": "stretch_body.stepper", "qualname": "Stepper_Protocol_P0.pretty_print", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.Stepper_Protocol_P1", "modulename": "stretch_body.stepper", "qualname": "Stepper_Protocol_P1", "kind": "class", "doc": "<p>API to the Stretch Stepper Board</p>\n", "bases": "StepperBase"}, {"fullname": "stretch_body.stepper.Stepper_Protocol_P1.unpack_status", "modulename": "stretch_body.stepper", "qualname": "Stepper_Protocol_P1.unpack_status", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">s</span>, </span><span class=\"param\"><span class=\"n\">unpack_to</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.Stepper_Protocol_P1.pretty_print", "modulename": "stretch_body.stepper", "qualname": "Stepper_Protocol_P1.pretty_print", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.Stepper_Protocol_P1.enable_pos_traj_waypoint", "modulename": "stretch_body.stepper", "qualname": "Stepper_Protocol_P1.enable_pos_traj_waypoint", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.Stepper_Protocol_P1.start_waypoint_trajectory", "modulename": "stretch_body.stepper", "qualname": "Stepper_Protocol_P1.start_waypoint_trajectory", "kind": "function", "doc": "<p>Starts execution of a waypoint trajectory on hardware</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>first_segment : list\n    List of length eight, structured like [duration_s, a0, a1, a2, a3, a4, a5, segment_id].\n    The hardware begins executing this first segment of a spline. The segment's duration and\n    six coefficients (a0-a5) fill the first seven elements of the list. A segment ID, always\n    2 for the first segment, fills the last element of the list.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>bool\n    True if uC successfully initiated a new trajectory</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">first_segment</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.Stepper_Protocol_P1.set_next_trajectory_segment", "modulename": "stretch_body.stepper", "qualname": "Stepper_Protocol_P1.set_next_trajectory_segment", "kind": "function", "doc": "<p>Sets the next segment for the hardware to execute</p>\n\n<p>This method is generally called multiple times while the prior segment is executing. This\nprovides the hardware with the next segment to gracefully transition across the entire spline,\nwhile allowing users to preempt or modify the future trajectory in real time.</p>\n\n<p>This method will return False if there is not already an segment executing on the uC</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>next_segment : list\n    List of length eight, structured like [duration_s, a0, a1, a2, a3, a4, a5, segment_id].\n    Duration and six coefficients fill the first seven elements of the list. Generally, the\n    coefficients are calculated to smoothly transition across a spline. The segment ID, always\n    1 higher than the prior segment's ID, fills the last element of the list.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>bool\n    True if uC successfully queued next trajectory</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">next_segment</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.Stepper_Protocol_P1.stop_waypoint_trajectory", "modulename": "stretch_body.stepper", "qualname": "Stepper_Protocol_P1.stop_waypoint_trajectory", "kind": "function", "doc": "<p>Stops execution of the waypoint trajectory running in hardware</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.Stepper_Protocol_P1.pack_trajectory_segment", "modulename": "stretch_body.stepper", "qualname": "Stepper_Protocol_P1.pack_trajectory_segment", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">s</span>, </span><span class=\"param\"><span class=\"n\">sidx</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.Stepper_Protocol_P1.rpc_start_new_traj_reply", "modulename": "stretch_body.stepper", "qualname": "Stepper_Protocol_P1.rpc_start_new_traj_reply", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">reply</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.Stepper_Protocol_P1.rpc_set_next_traj_seg_reply", "modulename": "stretch_body.stepper", "qualname": "Stepper_Protocol_P1.rpc_set_next_traj_seg_reply", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">reply</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.Stepper_Protocol_P1.rpc_reset_traj_reply", "modulename": "stretch_body.stepper", "qualname": "Stepper_Protocol_P1.rpc_reset_traj_reply", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">reply</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.Stepper_Protocol_P2", "modulename": "stretch_body.stepper", "qualname": "Stepper_Protocol_P2", "kind": "class", "doc": "<p>API to the Stretch Stepper Board</p>\n", "bases": "StepperBase"}, {"fullname": "stretch_body.stepper.Stepper_Protocol_P2.read_firmware_trace", "modulename": "stretch_body.stepper", "qualname": "Stepper_Protocol_P2.read_firmware_trace", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.Stepper_Protocol_P2.unpack_debug_trace", "modulename": "stretch_body.stepper", "qualname": "Stepper_Protocol_P2.unpack_debug_trace", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">s</span>, </span><span class=\"param\"><span class=\"n\">unpack_to</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.Stepper_Protocol_P2.unpack_print_trace", "modulename": "stretch_body.stepper", "qualname": "Stepper_Protocol_P2.unpack_print_trace", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">s</span>, </span><span class=\"param\"><span class=\"n\">unpack_to</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.Stepper_Protocol_P2.rpc_read_firmware_trace_reply", "modulename": "stretch_body.stepper", "qualname": "Stepper_Protocol_P2.rpc_read_firmware_trace_reply", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">reply</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.Stepper_Protocol_P2.enable_firmware_trace", "modulename": "stretch_body.stepper", "qualname": "Stepper_Protocol_P2.enable_firmware_trace", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.Stepper_Protocol_P2.disable_firmware_trace", "modulename": "stretch_body.stepper", "qualname": "Stepper_Protocol_P2.disable_firmware_trace", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.Stepper_Protocol_P2.unpack_status", "modulename": "stretch_body.stepper", "qualname": "Stepper_Protocol_P2.unpack_status", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">s</span>, </span><span class=\"param\"><span class=\"n\">unpack_to</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.Stepper_Protocol_P3", "modulename": "stretch_body.stepper", "qualname": "Stepper_Protocol_P3", "kind": "class", "doc": "<p>API to the Stretch Stepper Board</p>\n", "bases": "StepperBase"}, {"fullname": "stretch_body.stepper.Stepper_Protocol_P3.rpc_start_new_traj_reply", "modulename": "stretch_body.stepper", "qualname": "Stepper_Protocol_P3.rpc_start_new_traj_reply", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">reply</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.Stepper_Protocol_P3.rpc_set_next_traj_seg_reply", "modulename": "stretch_body.stepper", "qualname": "Stepper_Protocol_P3.rpc_set_next_traj_seg_reply", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">reply</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.Stepper_Protocol_P3.push_load_test", "modulename": "stretch_body.stepper", "qualname": "Stepper_Protocol_P3.push_load_test", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.Stepper_Protocol_P3.pull_load_test", "modulename": "stretch_body.stepper", "qualname": "Stepper_Protocol_P3.pull_load_test", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.Stepper_Protocol_P3.rpc_load_test_push_reply", "modulename": "stretch_body.stepper", "qualname": "Stepper_Protocol_P3.rpc_load_test_push_reply", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">reply</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.Stepper_Protocol_P3.rpc_load_test_pull_reply", "modulename": "stretch_body.stepper", "qualname": "Stepper_Protocol_P3.rpc_load_test_pull_reply", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">reply</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.Stepper_Protocol_P3.pull_status_aux", "modulename": "stretch_body.stepper", "qualname": "Stepper_Protocol_P3.pull_status_aux", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.Stepper_Protocol_P3.unpack_status_aux", "modulename": "stretch_body.stepper", "qualname": "Stepper_Protocol_P3.unpack_status_aux", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">s</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.Stepper_Protocol_P3.rpc_status_aux_reply", "modulename": "stretch_body.stepper", "qualname": "Stepper_Protocol_P3.rpc_status_aux_reply", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">reply</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.Stepper_Protocol_P3.unpack_command_reply", "modulename": "stretch_body.stepper", "qualname": "Stepper_Protocol_P3.unpack_command_reply", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">s</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.Stepper_Protocol_P3.rpc_command_reply", "modulename": "stretch_body.stepper", "qualname": "Stepper_Protocol_P3.rpc_command_reply", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">reply</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.Stepper", "modulename": "stretch_body.stepper", "qualname": "Stepper", "kind": "class", "doc": "<p>API to the Stretch Stepper Board</p>\n", "bases": "StepperBase"}, {"fullname": "stretch_body.stepper.Stepper.__init__", "modulename": "stretch_body.stepper", "qualname": "Stepper.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">usb</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, {"fullname": "stretch_body.stepper.Stepper.supported_protocols", "modulename": "stretch_body.stepper", "qualname": "Stepper.supported_protocols", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.stepper.Stepper.expand_protocol_methods", "modulename": "stretch_body.stepper", "qualname": "Stepper.expand_protocol_methods", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">protocol_class</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stepper.Stepper.startup", "modulename": "stretch_body.stepper", "qualname": "Stepper.startup", "kind": "function", "doc": "<p>First determine which protocol version the uC firmware is running.\nBased on that version, populates Stepper class with the supported specific Stepper_protocol_P* class methods.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">threaded</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stretch_gripper", "modulename": "stretch_body.stretch_gripper", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "stretch_body.stretch_gripper.StretchGripper", "modulename": "stretch_body.stretch_gripper", "qualname": "StretchGripper", "kind": "class", "doc": "<p>API to the Stretch Gripper\nThe StretchGripper motion is non-linear w.r.t to motor motion due to its design\nAs such, the position of the gripper is represented at as unit-less value, 'pct'\nThe Pct ranges from approximately -100 (fully closed) to approximately +50 (fully open)\nA Pct of zero is the fingertips just touching</p>\n", "bases": "stretch_body.dynamixel_hello_XL430.DynamixelHelloXL430"}, {"fullname": "stretch_body.stretch_gripper.StretchGripper.__init__", "modulename": "stretch_body.stretch_gripper", "qualname": "StretchGripper.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">chain</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">usb</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, {"fullname": "stretch_body.stretch_gripper.StretchGripper.pct_max_open", "modulename": "stretch_body.stretch_gripper", "qualname": "StretchGripper.pct_max_open", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.stretch_gripper.StretchGripper.poses", "modulename": "stretch_body.stretch_gripper", "qualname": "StretchGripper.poses", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.stretch_gripper.StretchGripper.startup", "modulename": "stretch_body.stretch_gripper", "qualname": "StretchGripper.startup", "kind": "function", "doc": "<p>Starts machinery required to interface with this device</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>threaded : bool\n    whether a thread manages hardware polling/pushing in the background</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>bool\n    whether the startup procedure succeeded</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">threaded</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stretch_gripper.StretchGripper.home", "modulename": "stretch_body.stretch_gripper", "qualname": "StretchGripper.home", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">move_to_zero</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stretch_gripper.StretchGripper.pretty_print", "modulename": "stretch_body.stretch_gripper", "qualname": "StretchGripper.pretty_print", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stretch_gripper.StretchGripper.pose", "modulename": "stretch_body.stretch_gripper", "qualname": "StretchGripper.pose", "kind": "function", "doc": "<p>p: Dictionary key to named pose (eg 'close')</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">p</span>, </span><span class=\"param\"><span class=\"n\">v_r</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">a_r</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stretch_gripper.StretchGripper.move_to", "modulename": "stretch_body.stretch_gripper", "qualname": "StretchGripper.move_to", "kind": "function", "doc": "<p>pct: commanded absolute position (Pct).\nv_r: velocity for trapezoidal motion profile (rad/s).\na_r: acceleration for trapezoidal motion profile (rad/s^2)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">pct</span>, </span><span class=\"param\"><span class=\"n\">v_r</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">a_r</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stretch_gripper.StretchGripper.move_by", "modulename": "stretch_body.stretch_gripper", "qualname": "StretchGripper.move_by", "kind": "function", "doc": "<p>delta_pct: commanded incremental motion (pct).\nv_r: velocity for trapezoidal motion profile (rad/s).\na_r: acceleration for trapezoidal motion profile (rad/s^2)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">delta_pct</span>, </span><span class=\"param\"><span class=\"n\">v_r</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">a_r</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stretch_gripper.StretchGripper.pull_status", "modulename": "stretch_body.stretch_gripper", "qualname": "StretchGripper.pull_status", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">data</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stretch_gripper.StretchGripper.pct_to_world_rad", "modulename": "stretch_body.stretch_gripper", "qualname": "StretchGripper.pct_to_world_rad", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">pct</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stretch_gripper.StretchGripper.world_rad_to_pct", "modulename": "stretch_body.stretch_gripper", "qualname": "StretchGripper.world_rad_to_pct", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">r</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.stretch_gripper.StretchGripper.step_sentry", "modulename": "stretch_body.stretch_gripper", "qualname": "StretchGripper.step_sentry", "kind": "function", "doc": "<p>This sentry attempts to prevent the gripper servo from overheating during a prolonged grasp\nWhen the servo is stalled and exerting an effort above a threshold it will command a 'back off'\nposition (slightly opening the grasp). This reduces the PID steady state error and lowers the\ncommanded current. The gripper's spring design allows it to retain its grasp despite the backoff.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">robot</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.trajectories", "modulename": "stretch_body.trajectories", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "stretch_body.trajectories.WAYPOINT_ISCLOSE_ATOL", "modulename": "stretch_body.trajectories", "qualname": "WAYPOINT_ISCLOSE_ATOL", "kind": "variable", "doc": "<p></p>\n", "default_value": "0.8"}, {"fullname": "stretch_body.trajectories.Waypoint", "modulename": "stretch_body.trajectories", "qualname": "Waypoint", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "stretch_body.trajectories.Waypoint.__init__", "modulename": "stretch_body.trajectories", "qualname": "Waypoint.__init__", "kind": "function", "doc": "<p>Represents one waypoint in a spline</p>\n\n<p>A linear spline is constructed from position waypoints,\na cubic spline is constructed from position and velocity waypoints, and\na quintic spline is constructed from position, velocity, and acceleration waypoints.</p>\n\n<h2 id=\"attributes\">Attributes</h2>\n\n<p>time : float\n    time in seconds\nposition : float\n    unitless position\nvelocity : float\n    unitless velocity\nacceleration : float\n    unitless acceleration</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">time</span>, </span><span class=\"param\"><span class=\"n\">position</span>, </span><span class=\"param\"><span class=\"n\">velocity</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">acceleration</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, {"fullname": "stretch_body.trajectories.Waypoint.time", "modulename": "stretch_body.trajectories", "qualname": "Waypoint.time", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.trajectories.Waypoint.position", "modulename": "stretch_body.trajectories", "qualname": "Waypoint.position", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.trajectories.Waypoint.velocity", "modulename": "stretch_body.trajectories", "qualname": "Waypoint.velocity", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.trajectories.Waypoint.acceleration", "modulename": "stretch_body.trajectories", "qualname": "Waypoint.acceleration", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.trajectories.Waypoint.apply_transform", "modulename": "stretch_body.trajectories", "qualname": "Waypoint.apply_transform", "kind": "function", "doc": "<p>Apply a transform to the waypoint, e.g. to convert waypoint into motor space</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>transform : func or lambda\n    used to transform waypoint</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Waypoint\n    transformed waypoint in <code>Waypoint</code> class</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">transform</span><span class=\"o\">=&lt;</span><span class=\"n\">function</span> <span class=\"n\">Waypoint</span><span class=\"o\">.&lt;</span><span class=\"k\">lambda</span><span class=\"o\">&gt;&gt;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.trajectories.SE2Waypoint", "modulename": "stretch_body.trajectories", "qualname": "SE2Waypoint", "kind": "class", "doc": "<p></p>\n", "bases": "Waypoint"}, {"fullname": "stretch_body.trajectories.SE2Waypoint.__init__", "modulename": "stretch_body.trajectories", "qualname": "SE2Waypoint.__init__", "kind": "function", "doc": "<p>Represents one waypoint in a translation/rotation restricted base spline</p>\n\n<h2 id=\"attributes\">Attributes</h2>\n\n<p>time : float\n    time in seconds\npose : Tuple(float, float, float)\n    unitless pose as tuple (x, y, theta)\nvel_twist : Tuple(float, float)\n    unitless velocity twist as tuple (translational_velocity, rotational_velocity)\naccel_twist : Tuple(float, float)\n    unitless acceleration twist as tuple (translational_acceleration, rotational_acceleration)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">time</span>, </span><span class=\"param\"><span class=\"n\">pose</span>, </span><span class=\"param\"><span class=\"n\">vel_twist</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">accel_twist</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, {"fullname": "stretch_body.trajectories.SE2Waypoint.pose", "modulename": "stretch_body.trajectories", "qualname": "SE2Waypoint.pose", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.trajectories.SE2Waypoint.vel_twist", "modulename": "stretch_body.trajectories", "qualname": "SE2Waypoint.vel_twist", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.trajectories.SE2Waypoint.accel_twist", "modulename": "stretch_body.trajectories", "qualname": "SE2Waypoint.accel_twist", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.trajectories.SE2Waypoint.apply_transform", "modulename": "stretch_body.trajectories", "qualname": "SE2Waypoint.apply_transform", "kind": "function", "doc": "<p>Apply a transform to the waypoint, e.g. to convert waypoint into motor space</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>transform : func or lambda\n    used to transform waypoint</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Waypoint\n    transformed waypoint in <code>Waypoint</code> class</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">transform</span><span class=\"o\">=&lt;</span><span class=\"n\">function</span> <span class=\"n\">SE2Waypoint</span><span class=\"o\">.&lt;</span><span class=\"k\">lambda</span><span class=\"o\">&gt;&gt;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.trajectories.Segment", "modulename": "stretch_body.trajectories", "qualname": "Segment", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "stretch_body.trajectories.Segment.__init__", "modulename": "stretch_body.trajectories", "qualname": "Segment.__init__", "kind": "function", "doc": "<p>A polynomial segment of a spline</p>\n\n<p>Coefficients a0-a5 can represent up to a quintic polynomial as\nf(t) = a0 + a1<em>t + a2</em>t^2 + a3<em>t^3 + a4</em>t^4 + a5*t^5</p>\n\n<h2 id=\"attributes\">Attributes</h2>\n\n<p>segment_id : int\n    The required segment ID for pushing to the hardware\nduration : float\n    The duration in seconds the polynomial is tracked</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">segment_id</span>, </span><span class=\"param\"><span class=\"n\">duration</span>, </span><span class=\"param\"><span class=\"n\">a0</span>, </span><span class=\"param\"><span class=\"n\">a1</span>, </span><span class=\"param\"><span class=\"n\">a2</span>, </span><span class=\"param\"><span class=\"n\">a3</span>, </span><span class=\"param\"><span class=\"n\">a4</span>, </span><span class=\"param\"><span class=\"n\">a5</span></span>)</span>"}, {"fullname": "stretch_body.trajectories.Segment.segment_id", "modulename": "stretch_body.trajectories", "qualname": "Segment.segment_id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.trajectories.Segment.duration", "modulename": "stretch_body.trajectories", "qualname": "Segment.duration", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.trajectories.Segment.a0", "modulename": "stretch_body.trajectories", "qualname": "Segment.a0", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.trajectories.Segment.a1", "modulename": "stretch_body.trajectories", "qualname": "Segment.a1", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.trajectories.Segment.a2", "modulename": "stretch_body.trajectories", "qualname": "Segment.a2", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.trajectories.Segment.a3", "modulename": "stretch_body.trajectories", "qualname": "Segment.a3", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.trajectories.Segment.a4", "modulename": "stretch_body.trajectories", "qualname": "Segment.a4", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.trajectories.Segment.a5", "modulename": "stretch_body.trajectories", "qualname": "Segment.a5", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.trajectories.Segment.zeros", "modulename": "stretch_body.trajectories", "qualname": "Segment.zeros", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">segment_id</span><span class=\"o\">=</span><span class=\"mi\">2</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.trajectories.Segment.from_array", "modulename": "stretch_body.trajectories", "qualname": "Segment.from_array", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">segment_arr</span>, </span><span class=\"param\"><span class=\"n\">segment_id</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">duration</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.trajectories.Segment.to_array", "modulename": "stretch_body.trajectories", "qualname": "Segment.to_array", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">only_coeffs</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.trajectories.Segment.from_two_waypoints", "modulename": "stretch_body.trajectories", "qualname": "Segment.from_two_waypoints", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">waypoint1</span>, </span><span class=\"param\"><span class=\"n\">waypoint2</span>, </span><span class=\"param\"><span class=\"n\">segment_id</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.trajectories.Segment.evaluate_at", "modulename": "stretch_body.trajectories", "qualname": "Segment.evaluate_at", "kind": "function", "doc": "<p>Evaluates segment at a given time.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>t : float\n    the time in seconds at which to evaluate the polynomial</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Tuple(float)\n    tuple with three elements: evaluated position, velocity, and acceleration.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">t</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.trajectories.Segment.is_valid", "modulename": "stretch_body.trajectories", "qualname": "Segment.is_valid", "kind": "function", "doc": "<p>Determines whether segment adheres to dynamic limits.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>v_des : float\n    Velocity limit that the segment shouldn't exceed\na_des : float\n    Acceleration limit that the segment shouldn't exceed</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>bool\n    whether the segment is valid</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">v_des</span>, </span><span class=\"param\"><span class=\"n\">a_des</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.trajectories.Spline", "modulename": "stretch_body.trajectories", "qualname": "Spline", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "stretch_body.trajectories.Spline.__init__", "modulename": "stretch_body.trajectories", "qualname": "Spline.__init__", "kind": "function", "doc": "<p>Spline representing class</p>\n\n<p>Presents a interface to create splines from waypoints\nand generate polynomial segments. This class should be\nextended to support trajectories and enforce continuity\nconstraints.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>init_waypoints : List(Waypoint)\n    optional, starting list of waypoints e.g. for eval-ing repr</p>\n\n<h2 id=\"attributes\">Attributes</h2>\n\n<p>waypoints : List(Waypoint)\n    a set of waypoints defining the spline</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">init_waypoints</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, {"fullname": "stretch_body.trajectories.Spline.waypoints", "modulename": "stretch_body.trajectories", "qualname": "Spline.waypoints", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.trajectories.Spline.pop", "modulename": "stretch_body.trajectories", "qualname": "Spline.pop", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">index</span><span class=\"o\">=-</span><span class=\"mi\">1</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.trajectories.Spline.clear", "modulename": "stretch_body.trajectories", "qualname": "Spline.clear", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.trajectories.Spline.add", "modulename": "stretch_body.trajectories", "qualname": "Spline.add", "kind": "function", "doc": "<p>Add a waypoint to the spline.</p>\n\n<p>This method will sort through the existing waypoints\nin the spline to insert the waypoint such that\nwaypoint time increases with index in the array.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>time : float\n    time in seconds\npos : float\n    unitless position\nvel : float\n    unitless velocity\naccel : float\n    unitless acceleration</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">time</span>, </span><span class=\"param\"><span class=\"n\">pos</span>, </span><span class=\"param\"><span class=\"n\">vel</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">accel</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.trajectories.Spline.add_waypoint", "modulename": "stretch_body.trajectories", "qualname": "Spline.add_waypoint", "kind": "function", "doc": "<p>Add a waypoint to the spline.</p>\n\n<p>This method will sort through the existing waypoints\nin the spline to insert the waypoint such that\nwaypoint time increases with index in the array.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>waypoint : <code>Waypoint</code>\n    with time, position, [velocity, [and acceleration]] attributes set</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">new_waypoint</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.trajectories.Spline.get_num_segments", "modulename": "stretch_body.trajectories", "qualname": "Spline.get_num_segments", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.trajectories.Spline.get_segment", "modulename": "stretch_body.trajectories", "qualname": "Spline.get_segment", "kind": "function", "doc": "<p>Retrieves a segment in the spline by index</p>\n\n<p>Num of segments is one less than number of waypoints in\nthe trajectory. Index bounds are [-1 * num_seg, num_seg).</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>index : int\n    index of segment to return\nto_motor_rad : func or lambda\n    optional, used to convert waypoint into motor space</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Segment\n    coefficients + duration encapsulated in <code>Segment</code> class</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">index</span>, </span><span class=\"param\"><span class=\"n\">to_motor_rad</span><span class=\"o\">=&lt;</span><span class=\"n\">function</span> <span class=\"n\">Spline</span><span class=\"o\">.&lt;</span><span class=\"k\">lambda</span><span class=\"o\">&gt;&gt;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.trajectories.Spline.evaluate_at", "modulename": "stretch_body.trajectories", "qualname": "Spline.evaluate_at", "kind": "function", "doc": "<p>Evaluate a point along the curve at a given time.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>t : float\n    time in seconds\nto_motor_rad : func or lambda\n    optional, used to convert waypoint into motor space</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Tuple(float)\n    tuple with three elements: evaluated position, velocity, and acceleration.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">t</span>, </span><span class=\"param\"><span class=\"n\">to_motor_rad</span><span class=\"o\">=&lt;</span><span class=\"n\">function</span> <span class=\"n\">Spline</span><span class=\"o\">.&lt;</span><span class=\"k\">lambda</span><span class=\"o\">&gt;&gt;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.trajectories.Spline.is_valid", "modulename": "stretch_body.trajectories", "qualname": "Spline.is_valid", "kind": "function", "doc": "<p>Determines whether spline is well-formed and adheres to dynamic limits.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>v_des : float\n    Velocity limit that the spline shouldn't exceed\na_des : float\n    Acceleration limit that the spline shouldn't exceed</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Tuple(bool, str)\n    whether the segment is valid, and error message if not</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">v_des</span>, </span><span class=\"param\"><span class=\"n\">a_des</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.trajectories.RevoluteTrajectory", "modulename": "stretch_body.trajectories", "qualname": "RevoluteTrajectory", "kind": "class", "doc": "<p></p>\n", "bases": "Spline"}, {"fullname": "stretch_body.trajectories.RevoluteTrajectory.add", "modulename": "stretch_body.trajectories", "qualname": "RevoluteTrajectory.add", "kind": "function", "doc": "<p>Add a waypoint to the trajectory.</p>\n\n<p>This method will sort through the existing waypoints\nin the trajectory to insert the waypoint such that\nwaypoint time increases with index in the array.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>t_s : float\n    time in seconds\nx_r : float\n    position in radians\nv_r : float\n    velocity in radians per second\na_r : float\n    acceleration in radians per second squared</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">t_s</span>, </span><span class=\"param\"><span class=\"n\">x_r</span>, </span><span class=\"param\"><span class=\"n\">v_r</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">a_r</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.trajectories.PrismaticTrajectory", "modulename": "stretch_body.trajectories", "qualname": "PrismaticTrajectory", "kind": "class", "doc": "<p></p>\n", "bases": "Spline"}, {"fullname": "stretch_body.trajectories.PrismaticTrajectory.add", "modulename": "stretch_body.trajectories", "qualname": "PrismaticTrajectory.add", "kind": "function", "doc": "<p>Add a waypoint to the trajectory.</p>\n\n<p>This method will sort through the existing waypoints\nin the trajectory to insert the waypoint such that\nwaypoint time increases with index in the array.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>t_s : float\n    time in seconds\nx_m : float\n    position in meters\nv_m : float\n    velocity in meters per second\na_m : float\n    acceleration in meters per second squared</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">t_s</span>, </span><span class=\"param\"><span class=\"n\">x_m</span>, </span><span class=\"param\"><span class=\"n\">v_m</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">a_m</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.trajectories.DiffDriveTrajectory", "modulename": "stretch_body.trajectories", "qualname": "DiffDriveTrajectory", "kind": "class", "doc": "<p></p>\n", "bases": "Spline"}, {"fullname": "stretch_body.trajectories.DiffDriveTrajectory.__init__", "modulename": "stretch_body.trajectories", "qualname": "DiffDriveTrajectory.__init__", "kind": "function", "doc": "<p>Differential drive trajectory representing class</p>\n\n<p>Presents a interface to create differential drive\ntrajectories for the mobile base from <code>SE2Waypoints</code>\nand generate polynomial segments.</p>\n\n<p>These waypoints must allow only either translation or\nrotation at a time. This is checked in <code>is_valid()</code>.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>init_waypoints : List(SE2Waypoint)\n    optional, starting list of waypoints e.g. for eval-ing repr</p>\n\n<h2 id=\"attributes\">Attributes</h2>\n\n<p>waypoints : List(SE2Waypoint)\n    a set of base waypoints defining the mobile base's trajectory</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">init_waypoints</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, {"fullname": "stretch_body.trajectories.DiffDriveTrajectory.add", "modulename": "stretch_body.trajectories", "qualname": "DiffDriveTrajectory.add", "kind": "function", "doc": "<p>Add a waypoint to the diff drive trajectory.</p>\n\n<p>This method will sort through the existing waypoints\nin the trajectory to insert the waypoint such that\nwaypoint time increases with index in the array.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>time : float\n    time in seconds\nx : float\n    x component of SE2 pose in meters\ny : float\n    y component of SE2 pose in meters\ntheta : float\n    theta component of SE2 pose in radians\ntranslational_vel : float\n    translational velocity component of twist in meters per second\nrotational_vel : float\n    rotational velocity component of twist in radians per second\ntranslational_accel : float\n    translational acceleration component of twist in meters per second squared\nrotational_accel : float\n    rotational acceleration component of twist in radians per second squared</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">time</span>,</span><span class=\"param\">\t<span class=\"n\">x</span>,</span><span class=\"param\">\t<span class=\"n\">y</span>,</span><span class=\"param\">\t<span class=\"n\">theta</span>,</span><span class=\"param\">\t<span class=\"n\">translational_vel</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">rotational_vel</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">translational_accel</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">rotational_accel</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.trajectories.DiffDriveTrajectory.get_segment", "modulename": "stretch_body.trajectories", "qualname": "DiffDriveTrajectory.get_segment", "kind": "function", "doc": "<p>Retrieves a segment in the spline by index</p>\n\n<p>Num of segments is one less than number of waypoints in\nthe trajectory. Index bounds are [-1 * num_seg, num_seg).</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>index : int\n    index of segment to return\nto_motor_rad : func or lambda\n    optional, used to convert waypoint into motor space</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Segment\n    coefficients + duration encapsulated in <code>Segment</code> class</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">index</span>, </span><span class=\"param\"><span class=\"n\">to_motor_rad</span><span class=\"o\">=&lt;</span><span class=\"n\">function</span> <span class=\"n\">DiffDriveTrajectory</span><span class=\"o\">.&lt;</span><span class=\"k\">lambda</span><span class=\"o\">&gt;&gt;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.trajectories.DiffDriveTrajectory.get_wheel_segments", "modulename": "stretch_body.trajectories", "qualname": "DiffDriveTrajectory.get_wheel_segments", "kind": "function", "doc": "<p>Retrieves left/right wheel segments in the trajectory by index</p>\n\n<p>Num of segments is one less than number of waypoints in\nthe trajectory. Index bounds are [-1 * num_seg, num_seg).</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>index : int\n    index of segment to return\ntranslate_to_motor_rad : func or lambda\n    used to convert se2 waypoints into left motor space\nrotate_to_motor_rad : func or lambda\n    used to convert se2 waypoints into right motor space\nlwpos : float\n    used to account for left wheel start of trajectory position in motor space\nrwpos : float\n    used to account for right wheel start of trajectory position in motor space</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Tuple(Segment, Segment)\n    left and right wheel coefficients + duration encapsulated within <code>Segment</code> classes</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">index</span>,</span><span class=\"param\">\t<span class=\"n\">translate_to_motor_rad</span>,</span><span class=\"param\">\t<span class=\"n\">rotate_to_motor_rad</span>,</span><span class=\"param\">\t<span class=\"n\">lwpos</span><span class=\"o\">=</span><span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">rwpos</span><span class=\"o\">=</span><span class=\"mf\">0.0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.trajectories.DiffDriveTrajectory.evaluate_at", "modulename": "stretch_body.trajectories", "qualname": "DiffDriveTrajectory.evaluate_at", "kind": "function", "doc": "<p>Evaluate a point along the curve at a given time.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>t : float\n    time in seconds\nto_motor_rad : func or lambda\n    optional, used to convert waypoint into motor space</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Tuple(float)\n    tuple with three elements: evaluated position, velocity, and acceleration.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">t</span>, </span><span class=\"param\"><span class=\"n\">to_motor_rad</span><span class=\"o\">=&lt;</span><span class=\"n\">function</span> <span class=\"n\">DiffDriveTrajectory</span><span class=\"o\">.&lt;</span><span class=\"k\">lambda</span><span class=\"o\">&gt;&gt;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.trajectories.DiffDriveTrajectory.is_valid", "modulename": "stretch_body.trajectories", "qualname": "DiffDriveTrajectory.is_valid", "kind": "function", "doc": "<p>Determines whether trajectory is well-formed and adheres to dynamic limits.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>v_des : float\n    Velocity limit in motor space that the trajectory shouldn't exceed\na_des : float\n    Acceleration limit in motor space that the trajectory shouldn't exceed\ntranslate_to_motor_rad : func or lambda\n    used to convert se2 waypoints into left motor space\nrotate_to_motor_rad : func or lambda\n    used to convert se2 waypoints into right motor space</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Tuple(bool, str)\n    whether the segment is valid, and error message if not</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">v_des</span>, </span><span class=\"param\"><span class=\"n\">a_des</span>, </span><span class=\"param\"><span class=\"n\">translate_to_motor_rad</span>, </span><span class=\"param\"><span class=\"n\">rotate_to_motor_rad</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.transport", "modulename": "stretch_body.transport", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "stretch_body.transport.TransportError", "modulename": "stretch_body.transport", "qualname": "TransportError", "kind": "class", "doc": "<p>Base class for exceptions in this module.</p>\n", "bases": "builtins.Exception"}, {"fullname": "stretch_body.transport.RPC_V1_MAX_FRAMES", "modulename": "stretch_body.transport", "qualname": "RPC_V1_MAX_FRAMES", "kind": "variable", "doc": "<p></p>\n", "default_value": "18"}, {"fullname": "stretch_body.transport.RPC_V1_PUSH_FRAME_FIRST_MORE", "modulename": "stretch_body.transport", "qualname": "RPC_V1_PUSH_FRAME_FIRST_MORE", "kind": "variable", "doc": "<p></p>\n", "default_value": "201"}, {"fullname": "stretch_body.transport.RPC_V1_PUSH_FRAME_FIRST_ONLY", "modulename": "stretch_body.transport", "qualname": "RPC_V1_PUSH_FRAME_FIRST_ONLY", "kind": "variable", "doc": "<p></p>\n", "default_value": "202"}, {"fullname": "stretch_body.transport.RPC_V1_PUSH_FRAME_MORE", "modulename": "stretch_body.transport", "qualname": "RPC_V1_PUSH_FRAME_MORE", "kind": "variable", "doc": "<p></p>\n", "default_value": "203"}, {"fullname": "stretch_body.transport.RPC_V1_PUSH_FRAME_LAST", "modulename": "stretch_body.transport", "qualname": "RPC_V1_PUSH_FRAME_LAST", "kind": "variable", "doc": "<p></p>\n", "default_value": "204"}, {"fullname": "stretch_body.transport.RPC_V1_PUSH_ACK", "modulename": "stretch_body.transport", "qualname": "RPC_V1_PUSH_ACK", "kind": "variable", "doc": "<p></p>\n", "default_value": "205"}, {"fullname": "stretch_body.transport.RPC_V1_PULL_FRAME_FIRST", "modulename": "stretch_body.transport", "qualname": "RPC_V1_PULL_FRAME_FIRST", "kind": "variable", "doc": "<p></p>\n", "default_value": "206"}, {"fullname": "stretch_body.transport.RPC_V1_PULL_FRAME_MORE", "modulename": "stretch_body.transport", "qualname": "RPC_V1_PULL_FRAME_MORE", "kind": "variable", "doc": "<p></p>\n", "default_value": "207"}, {"fullname": "stretch_body.transport.RPC_V1_PULL_FRAME_ACK_MORE", "modulename": "stretch_body.transport", "qualname": "RPC_V1_PULL_FRAME_ACK_MORE", "kind": "variable", "doc": "<p></p>\n", "default_value": "208"}, {"fullname": "stretch_body.transport.RPC_V1_PULL_FRAME_ACK_LAST", "modulename": "stretch_body.transport", "qualname": "RPC_V1_PULL_FRAME_ACK_LAST", "kind": "variable", "doc": "<p></p>\n", "default_value": "209"}, {"fullname": "stretch_body.transport.RPC_V1_FRAME_DATA_MAX_BYTES", "modulename": "stretch_body.transport", "qualname": "RPC_V1_FRAME_DATA_MAX_BYTES", "kind": "variable", "doc": "<p></p>\n", "default_value": "58"}, {"fullname": "stretch_body.transport.COBBS_FRAME_SIZE_V1", "modulename": "stretch_body.transport", "qualname": "COBBS_FRAME_SIZE_V1", "kind": "variable", "doc": "<p></p>\n", "default_value": "63"}, {"fullname": "stretch_body.transport.RPC_V0_START_NEW_RPC", "modulename": "stretch_body.transport", "qualname": "RPC_V0_START_NEW_RPC", "kind": "variable", "doc": "<p></p>\n", "default_value": "100"}, {"fullname": "stretch_body.transport.RPC_V0_ACK_NEW_RPC", "modulename": "stretch_body.transport", "qualname": "RPC_V0_ACK_NEW_RPC", "kind": "variable", "doc": "<p></p>\n", "default_value": "101"}, {"fullname": "stretch_body.transport.RPC_V0_SEND_BLOCK_MORE", "modulename": "stretch_body.transport", "qualname": "RPC_V0_SEND_BLOCK_MORE", "kind": "variable", "doc": "<p></p>\n", "default_value": "102"}, {"fullname": "stretch_body.transport.RPC_V0_ACK_SEND_BLOCK_MORE", "modulename": "stretch_body.transport", "qualname": "RPC_V0_ACK_SEND_BLOCK_MORE", "kind": "variable", "doc": "<p></p>\n", "default_value": "103"}, {"fullname": "stretch_body.transport.RPC_V0_SEND_BLOCK_LAST", "modulename": "stretch_body.transport", "qualname": "RPC_V0_SEND_BLOCK_LAST", "kind": "variable", "doc": "<p></p>\n", "default_value": "104"}, {"fullname": "stretch_body.transport.RPC_V0_ACK_SEND_BLOCK_LAST", "modulename": "stretch_body.transport", "qualname": "RPC_V0_ACK_SEND_BLOCK_LAST", "kind": "variable", "doc": "<p></p>\n", "default_value": "105"}, {"fullname": "stretch_body.transport.RPC_V0_GET_BLOCK", "modulename": "stretch_body.transport", "qualname": "RPC_V0_GET_BLOCK", "kind": "variable", "doc": "<p></p>\n", "default_value": "106"}, {"fullname": "stretch_body.transport.RPC_V0_ACK_GET_BLOCK_MORE", "modulename": "stretch_body.transport", "qualname": "RPC_V0_ACK_GET_BLOCK_MORE", "kind": "variable", "doc": "<p></p>\n", "default_value": "107"}, {"fullname": "stretch_body.transport.RPC_V0_ACK_GET_BLOCK_LAST", "modulename": "stretch_body.transport", "qualname": "RPC_V0_ACK_GET_BLOCK_LAST", "kind": "variable", "doc": "<p></p>\n", "default_value": "108"}, {"fullname": "stretch_body.transport.RPC_V0_BLOCK_SIZE", "modulename": "stretch_body.transport", "qualname": "RPC_V0_BLOCK_SIZE", "kind": "variable", "doc": "<p></p>\n", "default_value": "32"}, {"fullname": "stretch_body.transport.COBBS_FRAME_SIZE_V0", "modulename": "stretch_body.transport", "qualname": "COBBS_FRAME_SIZE_V0", "kind": "variable", "doc": "<p></p>\n", "default_value": "64"}, {"fullname": "stretch_body.transport.RPC_DATA_MAX_BYTES", "modulename": "stretch_body.transport", "qualname": "RPC_DATA_MAX_BYTES", "kind": "variable", "doc": "<p></p>\n", "default_value": "1024"}, {"fullname": "stretch_body.transport.RPC_MAX_FRAME_SIZE", "modulename": "stretch_body.transport", "qualname": "RPC_MAX_FRAME_SIZE", "kind": "variable", "doc": "<p></p>\n", "default_value": "64"}, {"fullname": "stretch_body.transport.RPC_TRANSPORT_VERSION_0", "modulename": "stretch_body.transport", "qualname": "RPC_TRANSPORT_VERSION_0", "kind": "variable", "doc": "<p></p>\n", "default_value": "0"}, {"fullname": "stretch_body.transport.RPC_TRANSPORT_VERSION_1", "modulename": "stretch_body.transport", "qualname": "RPC_TRANSPORT_VERSION_1", "kind": "variable", "doc": "<p></p>\n", "default_value": "1"}, {"fullname": "stretch_body.transport.SyncTransactionHandler", "modulename": "stretch_body.transport", "qualname": "SyncTransactionHandler", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "stretch_body.transport.SyncTransactionHandler.__init__", "modulename": "stretch_body.transport", "qualname": "SyncTransactionHandler.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">port_name</span>, </span><span class=\"param\"><span class=\"n\">ser</span>, </span><span class=\"param\"><span class=\"n\">logger</span>, </span><span class=\"param\"><span class=\"n\">lock</span></span>)</span>"}, {"fullname": "stretch_body.transport.SyncTransactionHandler.ser", "modulename": "stretch_body.transport", "qualname": "SyncTransactionHandler.ser", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.transport.SyncTransactionHandler.logger", "modulename": "stretch_body.transport", "qualname": "SyncTransactionHandler.logger", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.transport.SyncTransactionHandler.port_name", "modulename": "stretch_body.transport", "qualname": "SyncTransactionHandler.port_name", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.transport.SyncTransactionHandler.empty_frame", "modulename": "stretch_body.transport", "qualname": "SyncTransactionHandler.empty_frame", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.transport.SyncTransactionHandler.status", "modulename": "stretch_body.transport", "qualname": "SyncTransactionHandler.status", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.transport.SyncTransactionHandler.version", "modulename": "stretch_body.transport", "qualname": "SyncTransactionHandler.version", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.transport.SyncTransactionHandler.timeout", "modulename": "stretch_body.transport", "qualname": "SyncTransactionHandler.timeout", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.transport.SyncTransactionHandler.packet_marker", "modulename": "stretch_body.transport", "qualname": "SyncTransactionHandler.packet_marker", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.transport.SyncTransactionHandler.lock", "modulename": "stretch_body.transport", "qualname": "SyncTransactionHandler.lock", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.transport.SyncTransactionHandler.dbg_buf", "modulename": "stretch_body.transport", "qualname": "SyncTransactionHandler.dbg_buf", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.transport.SyncTransactionHandler.dbg_on", "modulename": "stretch_body.transport", "qualname": "SyncTransactionHandler.dbg_on", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.transport.SyncTransactionHandler.get_empty_frame", "modulename": "stretch_body.transport", "qualname": "SyncTransactionHandler.get_empty_frame", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.transport.SyncTransactionHandler.handle_push_ack_v1", "modulename": "stretch_body.transport", "qualname": "SyncTransactionHandler.handle_push_ack_v1", "kind": "function", "doc": "<p>Utility function for code readability</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">crc</span>, </span><span class=\"param\"><span class=\"n\">nr</span>, </span><span class=\"param\"><span class=\"n\">ack_code</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.transport.SyncTransactionHandler.handle_pull_ack_v1", "modulename": "stretch_body.transport", "qualname": "SyncTransactionHandler.handle_pull_ack_v1", "kind": "function", "doc": "<p>Utility function for code readability</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">crc</span>, </span><span class=\"param\"><span class=\"n\">nr</span>, </span><span class=\"param\"><span class=\"n\">ack_code</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.transport.SyncTransactionHandler.sendFramedData", "modulename": "stretch_body.transport", "qualname": "SyncTransactionHandler.sendFramedData", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">data</span>, </span><span class=\"param\"><span class=\"n\">size</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.transport.SyncTransactionHandler.receiveFramedData", "modulename": "stretch_body.transport", "qualname": "SyncTransactionHandler.receiveFramedData", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.transport.SyncTransactionHandler.receiveFramedData2", "modulename": "stretch_body.transport", "qualname": "SyncTransactionHandler.receiveFramedData2", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.transport.SyncTransactionHandler.do_rpc", "modulename": "stretch_body.transport", "qualname": "SyncTransactionHandler.do_rpc", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">push</span>, </span><span class=\"param\"><span class=\"n\">payload</span>, </span><span class=\"param\"><span class=\"n\">reply_callback</span>, </span><span class=\"param\"><span class=\"n\">exiting</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.transport.SyncTransactionHandler.do_push_transaction_v1", "modulename": "stretch_body.transport", "qualname": "SyncTransactionHandler.do_push_transaction_v1", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>rpc_data: Buffer of data to transmit in RPC\nrpc_callback: Call back to process RPC reply data</p>\n\n<h2 id=\"returns-truefalse-if-successful\">Returns: True/False if successful</h2>\n\n<p>Push command data\nTake the rpc_data, break into 64 byte encoded frames, and write to serial.\nRecieve back acks for each frame sent</p>\n\n<p>RPC data looks like:\nrpc_data = [RPC_ID D0, D1,...] (Len 1024 max)</p>\n\n<p>The rpc_data is then grouped into one or more 59 byte frames.</p>\n\n<p>For rpc_data&lt;=59 bytes, an RPC send is straigthforward:</p>\n\n<p>push_frame_0 = [RPC_PUSH_FRAME_LAST, D0,...DN, CRC1 CRC2] (len 62 max, N&lt;=58)</p>\n\n<p>If the size of data sent is over 59 bytes, then multiple frames are used. If for example, 150 bytes are sent:</p>\n\n<p>frame_0 = [RPC_PUSH_FRAME_MORE, , D0,...D58, CRC1 CRC2] (len 62 max)\nframe_1 = [RPC_PUSH_FRAME_MORE, D59,...D117, CRC1 CRC2] (len 62 max)\nframe_2 = [RPC_PUSH_FRAME_LAST, D118,...D149, CRC1 CRC2] (len 62 max)</p>\n\n<p>Before transmission each frame is first Cobbs encoded as:</p>\n\n<p>[ OverheadByte 62_bytes_max_encoded DelimiterByte] (Len 64 max)</p>\n\n<p>A push transaction does not return status data back. It returns a RPC_PUSH_x_ACK to acknowledge that a frame was\nsuccesfully recieved. It also returns an RPC_ID_ACK for the callback to verify that the correct RPC call was completed.</p>\n\n<p>reply_frame_0 = [RPC_PUSH_ACK RPC_ID_ACK CRC1 CRC2]</p>\n\n<p>Finally, reply data is decoded and passed to the rpc_callback</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">rpc_data</span>, </span><span class=\"param\"><span class=\"n\">rpc_callback</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.transport.SyncTransactionHandler.do_pull_transaction_v1", "modulename": "stretch_body.transport", "qualname": "SyncTransactionHandler.do_pull_transaction_v1", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>rpc_data: Buffer of data to transmit in RPC\nrpc_callback: Call back to process RPC reply data</p>\n\n<h2 id=\"returns-truefalse-if-successful\">Returns: True/False if successful</h2>\n\n<p>This pulls status data from the device. The frame layout is analogous to do_push_transaction.\nHowever, here we send down only a pull request (single frame with an RPC_ID).\nWe get back one or more frames of status data which is then decoded and passed to the callback.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">rpc_data</span>, </span><span class=\"param\"><span class=\"n\">rpc_callback</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.transport.SyncTransactionHandler.do_transaction_v0", "modulename": "stretch_body.transport", "qualname": "SyncTransactionHandler.do_transaction_v0", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">rpc</span>, </span><span class=\"param\"><span class=\"n\">rpc_callback</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.transport.AsyncTransactionHandler", "modulename": "stretch_body.transport", "qualname": "AsyncTransactionHandler", "kind": "class", "doc": "<p></p>\n", "bases": "SyncTransactionHandler"}, {"fullname": "stretch_body.transport.AsyncTransactionHandler.__init__", "modulename": "stretch_body.transport", "qualname": "AsyncTransactionHandler.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">port_name</span>, </span><span class=\"param\"><span class=\"n\">ser</span>, </span><span class=\"param\"><span class=\"n\">logger</span>, </span><span class=\"param\"><span class=\"n\">lock</span></span>)</span>"}, {"fullname": "stretch_body.transport.AsyncTransactionHandler.sendFramedData", "modulename": "stretch_body.transport", "qualname": "AsyncTransactionHandler.sendFramedData", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">data</span>, </span><span class=\"param\"><span class=\"n\">size</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "stretch_body.transport.AsyncTransactionHandler.receiveFramedData", "modulename": "stretch_body.transport", "qualname": "AsyncTransactionHandler.receiveFramedData", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "stretch_body.transport.AsyncTransactionHandler.do_rpc", "modulename": "stretch_body.transport", "qualname": "AsyncTransactionHandler.do_rpc", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">push</span>, </span><span class=\"param\"><span class=\"n\">payload</span>, </span><span class=\"param\"><span class=\"n\">reply_callback</span>, </span><span class=\"param\"><span class=\"n\">exiting</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "stretch_body.transport.AsyncTransactionHandler.do_pull_transaction_v1", "modulename": "stretch_body.transport", "qualname": "AsyncTransactionHandler.do_pull_transaction_v1", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>rpc_data: Buffer of data to transmit in RPC\nrpc_callback: Call back to process RPC reply data</p>\n\n<h2 id=\"returns-truefalse-if-successful\">Returns: True/False if successful</h2>\n\n<p>This pulls status data from the device. The frame layout is analogous to do_push_transaction.\nHowever, here we send down only a pull request (single frame with an RPC_ID).\nWe get back one or more frames of status data which is then decoded and passed to the callback.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">rpc_data</span>, </span><span class=\"param\"><span class=\"n\">rpc_callback</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "stretch_body.transport.AsyncTransactionHandler.do_push_transaction_v1", "modulename": "stretch_body.transport", "qualname": "AsyncTransactionHandler.do_push_transaction_v1", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>rpc_data: Buffer of data to transmit in RPC\nrpc_callback: Call back to process RPC reply data</p>\n\n<h2 id=\"returns-truefalse-if-successful\">Returns: True/False if successful</h2>\n\n<p>Push command data\nTake the rpc_data, break into 64 byte encoded frames, and write to serial.\nRecieve back acks for each frame sent</p>\n\n<p>RPC data looks like:\nrpc_data = [RPC_ID D0, D1,...] (Len 1024 max)</p>\n\n<p>The rpc_data is then grouped into one or more 59 byte frames.</p>\n\n<p>For rpc_data&lt;=59 bytes, an RPC send is straigthforward:</p>\n\n<p>push_frame_0 = [RPC_PUSH_FRAME_LAST, D0,...DN, CRC1 CRC2] (len 62 max, N&lt;=58)</p>\n\n<p>If the size of data sent is over 59 bytes, then multiple frames are used. If for example, 150 bytes are sent:</p>\n\n<p>frame_0 = [RPC_PUSH_FRAME_MORE, , D0,...D58, CRC1 CRC2] (len 62 max)\nframe_1 = [RPC_PUSH_FRAME_MORE, D59,...D117, CRC1 CRC2] (len 62 max)\nframe_2 = [RPC_PUSH_FRAME_LAST, D118,...D149, CRC1 CRC2] (len 62 max)</p>\n\n<p>Before transmission each frame is first Cobbs encoded as:</p>\n\n<p>[ OverheadByte 62_bytes_max_encoded DelimiterByte] (Len 64 max)</p>\n\n<p>A push transaction does not return status data back. It returns a RPC_PUSH_x_ACK to acknowledge that a frame was\nsuccesfully recieved. It also returns an RPC_ID_ACK for the callback to verify that the correct RPC call was completed.</p>\n\n<p>reply_frame_0 = [RPC_PUSH_ACK RPC_ID_ACK CRC1 CRC2]</p>\n\n<p>Finally, reply data is decoded and passed to the rpc_callback</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">rpc_data</span>, </span><span class=\"param\"><span class=\"n\">rpc_callback</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "stretch_body.transport.AsyncTransactionHandler.do_transaction_v0", "modulename": "stretch_body.transport", "qualname": "AsyncTransactionHandler.do_transaction_v0", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">rpc</span>, </span><span class=\"param\"><span class=\"n\">rpc_callback</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "stretch_body.transport.Transport", "modulename": "stretch_body.transport", "qualname": "Transport", "kind": "class", "doc": "<p>Handle serial communications to a Hello Robot USB device using pySerial and asyncio</p>\n\n<p>Aioserial supports the standard  pySerial interface as well as async versions of the pySerial interface.\nThis enables Transport to support both synchronous and asynchromous calls.\nDevices can use standard pySerial for non-timing critical transactions.\nThey can use the asyncio interfaces for timing critical transactions where blocking on the RPC call is not desirable</p>\n"}, {"fullname": "stretch_body.transport.Transport.__init__", "modulename": "stretch_body.transport", "qualname": "Transport.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">usb</span>, </span><span class=\"param\"><span class=\"n\">logger</span><span class=\"o\">=&lt;</span><span class=\"n\">RootLogger</span> <span class=\"n\">root</span> <span class=\"p\">(</span><span class=\"n\">DEBUG</span><span class=\"p\">)</span><span class=\"o\">&gt;</span></span>)</span>"}, {"fullname": "stretch_body.transport.Transport.port_name", "modulename": "stretch_body.transport", "qualname": "Transport.port_name", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.transport.Transport.logger", "modulename": "stretch_body.transport", "qualname": "Transport.logger", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.transport.Transport.lock", "modulename": "stretch_body.transport", "qualname": "Transport.lock", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.transport.Transport.status", "modulename": "stretch_body.transport", "qualname": "Transport.status", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.transport.Transport.empty_payload", "modulename": "stretch_body.transport", "qualname": "Transport.empty_payload", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.transport.Transport.version", "modulename": "stretch_body.transport", "qualname": "Transport.version", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.transport.Transport.startup", "modulename": "stretch_body.transport", "qualname": "Transport.startup", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.transport.Transport.stop", "modulename": "stretch_body.transport", "qualname": "Transport.stop", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.transport.Transport.get_empty_payload", "modulename": "stretch_body.transport", "qualname": "Transport.get_empty_payload", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.transport.Transport.configure_version", "modulename": "stretch_body.transport", "qualname": "Transport.configure_version", "kind": "function", "doc": "<p>Starting with Stepper/Wacc/Pimu firmware v0.4.0 a faster version (V1) of the transport layer is supported\nCheck here if can run the Transport in V1 mode</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">firmware_version</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.transport.Transport.set_version", "modulename": "stretch_body.transport", "qualname": "Transport.set_version", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">v</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.transport.Transport.do_pull_rpc_async", "modulename": "stretch_body.transport", "qualname": "Transport.do_pull_rpc_async", "kind": "function", "doc": "<p>Do an RPC that pulls data from the device</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>payload: Array of type 'B' with length of RPC data to transmit\nreply_callback: Called after RPC data has been returned\nexiting: Cleanup if a final call during exit</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">payload</span>, </span><span class=\"param\"><span class=\"n\">reply_callback</span>, </span><span class=\"param\"><span class=\"n\">exiting</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "stretch_body.transport.Transport.do_push_rpc_async", "modulename": "stretch_body.transport", "qualname": "Transport.do_push_rpc_async", "kind": "function", "doc": "<p>Do an RPC that pushes data to the device</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>payload: Array of type 'B' with length of RPC data to transmit\nreply_callback: Called after RPC data has been returned\nexiting: Cleanup if a final call during exit</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">payload</span>, </span><span class=\"param\"><span class=\"n\">reply_callback</span>, </span><span class=\"param\"><span class=\"n\">exiting</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "stretch_body.transport.Transport.do_pull_rpc_sync", "modulename": "stretch_body.transport", "qualname": "Transport.do_pull_rpc_sync", "kind": "function", "doc": "<p>Do an RPC that pulls data from the device</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>payload: Array of type 'B' with length of RPC data to transmit\nreply_callback: Called after RPC data has been returned\nexiting: Cleanup if a final call during exit</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">payload</span>, </span><span class=\"param\"><span class=\"n\">reply_callback</span>, </span><span class=\"param\"><span class=\"n\">exiting</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.transport.Transport.do_push_rpc_sync", "modulename": "stretch_body.transport", "qualname": "Transport.do_push_rpc_sync", "kind": "function", "doc": "<p>Do an RPC that pushes data to the device</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>payload: Array of type 'B' with length of RPC data to transmit\nreply_callback: Called after RPC data has been returned\nexiting: Cleanup if a final call during exit</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">payload</span>, </span><span class=\"param\"><span class=\"n\">reply_callback</span>, </span><span class=\"param\"><span class=\"n\">exiting</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.transport.pack_string_t", "modulename": "stretch_body.transport", "qualname": "pack_string_t", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">s</span>, </span><span class=\"param\"><span class=\"n\">sidx</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.transport.unpack_string_t", "modulename": "stretch_body.transport", "qualname": "unpack_string_t", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">s</span>, </span><span class=\"param\"><span class=\"n\">n</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.transport.unpack_int32_t", "modulename": "stretch_body.transport", "qualname": "unpack_int32_t", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">s</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.transport.unpack_uint32_t", "modulename": "stretch_body.transport", "qualname": "unpack_uint32_t", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">s</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.transport.unpack_int64_t", "modulename": "stretch_body.transport", "qualname": "unpack_int64_t", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">s</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.transport.unpack_uint64_t", "modulename": "stretch_body.transport", "qualname": "unpack_uint64_t", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">s</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.transport.unpack_int16_t", "modulename": "stretch_body.transport", "qualname": "unpack_int16_t", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">s</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.transport.unpack_uint16_t", "modulename": "stretch_body.transport", "qualname": "unpack_uint16_t", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">s</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.transport.unpack_uint8_t", "modulename": "stretch_body.transport", "qualname": "unpack_uint8_t", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">s</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.transport.unpack_float_t", "modulename": "stretch_body.transport", "qualname": "unpack_float_t", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">s</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.transport.unpack_double_t", "modulename": "stretch_body.transport", "qualname": "unpack_double_t", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">s</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.transport.pack_float_t", "modulename": "stretch_body.transport", "qualname": "pack_float_t", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">s</span>, </span><span class=\"param\"><span class=\"n\">sidx</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.transport.pack_double_t", "modulename": "stretch_body.transport", "qualname": "pack_double_t", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">s</span>, </span><span class=\"param\"><span class=\"n\">sidx</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.transport.pack_int32_t", "modulename": "stretch_body.transport", "qualname": "pack_int32_t", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">s</span>, </span><span class=\"param\"><span class=\"n\">sidx</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.transport.pack_uint32_t", "modulename": "stretch_body.transport", "qualname": "pack_uint32_t", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">s</span>, </span><span class=\"param\"><span class=\"n\">sidx</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.transport.pack_int16_t", "modulename": "stretch_body.transport", "qualname": "pack_int16_t", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">s</span>, </span><span class=\"param\"><span class=\"n\">sidx</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.transport.pack_uint16_t", "modulename": "stretch_body.transport", "qualname": "pack_uint16_t", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">s</span>, </span><span class=\"param\"><span class=\"n\">sidx</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.transport.pack_uint8_t", "modulename": "stretch_body.transport", "qualname": "pack_uint8_t", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">s</span>, </span><span class=\"param\"><span class=\"n\">sidx</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.version", "modulename": "stretch_body.version", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "stretch_body.wacc", "modulename": "stretch_body.wacc", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "stretch_body.wacc.WaccBase", "modulename": "stretch_body.wacc", "qualname": "WaccBase", "kind": "class", "doc": "<p>API to the Stretch wrist+accelerometer (Wacc) board\nThe Wacc has:\n-- 3-axis accelerometer reported as Ax,Ay,and Az\n-- Two digital inputs D0, D1\n-- Two digital outputs D2, D3\n-- One analog input: A0\n-- A single tap count based on the accelerometer</p>\n\n<p>ext_status_cb: Callback to handle custom status data\next_command_cb: Callback to handle custom command data</p>\n", "bases": "stretch_body.device.Device"}, {"fullname": "stretch_body.wacc.WaccBase.__init__", "modulename": "stretch_body.wacc", "qualname": "WaccBase.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">ext_status_cb</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">ext_command_cb</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">usb</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, {"fullname": "stretch_body.wacc.WaccBase.RPC_SET_WACC_CONFIG", "modulename": "stretch_body.wacc", "qualname": "WaccBase.RPC_SET_WACC_CONFIG", "kind": "variable", "doc": "<p></p>\n", "default_value": "1"}, {"fullname": "stretch_body.wacc.WaccBase.RPC_REPLY_WACC_CONFIG", "modulename": "stretch_body.wacc", "qualname": "WaccBase.RPC_REPLY_WACC_CONFIG", "kind": "variable", "doc": "<p></p>\n", "default_value": "2"}, {"fullname": "stretch_body.wacc.WaccBase.RPC_GET_WACC_STATUS", "modulename": "stretch_body.wacc", "qualname": "WaccBase.RPC_GET_WACC_STATUS", "kind": "variable", "doc": "<p></p>\n", "default_value": "3"}, {"fullname": "stretch_body.wacc.WaccBase.RPC_REPLY_WACC_STATUS", "modulename": "stretch_body.wacc", "qualname": "WaccBase.RPC_REPLY_WACC_STATUS", "kind": "variable", "doc": "<p></p>\n", "default_value": "4"}, {"fullname": "stretch_body.wacc.WaccBase.RPC_SET_WACC_COMMAND", "modulename": "stretch_body.wacc", "qualname": "WaccBase.RPC_SET_WACC_COMMAND", "kind": "variable", "doc": "<p></p>\n", "default_value": "5"}, {"fullname": "stretch_body.wacc.WaccBase.RPC_REPLY_WACC_COMMAND", "modulename": "stretch_body.wacc", "qualname": "WaccBase.RPC_REPLY_WACC_COMMAND", "kind": "variable", "doc": "<p></p>\n", "default_value": "6"}, {"fullname": "stretch_body.wacc.WaccBase.RPC_GET_WACC_BOARD_INFO", "modulename": "stretch_body.wacc", "qualname": "WaccBase.RPC_GET_WACC_BOARD_INFO", "kind": "variable", "doc": "<p></p>\n", "default_value": "7"}, {"fullname": "stretch_body.wacc.WaccBase.RPC_REPLY_WACC_BOARD_INFO", "modulename": "stretch_body.wacc", "qualname": "WaccBase.RPC_REPLY_WACC_BOARD_INFO", "kind": "variable", "doc": "<p></p>\n", "default_value": "8"}, {"fullname": "stretch_body.wacc.WaccBase.RPC_READ_TRACE", "modulename": "stretch_body.wacc", "qualname": "WaccBase.RPC_READ_TRACE", "kind": "variable", "doc": "<p></p>\n", "default_value": "9"}, {"fullname": "stretch_body.wacc.WaccBase.RPC_REPLY_READ_TRACE", "modulename": "stretch_body.wacc", "qualname": "WaccBase.RPC_REPLY_READ_TRACE", "kind": "variable", "doc": "<p></p>\n", "default_value": "10"}, {"fullname": "stretch_body.wacc.WaccBase.RPC_LOAD_TEST_PUSH", "modulename": "stretch_body.wacc", "qualname": "WaccBase.RPC_LOAD_TEST_PUSH", "kind": "variable", "doc": "<p></p>\n", "default_value": "11"}, {"fullname": "stretch_body.wacc.WaccBase.RPC_REPLY_LOAD_TEST_PUSH", "modulename": "stretch_body.wacc", "qualname": "WaccBase.RPC_REPLY_LOAD_TEST_PUSH", "kind": "variable", "doc": "<p></p>\n", "default_value": "12"}, {"fullname": "stretch_body.wacc.WaccBase.RPC_LOAD_TEST_PULL", "modulename": "stretch_body.wacc", "qualname": "WaccBase.RPC_LOAD_TEST_PULL", "kind": "variable", "doc": "<p></p>\n", "default_value": "13"}, {"fullname": "stretch_body.wacc.WaccBase.RPC_REPLY_LOAD_TEST_PULL", "modulename": "stretch_body.wacc", "qualname": "WaccBase.RPC_REPLY_LOAD_TEST_PULL", "kind": "variable", "doc": "<p></p>\n", "default_value": "14"}, {"fullname": "stretch_body.wacc.WaccBase.TRIGGER_BOARD_RESET", "modulename": "stretch_body.wacc", "qualname": "WaccBase.TRIGGER_BOARD_RESET", "kind": "variable", "doc": "<p></p>\n", "default_value": "1"}, {"fullname": "stretch_body.wacc.WaccBase.TRIGGER_ENABLE_TRACE", "modulename": "stretch_body.wacc", "qualname": "WaccBase.TRIGGER_ENABLE_TRACE", "kind": "variable", "doc": "<p></p>\n", "default_value": "2"}, {"fullname": "stretch_body.wacc.WaccBase.TRIGGER_DISABLE_TRACE", "modulename": "stretch_body.wacc", "qualname": "WaccBase.TRIGGER_DISABLE_TRACE", "kind": "variable", "doc": "<p></p>\n", "default_value": "4"}, {"fullname": "stretch_body.wacc.WaccBase.STATE_IS_TRACE_ON", "modulename": "stretch_body.wacc", "qualname": "WaccBase.STATE_IS_TRACE_ON", "kind": "variable", "doc": "<p></p>\n", "default_value": "1"}, {"fullname": "stretch_body.wacc.WaccBase.TRACE_TYPE_STATUS", "modulename": "stretch_body.wacc", "qualname": "WaccBase.TRACE_TYPE_STATUS", "kind": "variable", "doc": "<p></p>\n", "default_value": "0"}, {"fullname": "stretch_body.wacc.WaccBase.TRACE_TYPE_DEBUG", "modulename": "stretch_body.wacc", "qualname": "WaccBase.TRACE_TYPE_DEBUG", "kind": "variable", "doc": "<p></p>\n", "default_value": "1"}, {"fullname": "stretch_body.wacc.WaccBase.TRACE_TYPE_PRINT", "modulename": "stretch_body.wacc", "qualname": "WaccBase.TRACE_TYPE_PRINT", "kind": "variable", "doc": "<p></p>\n", "default_value": "2"}, {"fullname": "stretch_body.wacc.WaccBase.ext_status_cb", "modulename": "stretch_body.wacc", "qualname": "WaccBase.ext_status_cb", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.wacc.WaccBase.ext_command_cb", "modulename": "stretch_body.wacc", "qualname": "WaccBase.ext_command_cb", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.wacc.WaccBase.transport", "modulename": "stretch_body.wacc", "qualname": "WaccBase.transport", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.wacc.WaccBase.status", "modulename": "stretch_body.wacc", "qualname": "WaccBase.status", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.wacc.WaccBase.status_zero", "modulename": "stretch_body.wacc", "qualname": "WaccBase.status_zero", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.wacc.WaccBase.board_info", "modulename": "stretch_body.wacc", "qualname": "WaccBase.board_info", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.wacc.WaccBase.hw_valid", "modulename": "stretch_body.wacc", "qualname": "WaccBase.hw_valid", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.wacc.WaccBase.load_test_payload", "modulename": "stretch_body.wacc", "qualname": "WaccBase.load_test_payload", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.wacc.WaccBase.startup", "modulename": "stretch_body.wacc", "qualname": "WaccBase.startup", "kind": "function", "doc": "<p>Starts machinery required to interface with this device</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>threaded : bool\n    whether a thread manages hardware polling/pushing in the background</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>bool\n    whether the startup procedure succeeded</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">threaded</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.wacc.WaccBase.stop", "modulename": "stretch_body.wacc", "qualname": "WaccBase.stop", "kind": "function", "doc": "<p>Shuts down machinery started in <code>startup()</code></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.wacc.WaccBase.set_D2", "modulename": "stretch_body.wacc", "qualname": "WaccBase.set_D2", "kind": "function", "doc": "<p>Set the Digital Out 2 on the Wacc expansion header</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">on</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.wacc.WaccBase.set_D3", "modulename": "stretch_body.wacc", "qualname": "WaccBase.set_D3", "kind": "function", "doc": "<p>Set the Digital Out 3 on the Wacc expansion header</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">on</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.wacc.WaccBase.pull_status", "modulename": "stretch_body.wacc", "qualname": "WaccBase.pull_status", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">exiting</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.wacc.WaccBase.pull_status_async", "modulename": "stretch_body.wacc", "qualname": "WaccBase.pull_status_async", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">exiting</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "stretch_body.wacc.WaccBase.push_command_async", "modulename": "stretch_body.wacc", "qualname": "WaccBase.push_command_async", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">exiting</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, {"fullname": "stretch_body.wacc.WaccBase.push_command", "modulename": "stretch_body.wacc", "qualname": "WaccBase.push_command", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">exiting</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.wacc.WaccBase.pretty_print", "modulename": "stretch_body.wacc", "qualname": "WaccBase.pretty_print", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.wacc.WaccBase.board_reset", "modulename": "stretch_body.wacc", "qualname": "WaccBase.board_reset", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.wacc.WaccBase.unpack_board_info", "modulename": "stretch_body.wacc", "qualname": "WaccBase.unpack_board_info", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">s</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.wacc.WaccBase.pack_command", "modulename": "stretch_body.wacc", "qualname": "WaccBase.pack_command", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">s</span>, </span><span class=\"param\"><span class=\"n\">sidx</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.wacc.WaccBase.pack_config", "modulename": "stretch_body.wacc", "qualname": "WaccBase.pack_config", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">s</span>, </span><span class=\"param\"><span class=\"n\">sidx</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.wacc.WaccBase.unpack_status", "modulename": "stretch_body.wacc", "qualname": "WaccBase.unpack_status", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">s</span>, </span><span class=\"param\"><span class=\"n\">unpack_to</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.wacc.WaccBase.read_firmware_trace", "modulename": "stretch_body.wacc", "qualname": "WaccBase.read_firmware_trace", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.wacc.WaccBase.rpc_read_firmware_trace_reply", "modulename": "stretch_body.wacc", "qualname": "WaccBase.rpc_read_firmware_trace_reply", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">reply</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.wacc.WaccBase.enable_firmware_trace", "modulename": "stretch_body.wacc", "qualname": "WaccBase.enable_firmware_trace", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.wacc.WaccBase.disable_firmware_trace", "modulename": "stretch_body.wacc", "qualname": "WaccBase.disable_firmware_trace", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.wacc.WaccBase.push_load_test", "modulename": "stretch_body.wacc", "qualname": "WaccBase.push_load_test", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.wacc.WaccBase.pull_load_test", "modulename": "stretch_body.wacc", "qualname": "WaccBase.pull_load_test", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.wacc.WaccBase.rpc_enable_transport_v1_reply", "modulename": "stretch_body.wacc", "qualname": "WaccBase.rpc_enable_transport_v1_reply", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">reply</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.wacc.WaccBase.rpc_board_info_reply", "modulename": "stretch_body.wacc", "qualname": "WaccBase.rpc_board_info_reply", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">reply</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.wacc.WaccBase.rpc_command_reply", "modulename": "stretch_body.wacc", "qualname": "WaccBase.rpc_command_reply", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">reply</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.wacc.WaccBase.rpc_config_reply", "modulename": "stretch_body.wacc", "qualname": "WaccBase.rpc_config_reply", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">reply</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.wacc.WaccBase.rpc_status_reply", "modulename": "stretch_body.wacc", "qualname": "WaccBase.rpc_status_reply", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">reply</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.wacc.Wacc_Protocol_P0", "modulename": "stretch_body.wacc", "qualname": "Wacc_Protocol_P0", "kind": "class", "doc": "<p>API to the Stretch wrist+accelerometer (Wacc) board\nThe Wacc has:\n-- 3-axis accelerometer reported as Ax,Ay,and Az\n-- Two digital inputs D0, D1\n-- Two digital outputs D2, D3\n-- One analog input: A0\n-- A single tap count based on the accelerometer</p>\n\n<p>ext_status_cb: Callback to handle custom status data\next_command_cb: Callback to handle custom command data</p>\n", "bases": "WaccBase"}, {"fullname": "stretch_body.wacc.Wacc_Protocol_P0.unpack_status", "modulename": "stretch_body.wacc", "qualname": "Wacc_Protocol_P0.unpack_status", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">s</span>, </span><span class=\"param\"><span class=\"n\">unpack_to</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.wacc.Wacc_Protocol_P1", "modulename": "stretch_body.wacc", "qualname": "Wacc_Protocol_P1", "kind": "class", "doc": "<p>API to the Stretch wrist+accelerometer (Wacc) board\nThe Wacc has:\n-- 3-axis accelerometer reported as Ax,Ay,and Az\n-- Two digital inputs D0, D1\n-- Two digital outputs D2, D3\n-- One analog input: A0\n-- A single tap count based on the accelerometer</p>\n\n<p>ext_status_cb: Callback to handle custom status data\next_command_cb: Callback to handle custom command data</p>\n", "bases": "WaccBase"}, {"fullname": "stretch_body.wacc.Wacc_Protocol_P1.unpack_status", "modulename": "stretch_body.wacc", "qualname": "Wacc_Protocol_P1.unpack_status", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">s</span>, </span><span class=\"param\"><span class=\"n\">unpack_to</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.wacc.Wacc_Protocol_P2", "modulename": "stretch_body.wacc", "qualname": "Wacc_Protocol_P2", "kind": "class", "doc": "<p>API to the Stretch wrist+accelerometer (Wacc) board\nThe Wacc has:\n-- 3-axis accelerometer reported as Ax,Ay,and Az\n-- Two digital inputs D0, D1\n-- Two digital outputs D2, D3\n-- One analog input: A0\n-- A single tap count based on the accelerometer</p>\n\n<p>ext_status_cb: Callback to handle custom status data\next_command_cb: Callback to handle custom command data</p>\n", "bases": "WaccBase"}, {"fullname": "stretch_body.wacc.Wacc_Protocol_P2.unpack_status", "modulename": "stretch_body.wacc", "qualname": "Wacc_Protocol_P2.unpack_status", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">s</span>, </span><span class=\"param\"><span class=\"n\">unpack_to</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.wacc.Wacc_Protocol_P2.read_firmware_trace", "modulename": "stretch_body.wacc", "qualname": "Wacc_Protocol_P2.read_firmware_trace", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.wacc.Wacc_Protocol_P2.unpack_debug_trace", "modulename": "stretch_body.wacc", "qualname": "Wacc_Protocol_P2.unpack_debug_trace", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">s</span>, </span><span class=\"param\"><span class=\"n\">unpack_to</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.wacc.Wacc_Protocol_P2.unpack_print_trace", "modulename": "stretch_body.wacc", "qualname": "Wacc_Protocol_P2.unpack_print_trace", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">s</span>, </span><span class=\"param\"><span class=\"n\">unpack_to</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.wacc.Wacc_Protocol_P2.rpc_read_firmware_trace_reply", "modulename": "stretch_body.wacc", "qualname": "Wacc_Protocol_P2.rpc_read_firmware_trace_reply", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">reply</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.wacc.Wacc_Protocol_P2.enable_firmware_trace", "modulename": "stretch_body.wacc", "qualname": "Wacc_Protocol_P2.enable_firmware_trace", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.wacc.Wacc_Protocol_P2.disable_firmware_trace", "modulename": "stretch_body.wacc", "qualname": "Wacc_Protocol_P2.disable_firmware_trace", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.wacc.Wacc_Protocol_P3", "modulename": "stretch_body.wacc", "qualname": "Wacc_Protocol_P3", "kind": "class", "doc": "<p>API to the Stretch wrist+accelerometer (Wacc) board\nThe Wacc has:\n-- 3-axis accelerometer reported as Ax,Ay,and Az\n-- Two digital inputs D0, D1\n-- Two digital outputs D2, D3\n-- One analog input: A0\n-- A single tap count based on the accelerometer</p>\n\n<p>ext_status_cb: Callback to handle custom status data\next_command_cb: Callback to handle custom command data</p>\n", "bases": "WaccBase"}, {"fullname": "stretch_body.wacc.Wacc_Protocol_P3.push_load_test", "modulename": "stretch_body.wacc", "qualname": "Wacc_Protocol_P3.push_load_test", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.wacc.Wacc_Protocol_P3.pull_load_test", "modulename": "stretch_body.wacc", "qualname": "Wacc_Protocol_P3.pull_load_test", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.wacc.Wacc_Protocol_P3.rpc_load_test_push_reply", "modulename": "stretch_body.wacc", "qualname": "Wacc_Protocol_P3.rpc_load_test_push_reply", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">reply</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.wacc.Wacc_Protocol_P3.rpc_load_test_pull_reply", "modulename": "stretch_body.wacc", "qualname": "Wacc_Protocol_P3.rpc_load_test_pull_reply", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">reply</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.wacc.Wacc", "modulename": "stretch_body.wacc", "qualname": "Wacc", "kind": "class", "doc": "<p>API to the Stretch Wrist Accelerometer (Wacc) Board</p>\n", "bases": "WaccBase"}, {"fullname": "stretch_body.wacc.Wacc.__init__", "modulename": "stretch_body.wacc", "qualname": "Wacc.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">usb</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, {"fullname": "stretch_body.wacc.Wacc.supported_protocols", "modulename": "stretch_body.wacc", "qualname": "Wacc.supported_protocols", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.wacc.Wacc.startup", "modulename": "stretch_body.wacc", "qualname": "Wacc.startup", "kind": "function", "doc": "<p>First determine which protocol version the uC firmware is running.\nBased on that version, replaces PimuBase class inheritance with a inheritance to a child class of PimuBase that supports that protocol</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">threaded</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.wrist_yaw", "modulename": "stretch_body.wrist_yaw", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "stretch_body.wrist_yaw.WristYaw", "modulename": "stretch_body.wrist_yaw", "qualname": "WristYaw", "kind": "class", "doc": "<p>API to the Stretch wrist yaw joint</p>\n", "bases": "stretch_body.dynamixel_hello_XL430.DynamixelHelloXL430"}, {"fullname": "stretch_body.wrist_yaw.WristYaw.__init__", "modulename": "stretch_body.wrist_yaw", "qualname": "WristYaw.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">chain</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">usb</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, {"fullname": "stretch_body.wrist_yaw.WristYaw.poses", "modulename": "stretch_body.wrist_yaw", "qualname": "WristYaw.poses", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.wrist_yaw.WristYaw.startup", "modulename": "stretch_body.wrist_yaw", "qualname": "WristYaw.startup", "kind": "function", "doc": "<p>Starts machinery required to interface with this device</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>threaded : bool\n    whether a thread manages hardware polling/pushing in the background</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>bool\n    whether the startup procedure succeeded</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">threaded</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.wrist_yaw.WristYaw.home", "modulename": "stretch_body.wrist_yaw", "qualname": "WristYaw.home", "kind": "function", "doc": "<p>Home to hardstops</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.wrist_yaw.WristYaw.pose", "modulename": "stretch_body.wrist_yaw", "qualname": "WristYaw.pose", "kind": "function", "doc": "<p>p: Dictionary key to named pose (eg 'forward')\nv_r: velocityfor trapezoidal motion profile (rad/s).\na_r: acceleration for trapezoidal motion profile (rad/s^2)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">p</span>, </span><span class=\"param\"><span class=\"n\">v_r</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">a_r</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.wrist_yaw.WristYaw.step_sentry", "modulename": "stretch_body.wrist_yaw", "qualname": "WristYaw.step_sentry", "kind": "function", "doc": "<p>This sentry attempts to prevent the wrist yaw servo from overheating\nif it is pushing against an object for too long. It works by backing off\nthe commanded position from the current position, so as to lower the steady\nstate error of the PID controller.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">robot</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.xbox_controller", "modulename": "stretch_body.xbox_controller", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "stretch_body.xbox_controller.Stick", "modulename": "stretch_body.xbox_controller", "qualname": "Stick", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "stretch_body.xbox_controller.Stick.x", "modulename": "stretch_body.xbox_controller", "qualname": "Stick.x", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.xbox_controller.Stick.y", "modulename": "stretch_body.xbox_controller", "qualname": "Stick.y", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.xbox_controller.Stick.norm", "modulename": "stretch_body.xbox_controller", "qualname": "Stick.norm", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.xbox_controller.Stick.update_x", "modulename": "stretch_body.xbox_controller", "qualname": "Stick.update_x", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">abs_x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.xbox_controller.Stick.update_y", "modulename": "stretch_body.xbox_controller", "qualname": "Stick.update_y", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">abs_y</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.xbox_controller.Stick.print_string", "modulename": "stretch_body.xbox_controller", "qualname": "Stick.print_string", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.xbox_controller.Button", "modulename": "stretch_body.xbox_controller", "qualname": "Button", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "stretch_body.xbox_controller.Button.pressed", "modulename": "stretch_body.xbox_controller", "qualname": "Button.pressed", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.xbox_controller.Button.update", "modulename": "stretch_body.xbox_controller", "qualname": "Button.update", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">state</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.xbox_controller.Button.print_string", "modulename": "stretch_body.xbox_controller", "qualname": "Button.print_string", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.xbox_controller.Trigger", "modulename": "stretch_body.xbox_controller", "qualname": "Trigger", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "stretch_body.xbox_controller.Trigger.__init__", "modulename": "stretch_body.xbox_controller", "qualname": "Trigger.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">xbox_one</span><span class=\"o\">=</span><span class=\"kc\">False</span></span>)</span>"}, {"fullname": "stretch_body.xbox_controller.Trigger.norm", "modulename": "stretch_body.xbox_controller", "qualname": "Trigger.norm", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.xbox_controller.Trigger.pulled", "modulename": "stretch_body.xbox_controller", "qualname": "Trigger.pulled", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.xbox_controller.Trigger.update", "modulename": "stretch_body.xbox_controller", "qualname": "Trigger.update", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">state</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.xbox_controller.Trigger.print_string", "modulename": "stretch_body.xbox_controller", "qualname": "Trigger.print_string", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.xbox_controller.XboxController", "modulename": "stretch_body.xbox_controller", "qualname": "XboxController", "kind": "class", "doc": "<p>Successfully tested with the following controllers:\n     + Xbox One Controller connected using a USB cable (change xbox_one parameter to True for full 10 bit trigger information)\n     + EasySMX wireless controller set to appropriate mode (Xbox 360 mode with upper half of ring LED illuminated - top two LED quarter circle arcs)\n     + JAMSWALL Xbox 360 Wireless Controller (Sometimes issues would occur after inactivity that would seem to require unplugging and replugging the USB dongle.)</p>\n\n<p>Unsuccessful tests:\n     - Xbox One Controller connected via Bluetooth\n     - Xbox 360 Controller connected with an Insten Wireless Controller USB Charging Cable\n     +/- VOYEE Wired Xbox 360 Controller mostly worked, but it had various issues including false middle LED button presses, phantom shoulder button presses, and low joystick sensitivity that made small motions more difficult to execute.</p>\n"}, {"fullname": "stretch_body.xbox_controller.XboxController.__init__", "modulename": "stretch_body.xbox_controller", "qualname": "XboxController.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">print_events</span><span class=\"o\">=</span><span class=\"kc\">False</span></span>)</span>"}, {"fullname": "stretch_body.xbox_controller.XboxController.print_events", "modulename": "stretch_body.xbox_controller", "qualname": "XboxController.print_events", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.xbox_controller.XboxController.left_stick", "modulename": "stretch_body.xbox_controller", "qualname": "XboxController.left_stick", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.xbox_controller.XboxController.right_stick", "modulename": "stretch_body.xbox_controller", "qualname": "XboxController.right_stick", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.xbox_controller.XboxController.left_stick_button", "modulename": "stretch_body.xbox_controller", "qualname": "XboxController.left_stick_button", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.xbox_controller.XboxController.right_stick_button", "modulename": "stretch_body.xbox_controller", "qualname": "XboxController.right_stick_button", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.xbox_controller.XboxController.middle_led_ring_button", "modulename": "stretch_body.xbox_controller", "qualname": "XboxController.middle_led_ring_button", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.xbox_controller.XboxController.bottom_button", "modulename": "stretch_body.xbox_controller", "qualname": "XboxController.bottom_button", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.xbox_controller.XboxController.top_button", "modulename": "stretch_body.xbox_controller", "qualname": "XboxController.top_button", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.xbox_controller.XboxController.left_button", "modulename": "stretch_body.xbox_controller", "qualname": "XboxController.left_button", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.xbox_controller.XboxController.right_button", "modulename": "stretch_body.xbox_controller", "qualname": "XboxController.right_button", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.xbox_controller.XboxController.right_shoulder_button", "modulename": "stretch_body.xbox_controller", "qualname": "XboxController.right_shoulder_button", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.xbox_controller.XboxController.left_shoulder_button", "modulename": "stretch_body.xbox_controller", "qualname": "XboxController.left_shoulder_button", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.xbox_controller.XboxController.select_button", "modulename": "stretch_body.xbox_controller", "qualname": "XboxController.select_button", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.xbox_controller.XboxController.start_button", "modulename": "stretch_body.xbox_controller", "qualname": "XboxController.start_button", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.xbox_controller.XboxController.left_trigger", "modulename": "stretch_body.xbox_controller", "qualname": "XboxController.left_trigger", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.xbox_controller.XboxController.right_trigger", "modulename": "stretch_body.xbox_controller", "qualname": "XboxController.right_trigger", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.xbox_controller.XboxController.left_pad", "modulename": "stretch_body.xbox_controller", "qualname": "XboxController.left_pad", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.xbox_controller.XboxController.right_pad", "modulename": "stretch_body.xbox_controller", "qualname": "XboxController.right_pad", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.xbox_controller.XboxController.top_pad", "modulename": "stretch_body.xbox_controller", "qualname": "XboxController.top_pad", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.xbox_controller.XboxController.bottom_pad", "modulename": "stretch_body.xbox_controller", "qualname": "XboxController.bottom_pad", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.xbox_controller.XboxController.lock", "modulename": "stretch_body.xbox_controller", "qualname": "XboxController.lock", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.xbox_controller.XboxController.thread", "modulename": "stretch_body.xbox_controller", "qualname": "XboxController.thread", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "stretch_body.xbox_controller.XboxController.start", "modulename": "stretch_body.xbox_controller", "qualname": "XboxController.start", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.xbox_controller.XboxController.stop", "modulename": "stretch_body.xbox_controller", "qualname": "XboxController.stop", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.xbox_controller.XboxController.update", "modulename": "stretch_body.xbox_controller", "qualname": "XboxController.update", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.xbox_controller.XboxController.get_state", "modulename": "stretch_body.xbox_controller", "qualname": "XboxController.get_state", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "stretch_body.xbox_controller.main", "modulename": "stretch_body.xbox_controller", "qualname": "main", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}];

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();